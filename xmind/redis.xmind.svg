<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="4610" height="10847" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 4610 10847"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1926.5,5615.5A160,2022,0,0,1,2086.5,3593.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2184.5,3593.5C2199.5,3593.5,2199.5,2700.5,2214.5,2700.5L2268.5,2700.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2268.5,2700.5C2283.5,2700.5,2283.5,2549.5,2298.5,2549.5L2352.5,2549.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2352.5,2549.5C2367.5,2549.5,2367.5,2484.5,2382.5,2484.5L2446.5,2484.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2446.5,2484.5C2461.5,2484.5,2461.5,2458.5,2476.5,2458.5L2692.5,2458.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2446.5,2484.5C2461.5,2484.5,2461.5,2510.5,2476.5,2510.5L2662.5,2510.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2352.5,2549.5C2367.5,2549.5,2367.5,2562.5,2382.5,2562.5L2452.5,2562.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2452.5,2562.5C2467.5,2562.5,2467.5,2562.5,2482.5,2562.5L2698.5,2562.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2352.5,2549.5C2367.5,2549.5,2367.5,2614.5,2382.5,2614.5L2467.5,2614.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2467.5,2614.5C2482.5,2614.5,2482.5,2614.5,2497.5,2614.5L2697.5,2614.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2268.5,2700.5C2283.5,2700.5,2283.5,2851.5,2298.5,2851.5L2468.5,2851.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2468.5,2851.5C2483.5,2851.5,2483.5,2724.5,2498.5,2724.5L2564.5,2724.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2564.5,2724.5C2579.5,2724.5,2579.5,2666.5,2594.5,2666.5L2720.5,2666.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2720.5,2666.5C2735.5,2666.5,2735.5,2666.5,2750.5,2666.5L3149.5,2666.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2564.5,2724.5C2579.5,2724.5,2579.5,2783.5,2594.5,2783.5L2732.5,2783.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2732.5,2783.5C2747.5,2783.5,2747.5,2744.5,2762.5,2744.5L2980.5,2744.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2980.5,2744.5C2995.5,2744.5,2995.5,2718.5,3010.5,2718.5L3929.5,2718.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2980.5,2744.5C2995.5,2744.5,2995.5,2770.5,3010.5,2770.5L3088.5,2770.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3088.5,2770.5C3103.5,2770.5,3103.5,2770.5,3118.5,2770.5L3968.5,2770.5"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2732.5,2783.5C2747.5,2783.5,2747.5,2822.5,2762.5,2822.5L2864.5,2822.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2864.5,2822.5C2879.5,2822.5,2879.5,2822.5,2894.5,2822.5L3837.5,2822.5"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2468.5,2851.5C2483.5,2851.5,2483.5,2900.5,2498.5,2900.5L2564.5,2900.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2564.5,2900.5C2579.5,2900.5,2579.5,2874.5,2594.5,2874.5L2708.5,2874.5"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2708.5,2874.5C2723.5,2874.5,2723.5,2874.5,2738.5,2874.5L3301.5,2874.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2564.5,2900.5C2579.5,2900.5,2579.5,2926.5,2594.5,2926.5L2684.5,2926.5"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2684.5,2926.5C2699.5,2926.5,2699.5,2926.5,2714.5,2926.5L3548.5,2926.5"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2468.5,2851.5C2483.5,2851.5,2483.5,2978.5,2498.5,2978.5L2595.5,2978.5"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2595.5,2978.5C2610.5,2978.5,2610.5,2978.5,2625.5,2978.5L2946.5,2978.5"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2184.5,3593.5C2199.5,3593.5,2199.5,3030.5,2214.5,3030.5L2268.5,3030.5"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2184.5,3593.5C2199.5,3593.5,2199.5,3677.5,2214.5,3677.5L2297.5,3677.5"></path><path id="kity_path_91" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2297.5,3677.5C2312.5,3677.5,2312.5,3269.5,2327.5,3269.5L2381.5,3269.5"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2381.5,3269.5C2396.5,3269.5,2396.5,3100.5,2411.5,3100.5L2529.5,3100.5"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2529.5,3100.5C2544.5,3100.5,2544.5,3091.5,2559.5,3091.5L2637.5,3091.5"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2637.5,3091.5C2652.5,3091.5,2652.5,3091.5,2667.5,3091.5L2775.5,3091.5"></path><path id="kity_path_99" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2381.5,3269.5C2396.5,3269.5,2396.5,3170.5,2411.5,3170.5L2522.5,3170.5"></path><path id="kity_path_101" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2381.5,3269.5C2396.5,3269.5,2396.5,3240.5,2411.5,3240.5L2609.5,3240.5"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2381.5,3269.5C2396.5,3269.5,2396.5,3456.5,2411.5,3456.5L2512.5,3456.5"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2512.5,3456.5C2527.5,3456.5,2527.5,3310.5,2542.5,3310.5L2755.5,3310.5"></path><path id="kity_path_107" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2512.5,3456.5C2527.5,3456.5,2527.5,3602.5,2542.5,3602.5L2648.5,3602.5"></path><path id="kity_path_109" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2648.5,3602.5C2663.5,3602.5,2663.5,3488.5,2678.5,3488.5L2802.5,3488.5"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2802.5,3488.5C2817.5,3488.5,2817.5,3363.5,2832.5,3363.5L3018.5,3363.5"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2802.5,3488.5C2817.5,3488.5,2817.5,3613.5,2832.5,3613.5L3184.5,3613.5"></path><path id="kity_path_115" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2648.5,3602.5C2663.5,3602.5,2663.5,3665.5,2678.5,3665.5L2811.5,3665.5"></path><path id="kity_path_117" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2811.5,3665.5C2826.5,3665.5,2826.5,3665.5,2841.5,3665.5L2955.5,3665.5"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2648.5,3602.5C2663.5,3602.5,2663.5,3717.5,2678.5,3717.5L2816.5,3717.5"></path><path id="kity_path_121" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2816.5,3717.5C2831.5,3717.5,2831.5,3717.5,2846.5,3717.5L2996.5,3717.5"></path><path id="kity_path_123" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2297.5,3677.5C2312.5,3677.5,2312.5,3786.5,2327.5,3786.5L2614.5,3786.5"></path><path id="kity_path_125" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2297.5,3677.5C2312.5,3677.5,2312.5,4085.5,2327.5,4085.5L2394.5,4085.5"></path><path id="kity_path_127" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2394.5,4085.5C2409.5,4085.5,2409.5,3890.5,2424.5,3890.5L2502.5,3890.5"></path><path id="kity_path_129" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2502.5,3890.5C2517.5,3890.5,2517.5,3838.5,2532.5,3838.5L3068.5,3838.5"></path><path id="kity_path_131" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2502.5,3890.5C2517.5,3890.5,2517.5,3890.5,2532.5,3890.5L3058.5,3890.5"></path><path id="kity_path_133" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3058.5,3890.5C3073.5,3890.5,3073.5,3890.5,3088.5,3890.5L3738.5,3890.5"></path><path id="kity_path_135" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2502.5,3890.5C2517.5,3890.5,2517.5,3942.5,2532.5,3942.5L2860.5,3942.5"></path><path id="kity_path_137" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2394.5,4085.5C2409.5,4085.5,2409.5,4085.5,2424.5,4085.5L2502.5,4085.5"></path><path id="kity_path_139" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2502.5,4085.5C2517.5,4085.5,2517.5,4020.5,2532.5,4020.5L2646.5,4020.5"></path><path id="kity_path_141" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2646.5,4020.5C2661.5,4020.5,2661.5,3994.5,2676.5,3994.5L2754.5,3994.5"></path><path id="kity_path_143" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2754.5,3994.5C2769.5,3994.5,2769.5,3994.5,2784.5,3994.5L3322.5,3994.5"></path><path id="kity_path_145" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2646.5,4020.5C2661.5,4020.5,2661.5,4046.5,2676.5,4046.5L2754.5,4046.5"></path><path id="kity_path_147" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2754.5,4046.5C2769.5,4046.5,2769.5,4046.5,2784.5,4046.5L3177.5,4046.5"></path><path id="kity_path_149" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2502.5,4085.5C2517.5,4085.5,2517.5,4098.5,2532.5,4098.5L2586.5,4098.5"></path><path id="kity_path_151" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2586.5,4098.5C2601.5,4098.5,2601.5,4098.5,2616.5,4098.5L3078.5,4098.5"></path><path id="kity_path_153" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2502.5,4085.5C2517.5,4085.5,2517.5,4150.5,2532.5,4150.5L2692.5,4150.5"></path><path id="kity_path_155" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2394.5,4085.5C2409.5,4085.5,2409.5,4280.5,2424.5,4280.5L2490.5,4280.5"></path><path id="kity_path_157" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2490.5,4280.5C2505.5,4280.5,2505.5,4280.5,2520.5,4280.5L2574.5,4280.5"></path><path id="kity_path_159" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2574.5,4280.5C2589.5,4280.5,2589.5,4202.5,2604.5,4202.5L2718.5,4202.5"></path><path id="kity_path_161" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2574.5,4280.5C2589.5,4280.5,2589.5,4254.5,2604.5,4254.5L2682.5,4254.5"></path><path id="kity_path_163" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2682.5,4254.5C2697.5,4254.5,2697.5,4254.5,2712.5,4254.5L3190.5,4254.5"></path><path id="kity_path_165" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2574.5,4280.5C2589.5,4280.5,2589.5,4306.5,2604.5,4306.5L2658.5,4306.5"></path><path id="kity_path_167" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2658.5,4306.5C2673.5,4306.5,2673.5,4306.5,2688.5,4306.5L3802.5,4306.5"></path><path id="kity_path_169" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2574.5,4280.5C2589.5,4280.5,2589.5,4358.5,2604.5,4358.5L2658.5,4358.5"></path><path id="kity_path_171" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2658.5,4358.5C2673.5,4358.5,2673.5,4358.5,2688.5,4358.5L3524.5,4358.5"></path><path id="kity_path_173" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2184.5,3593.5C2199.5,3593.5,2199.5,4410.5,2214.5,4410.5L2280.5,4410.5"></path><path id="kity_path_175" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2184.5,3593.5C2199.5,3593.5,2199.5,4462.5,2214.5,4462.5L2292.5,4462.5"></path><path id="kity_path_177" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2184.5,3593.5C2199.5,3593.5,2199.5,4514.5,2214.5,4514.5L2292.5,4514.5"></path><path id="kity_path_179" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1926.5,5615.5A160,645,0,0,1,2086.5,4970.5"></path><path id="kity_path_181" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2156.5,4970.5C2171.5,4970.5,2171.5,4675.5,2186.5,4675.5L2240.5,4675.5"></path><path id="kity_path_183" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,4675.5C2255.5,4675.5,2255.5,4774.5,2270.5,4774.5L2491.5,4774.5"></path><path id="kity_path_185" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2156.5,4970.5C2171.5,4970.5,2171.5,4930.5,2186.5,4930.5L2240.5,4930.5"></path><path id="kity_path_187" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,4930.5C2255.5,4930.5,2255.5,4826.5,2270.5,4826.5L2424.5,4826.5"></path><path id="kity_path_189" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,4930.5C2255.5,4930.5,2255.5,4878.5,2270.5,4878.5L2394.5,4878.5"></path><path id="kity_path_191" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,4930.5C2255.5,4930.5,2255.5,4930.5,2270.5,4930.5L2401.5,4930.5"></path><path id="kity_path_193" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,4930.5C2255.5,4930.5,2255.5,4982.5,2270.5,4982.5L2391.5,4982.5"></path><path id="kity_path_195" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,4930.5C2255.5,4930.5,2255.5,5034.5,2270.5,5034.5L2423.5,5034.5"></path><path id="kity_path_197" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2156.5,4970.5C2171.5,4970.5,2171.5,5086.5,2186.5,5086.5L2240.5,5086.5"></path><path id="kity_path_199" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2240.5,5086.5C2255.5,5086.5,2255.5,5086.5,2270.5,5086.5L2417.5,5086.5"></path><path id="kity_path_201" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2156.5,4970.5C2171.5,4970.5,2171.5,5138.5,2186.5,5138.5L2234.5,5138.5"></path><path id="kity_path_203" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2234.5,5138.5C2249.5,5138.5,2249.5,5138.5,2264.5,5138.5L2342.5,5138.5"></path><path id="kity_path_205" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2156.5,4970.5C2171.5,4970.5,2171.5,5216.5,2186.5,5216.5L2264.5,5216.5"></path><path id="kity_path_207" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2264.5,5216.5C2279.5,5216.5,2279.5,5190.5,2294.5,5190.5L2680.5,5190.5"></path><path id="kity_path_209" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2264.5,5216.5C2279.5,5216.5,2279.5,5242.5,2294.5,5242.5L2764.5,5242.5"></path><path id="kity_path_211" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2156.5,4970.5C2171.5,4970.5,2171.5,5294.5,2186.5,5294.5L2264.5,5294.5"></path><path id="kity_path_213" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2264.5,5294.5C2279.5,5294.5,2279.5,5294.5,2294.5,5294.5L2626.5,5294.5"></path><path id="kity_path_215" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1926.5,5615.5A160,2022,0,0,0,2086.5,7637.5"></path><path id="kity_path_217" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,5382.5,2228.5,5382.5L2342.5,5382.5"></path><path id="kity_path_219" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2342.5,5382.5C2357.5,5382.5,2357.5,5409.5,2372.5,5409.5L2600.5,5409.5"></path><path id="kity_path_221" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,5695.5,2228.5,5695.5L2306.5,5695.5"></path><path id="kity_path_223" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2306.5,5695.5C2321.5,5695.5,2321.5,5461.5,2336.5,5461.5L2598.5,5461.5"></path><path id="kity_path_225" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2306.5,5695.5C2321.5,5695.5,2321.5,5513.5,2336.5,5513.5L2765.5,5513.5"></path><path id="kity_path_227" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2306.5,5695.5C2321.5,5695.5,2321.5,5643.5,2336.5,5643.5L2414.5,5643.5"></path><path id="kity_path_229" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2414.5,5643.5C2429.5,5643.5,2429.5,5565.5,2444.5,5565.5L2522.5,5565.5"></path><path id="kity_path_231" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2522.5,5565.5C2537.5,5565.5,2537.5,5565.5,2552.5,5565.5L3040.5,5565.5"></path><path id="kity_path_233" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2414.5,5643.5C2429.5,5643.5,2429.5,5721.5,2444.5,5721.5L2522.5,5721.5"></path><path id="kity_path_235" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2522.5,5721.5C2537.5,5721.5,2537.5,5721.5,2552.5,5721.5L3253.5,5721.5"></path><path id="kity_path_237" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3253.5,5721.5C3268.5,5721.5,3268.5,5617.5,3283.5,5617.5L3445.5,5617.5"></path><path id="kity_path_239" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3253.5,5721.5C3268.5,5721.5,3268.5,5669.5,3283.5,5669.5L3627.5,5669.5"></path><path id="kity_path_241" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3253.5,5721.5C3268.5,5721.5,3268.5,5721.5,3283.5,5721.5L3481.5,5721.5"></path><path id="kity_path_243" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3253.5,5721.5C3268.5,5721.5,3268.5,5773.5,3283.5,5773.5L3503.5,5773.5"></path><path id="kity_path_245" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3253.5,5721.5C3268.5,5721.5,3268.5,5825.5,3283.5,5825.5L3745.5,5825.5"></path><path id="kity_path_247" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2306.5,5695.5C2321.5,5695.5,2321.5,5929.5,2336.5,5929.5L2559.5,5929.5"></path><path id="kity_path_249" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2559.5,5929.5C2574.5,5929.5,2574.5,5877.5,2589.5,5877.5L2759.5,5877.5"></path><path id="kity_path_251" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2559.5,5929.5C2574.5,5929.5,2574.5,5929.5,2589.5,5929.5L2829.5,5929.5"></path><path id="kity_path_253" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2559.5,5929.5C2574.5,5929.5,2574.5,5981.5,2589.5,5981.5L3045.5,5981.5"></path><path id="kity_path_255" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,6033.5,2228.5,6033.5L2318.5,6033.5"></path><path id="kity_path_257" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2318.5,6033.5C2333.5,6033.5,2333.5,6033.5,2348.5,6033.5L2626.5,6033.5"></path><path id="kity_path_259" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,6617.5,2228.5,6617.5L2294.5,6617.5"></path><path id="kity_path_261" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2294.5,6617.5C2309.5,6617.5,2309.5,6240.5,2324.5,6240.5L2379.5,6240.5"></path><path id="kity_path_263" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2379.5,6240.5C2394.5,6240.5,2394.5,6085.5,2409.5,6085.5L2487.5,6085.5"></path><path id="kity_path_265" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2379.5,6240.5C2394.5,6240.5,2394.5,6218.5,2409.5,6218.5L2596.5,6218.5"></path><path id="kity_path_267" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2596.5,6218.5C2611.5,6218.5,2611.5,6218.5,2626.5,6218.5L2704.5,6218.5"></path><path id="kity_path_269" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2704.5,6218.5C2719.5,6218.5,2719.5,6299.5,2734.5,6299.5L3096.5,6299.5"></path><path id="kity_path_271" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2379.5,6240.5C2394.5,6240.5,2394.5,6395.5,2409.5,6395.5L2487.5,6395.5"></path><path id="kity_path_273" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2487.5,6395.5C2502.5,6395.5,2502.5,6351.5,2517.5,6351.5L3066.5,6351.5"></path><path id="kity_path_275" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2487.5,6395.5C2502.5,6395.5,2502.5,6439.5,2517.5,6439.5L3112.5,6439.5"></path><path id="kity_path_277" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2294.5,6617.5C2309.5,6617.5,2309.5,6994.5,2324.5,6994.5L2378.5,6994.5"></path><path id="kity_path_279" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2378.5,6994.5C2393.5,6994.5,2393.5,6491.5,2408.5,6491.5L2720.5,6491.5"></path><path id="kity_path_281" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2378.5,6994.5C2393.5,6994.5,2393.5,6720.5,2408.5,6720.5L2462.5,6720.5"></path><path id="kity_path_283" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,6720.5C2477.5,6720.5,2477.5,6632.5,2492.5,6632.5L2625.5,6632.5"></path><path id="kity_path_285" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,6720.5C2477.5,6720.5,2477.5,6684.5,2492.5,6684.5L2619.5,6684.5"></path><path id="kity_path_287" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2619.5,6684.5C2634.5,6684.5,2634.5,6684.5,2649.5,6684.5L2784.5,6684.5"></path><path id="kity_path_289" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,6720.5C2477.5,6720.5,2477.5,6736.5,2492.5,6736.5L2570.5,6736.5"></path><path id="kity_path_291" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,6736.5C2585.5,6736.5,2585.5,6736.5,2600.5,6736.5L3137.5,6736.5"></path><path id="kity_path_293" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,6720.5C2477.5,6720.5,2477.5,6898.5,2492.5,6898.5L2570.5,6898.5"></path><path id="kity_path_295" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,6898.5C2585.5,6898.5,2585.5,6898.5,2600.5,6898.5L3487.5,6898.5"></path><path id="kity_path_297" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3487.5,6898.5C3502.5,6898.5,3502.5,6798.5,3517.5,6798.5L3597.5,6798.5"></path><path id="kity_path_299" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3597.5,6798.5C3612.5,6798.5,3612.5,6807.5,3627.5,6807.5L4444.5,6807.5"></path><path id="kity_path_301" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3487.5,6898.5C3502.5,6898.5,3502.5,6868.5,3517.5,6868.5L3601.5,6868.5"></path><path id="kity_path_303" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3601.5,6868.5C3616.5,6868.5,3616.5,6877.5,3631.5,6877.5L4184.5,6877.5"></path><path id="kity_path_305" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3487.5,6898.5C3502.5,6898.5,3502.5,6938.5,3517.5,6938.5L3630.5,6938.5"></path><path id="kity_path_307" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3630.5,6938.5C3645.5,6938.5,3645.5,6947.5,3660.5,6947.5L4590.5,6947.5"></path><path id="kity_path_309" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3487.5,6898.5C3502.5,6898.5,3502.5,6999.5,3517.5,6999.5L3576.5,6999.5"></path><path id="kity_path_311" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2378.5,6994.5C2393.5,6994.5,2393.5,7077.5,2408.5,7077.5L2522.5,7077.5"></path><path id="kity_path_313" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2522.5,7077.5C2537.5,7077.5,2537.5,7051.5,2552.5,7051.5L2667.5,7051.5"></path><path id="kity_path_315" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2522.5,7077.5C2537.5,7077.5,2537.5,7103.5,2552.5,7103.5L3281.5,7103.5"></path><path id="kity_path_317" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2378.5,6994.5C2393.5,6994.5,2393.5,7498.5,2408.5,7498.5L2487.5,7498.5"></path><path id="kity_path_319" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2487.5,7498.5C2502.5,7498.5,2502.5,7285.5,2517.5,7285.5L2571.5,7285.5"></path><path id="kity_path_321" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2571.5,7285.5C2586.5,7285.5,2586.5,7155.5,2601.5,7155.5L2716.5,7155.5"></path><path id="kity_path_323" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2571.5,7285.5C2586.5,7285.5,2586.5,7207.5,2601.5,7207.5L2691.5,7207.5"></path><path id="kity_path_325" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2571.5,7285.5C2586.5,7285.5,2586.5,7259.5,2601.5,7259.5L2751.5,7259.5"></path><path id="kity_path_327" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2571.5,7285.5C2586.5,7285.5,2586.5,7311.5,2601.5,7311.5L2703.5,7311.5"></path><path id="kity_path_329" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2571.5,7285.5C2586.5,7285.5,2586.5,7363.5,2601.5,7363.5L2841.5,7363.5"></path><path id="kity_path_331" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2571.5,7285.5C2586.5,7285.5,2586.5,7415.5,2601.5,7415.5L2679.5,7415.5"></path><path id="kity_path_333" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2487.5,7498.5C2502.5,7498.5,2502.5,7485.5,2517.5,7485.5L2595.5,7485.5"></path><path id="kity_path_335" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2595.5,7485.5C2610.5,7485.5,2610.5,7503.5,2625.5,7503.5L3292.5,7503.5"></path><path id="kity_path_337" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2487.5,7498.5C2502.5,7498.5,2502.5,7581.5,2517.5,7581.5L2640.5,7581.5"></path><path id="kity_path_339" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2640.5,7581.5C2655.5,7581.5,2655.5,7555.5,2670.5,7555.5L2977.5,7555.5"></path><path id="kity_path_341" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2640.5,7581.5C2655.5,7581.5,2655.5,7607.5,2670.5,7607.5L3073.5,7607.5"></path><path id="kity_path_343" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2487.5,7498.5C2502.5,7498.5,2502.5,7711.5,2517.5,7711.5L2806.5,7711.5"></path><path id="kity_path_345" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2806.5,7711.5C2821.5,7711.5,2821.5,7659.5,2836.5,7659.5L2986.5,7659.5"></path><path id="kity_path_347" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2806.5,7711.5C2821.5,7711.5,2821.5,7711.5,2836.5,7711.5L3059.5,7711.5"></path><path id="kity_path_349" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3059.5,7711.5C3074.5,7711.5,3074.5,7711.5,3089.5,7711.5L3216.5,7711.5"></path><path id="kity_path_351" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2806.5,7711.5C2821.5,7711.5,2821.5,7763.5,2836.5,7763.5L3083.5,7763.5"></path><path id="kity_path_353" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3083.5,7763.5C3098.5,7763.5,3098.5,7763.5,3113.5,7763.5L3228.5,7763.5"></path><path id="kity_path_355" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,8071.5,2228.5,8071.5L2282.5,8071.5"></path><path id="kity_path_357" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2282.5,8071.5C2297.5,8071.5,2297.5,7893.5,2312.5,7893.5L2390.5,7893.5"></path><path id="kity_path_359" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2390.5,7893.5C2405.5,7893.5,2405.5,7893.5,2420.5,7893.5L2587.5,7893.5"></path><path id="kity_path_361" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2587.5,7893.5C2602.5,7893.5,2602.5,7815.5,2617.5,7815.5L2685.5,7815.5"></path><path id="kity_path_363" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2587.5,7893.5C2602.5,7893.5,2602.5,7867.5,2617.5,7867.5L2676.5,7867.5"></path><path id="kity_path_365" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2587.5,7893.5C2602.5,7893.5,2602.5,7919.5,2617.5,7919.5L2691.5,7919.5"></path><path id="kity_path_367" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2587.5,7893.5C2602.5,7893.5,2602.5,7971.5,2617.5,7971.5L2682.5,7971.5"></path><path id="kity_path_369" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2282.5,8071.5C2297.5,8071.5,2297.5,8249.5,2312.5,8249.5L2390.5,8249.5"></path><path id="kity_path_371" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2390.5,8249.5C2405.5,8249.5,2405.5,8050.5,2420.5,8050.5L2498.5,8050.5"></path><path id="kity_path_373" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2498.5,8050.5C2513.5,8050.5,2513.5,8024.5,2528.5,8024.5L2722.5,8024.5"></path><path id="kity_path_375" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2498.5,8050.5C2513.5,8050.5,2513.5,8076.5,2528.5,8076.5L2696.5,8076.5"></path><path id="kity_path_377" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2390.5,8249.5C2405.5,8249.5,2405.5,8154.5,2420.5,8154.5L2510.5,8154.5"></path><path id="kity_path_379" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2510.5,8154.5C2525.5,8154.5,2525.5,8128.5,2540.5,8128.5L2734.5,8128.5"></path><path id="kity_path_381" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2510.5,8154.5C2525.5,8154.5,2525.5,8180.5,2540.5,8180.5L2861.5,8180.5"></path><path id="kity_path_383" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2390.5,8249.5C2405.5,8249.5,2405.5,8232.5,2420.5,8232.5L3095.5,8232.5"></path><path id="kity_path_385" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2390.5,8249.5C2405.5,8249.5,2405.5,8449.5,2420.5,8449.5L2537.5,8449.5"></path><path id="kity_path_387" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8284.5,2567.5,8284.5L2951.5,8284.5"></path><path id="kity_path_389" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8336.5,2567.5,8336.5L2741.5,8336.5"></path><path id="kity_path_391" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8388.5,2567.5,8388.5L2753.5,8388.5"></path><path id="kity_path_393" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8440.5,2567.5,8440.5L2765.5,8440.5"></path><path id="kity_path_395" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8492.5,2567.5,8492.5L2729.5,8492.5"></path><path id="kity_path_397" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8544.5,2567.5,8544.5L2765.5,8544.5"></path><path id="kity_path_399" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2537.5,8449.5C2552.5,8449.5,2552.5,8614.5,2567.5,8614.5L2965.5,8614.5"></path><path id="kity_path_401" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,8665.5,2228.5,8665.5L2294.5,8665.5"></path><path id="kity_path_403" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2198.5,7637.5C2213.5,7637.5,2213.5,9920.5,2228.5,9920.5L2294.5,9920.5"></path><path id="kity_path_405" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2294.5,9920.5C2309.5,9920.5,2309.5,9117.5,2324.5,9117.5L2462.5,9117.5"></path><path id="kity_path_407" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,9117.5C2477.5,9117.5,2477.5,8753.5,2492.5,8753.5L2570.5,8753.5"></path><path id="kity_path_409" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,8753.5C2585.5,8753.5,2585.5,8718.5,2600.5,8718.5L2953.5,8718.5"></path><path id="kity_path_411" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,8753.5C2585.5,8753.5,2585.5,8788.5,2600.5,8788.5L2978.5,8788.5"></path><path id="kity_path_413" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,9117.5C2477.5,9117.5,2477.5,9005.5,2492.5,9005.5L2570.5,9005.5"></path><path id="kity_path_415" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,8858.5,2600.5,8858.5L2977.5,8858.5"></path><path id="kity_path_417" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,8910.5,2600.5,8910.5L2973.5,8910.5"></path><path id="kity_path_419" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,8962.5,2600.5,8962.5L2822.5,8962.5"></path><path id="kity_path_421" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,9014.5,2600.5,9014.5L3250.5,9014.5"></path><path id="kity_path_423" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,9066.5,2600.5,9066.5L3358.5,9066.5"></path><path id="kity_path_425" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,9118.5,2600.5,9118.5L3436.5,9118.5"></path><path id="kity_path_427" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9005.5C2585.5,9005.5,2585.5,9170.5,2600.5,9170.5L3104.5,9170.5"></path><path id="kity_path_429" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,9117.5C2477.5,9117.5,2477.5,9222.5,2492.5,9222.5L2546.5,9222.5"></path><path id="kity_path_431" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2546.5,9222.5C2561.5,9222.5,2561.5,9222.5,2576.5,9222.5L3201.5,9222.5"></path><path id="kity_path_433" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,9117.5C2477.5,9117.5,2477.5,9352.5,2492.5,9352.5L2570.5,9352.5"></path><path id="kity_path_435" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9352.5C2585.5,9352.5,2585.5,9274.5,2600.5,9274.5L2714.5,9274.5"></path><path id="kity_path_437" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9352.5C2585.5,9352.5,2585.5,9326.5,2600.5,9326.5L3254.5,9326.5"></path><path id="kity_path_439" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9352.5C2585.5,9352.5,2585.5,9378.5,2600.5,9378.5L2715.5,9378.5"></path><path id="kity_path_441" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9352.5C2585.5,9352.5,2585.5,9430.5,2600.5,9430.5L2786.5,9430.5"></path><path id="kity_path_443" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2462.5,9117.5C2477.5,9117.5,2477.5,9482.5,2492.5,9482.5L2972.5,9482.5"></path><path id="kity_path_445" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2294.5,9920.5C2309.5,9920.5,2309.5,10108.5,2324.5,10108.5L2441.5,10108.5"></path><path id="kity_path_447" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,9649.5,2471.5,9649.5L2609.5,9649.5"></path><path id="kity_path_449" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2609.5,9649.5C2624.5,9649.5,2624.5,9660.5,2639.5,9660.5L2917.5,9660.5"></path><path id="kity_path_451" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2609.5,9649.5C2624.5,9649.5,2624.5,9712.5,2639.5,9712.5L3383.5,9712.5"></path><path id="kity_path_453" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2609.5,9649.5C2624.5,9649.5,2624.5,9764.5,2639.5,9764.5L3416.5,9764.5"></path><path id="kity_path_455" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,9914.5,2471.5,9914.5L2570.5,9914.5"></path><path id="kity_path_457" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9914.5C2585.5,9914.5,2585.5,9924.5,2600.5,9924.5L3082.5,9924.5"></path><path id="kity_path_459" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2570.5,9914.5C2585.5,9914.5,2585.5,10012.5,2600.5,10012.5L3077.5,10012.5"></path><path id="kity_path_461" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3077.5,10012.5C3092.5,10012.5,3092.5,10048.5,3107.5,10048.5L3292.5,10048.5"></path><path id="kity_path_463" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10100.5,2471.5,10100.5L2657.5,10100.5"></path><path id="kity_path_465" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10152.5,2471.5,10152.5L2633.5,10152.5"></path><path id="kity_path_467" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10204.5,2471.5,10204.5L2598.5,10204.5"></path><path id="kity_path_469" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10256.5,2471.5,10256.5L2585.5,10256.5"></path><path id="kity_path_471" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10308.5,2471.5,10308.5L2585.5,10308.5"></path><path id="kity_path_473" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10360.5,2471.5,10360.5L2662.5,10360.5"></path><path id="kity_path_475" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10412.5,2471.5,10412.5L2645.5,10412.5"></path><path id="kity_path_477" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10464.5,2471.5,10464.5L2695.5,10464.5"></path><path id="kity_path_479" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10516.5,2471.5,10516.5L2585.5,10516.5"></path><path id="kity_path_481" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2441.5,10108.5C2456.5,10108.5,2456.5,10568.5,2471.5,10568.5L2643.5,10568.5"></path><path id="kity_path_483" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2294.5,9920.5C2309.5,9920.5,2309.5,10723.5,2324.5,10723.5L2426.5,10723.5"></path><path id="kity_path_485" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2426.5,10723.5C2441.5,10723.5,2441.5,10619.5,2456.5,10619.5L2606.5,10619.5"></path><path id="kity_path_487" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2426.5,10723.5C2441.5,10723.5,2441.5,10671.5,2456.5,10671.5L2558.5,10671.5"></path><path id="kity_path_489" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2426.5,10723.5C2441.5,10723.5,2441.5,10723.5,2456.5,10723.5L2606.5,10723.5"></path><path id="kity_path_491" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2426.5,10723.5C2441.5,10723.5,2441.5,10775.5,2456.5,10775.5L2570.5,10775.5"></path><path id="kity_path_493" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2426.5,10723.5C2441.5,10723.5,2441.5,10827.5,2456.5,10827.5L2558.5,10827.5"></path><path id="kity_path_495" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1926.5,5615.5A160,1986,0,0,0,1766.5,3629.5"></path><path id="kity_path_497" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1654.5,3629.5C1639.5,3629.5,1639.5,839.5,1624.5,839.5L1546.5,839.5"></path><path id="kity_path_499" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1546.5,839.5C1531.5,839.5,1531.5,45.5,1516.5,45.5L1410.5,45.5"></path><path id="kity_path_501" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1546.5,839.5C1531.5,839.5,1531.5,262.5,1516.5,262.5L1414.5,262.5"></path><path id="kity_path_503" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,262.5C1399.5,262.5,1399.5,149.5,1384.5,149.5L1295.5,149.5"></path><path id="kity_path_505" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1295.5,149.5C1280.5,149.5,1280.5,97.5,1265.5,97.5L1047.5,97.5"></path><path id="kity_path_507" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1295.5,149.5C1280.5,149.5,1280.5,149.5,1265.5,149.5L1056.5,149.5"></path><path id="kity_path_509" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1295.5,149.5C1280.5,149.5,1280.5,201.5,1265.5,201.5L971.5,201.5"></path><path id="kity_path_511" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,262.5C1399.5,262.5,1399.5,262.5,1384.5,262.5L1168.5,262.5"></path><path id="kity_path_513" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1168.5,262.5C1153.5,262.5,1153.5,271.5,1138.5,271.5L802.5,271.5"></path><path id="kity_path_515" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,262.5C1399.5,262.5,1399.5,375.5,1384.5,375.5L1330.5,375.5"></path><path id="kity_path_517" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1330.5,375.5C1315.5,375.5,1315.5,375.5,1300.5,375.5L910.5,375.5"></path><path id="kity_path_519" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M910.5,375.5C895.5,375.5,895.5,323.5,880.5,323.5L684.5,323.5"></path><path id="kity_path_521" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M910.5,375.5C895.5,375.5,895.5,375.5,880.5,375.5L682.5,375.5"></path><path id="kity_path_523" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M910.5,375.5C895.5,375.5,895.5,427.5,880.5,427.5L586.5,427.5"></path><path id="kity_path_525" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1546.5,839.5C1531.5,839.5,1531.5,570.5,1516.5,570.5L1414.5,570.5"></path><path id="kity_path_527" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,570.5C1399.5,570.5,1399.5,570.5,1384.5,570.5L1187.5,570.5"></path><path id="kity_path_529" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1187.5,570.5C1172.5,570.5,1172.5,479.5,1157.5,479.5L1079.5,479.5"></path><path id="kity_path_531" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1079.5,479.5C1064.5,479.5,1064.5,479.5,1049.5,479.5L819.5,479.5"></path><path id="kity_path_533" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1187.5,570.5C1172.5,570.5,1172.5,661.5,1157.5,661.5L1079.5,661.5"></path><path id="kity_path_535" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1079.5,661.5C1064.5,661.5,1064.5,583.5,1049.5,583.5L863.5,583.5"></path><path id="kity_path_537" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,583.5C848.5,583.5,848.5,531.5,833.5,531.5L608.5,531.5"></path><path id="kity_path_539" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,583.5C848.5,583.5,848.5,583.5,833.5,583.5L580.5,583.5"></path><path id="kity_path_541" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,583.5C848.5,583.5,848.5,635.5,833.5,635.5L551.5,635.5"></path><path id="kity_path_543" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1079.5,661.5C1064.5,661.5,1064.5,739.5,1049.5,739.5L995.5,739.5"></path><path id="kity_path_545" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M995.5,739.5C980.5,739.5,980.5,687.5,965.5,687.5L683.5,687.5"></path><path id="kity_path_547" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M995.5,739.5C980.5,739.5,980.5,739.5,965.5,739.5L669.5,739.5"></path><path id="kity_path_549" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,739.5C654.5,739.5,654.5,739.5,639.5,739.5L584.5,739.5"></path><path id="kity_path_551" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M995.5,739.5C980.5,739.5,980.5,791.5,965.5,791.5L810.5,791.5"></path><path id="kity_path_553" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1546.5,839.5C1531.5,839.5,1531.5,1124.5,1516.5,1124.5L1426.5,1124.5"></path><path id="kity_path_555" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,951.5,1396.5,951.5L1249.5,951.5"></path><path id="kity_path_557" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1003.5,1396.5,1003.5L1038.5,1003.5"></path><path id="kity_path_559" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1055.5,1396.5,1055.5L1282.5,1055.5"></path><path id="kity_path_561" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1107.5,1396.5,1107.5L1289.5,1107.5"></path><path id="kity_path_563" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1159.5,1396.5,1159.5L1318.5,1159.5"></path><path id="kity_path_565" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1256.5,1396.5,1256.5L1294.5,1256.5"></path><path id="kity_path_567" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1294.5,1256.5C1279.5,1256.5,1279.5,1301.5,1264.5,1301.5L1073.5,1301.5"></path><path id="kity_path_569" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1353.5,1396.5,1353.5L1342.5,1353.5"></path><path id="kity_path_571" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,1124.5C1411.5,1124.5,1411.5,1405.5,1396.5,1405.5L1318.5,1405.5"></path><path id="kity_path_573" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1546.5,839.5C1531.5,839.5,1531.5,1634.5,1516.5,1634.5L1438.5,1634.5"></path><path id="kity_path_575" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1438.5,1634.5C1423.5,1634.5,1423.5,1493.5,1408.5,1493.5L999.5,1493.5"></path><path id="kity_path_577" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,1493.5C984.5,1493.5,984.5,1511.5,969.5,1511.5L654.5,1511.5"></path><path id="kity_path_579" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1438.5,1634.5C1423.5,1634.5,1423.5,1563.5,1408.5,1563.5L1210.5,1563.5"></path><path id="kity_path_581" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1210.5,1563.5C1195.5,1563.5,1195.5,1563.5,1180.5,1563.5L1057.5,1563.5"></path><path id="kity_path_583" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1438.5,1634.5C1423.5,1634.5,1423.5,1669.5,1408.5,1669.5L1199.5,1669.5"></path><path id="kity_path_585" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1199.5,1669.5C1184.5,1669.5,1184.5,1723.5,1169.5,1723.5L855.5,1723.5"></path><path id="kity_path_587" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1438.5,1634.5C1423.5,1634.5,1423.5,1793.5,1408.5,1793.5L1306.5,1793.5"></path><path id="kity_path_589" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1306.5,1793.5C1291.5,1793.5,1291.5,1811.5,1276.5,1811.5L736.5,1811.5"></path><path id="kity_path_591" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1654.5,3629.5C1639.5,3629.5,1639.5,3581.5,1624.5,3581.5L1570.5,3581.5"></path><path id="kity_path_593" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,2623.5,1540.5,2623.5L1414.5,2623.5"></path><path id="kity_path_595" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,2623.5C1399.5,2623.5,1399.5,1872.5,1384.5,1872.5L1282.5,1872.5"></path><path id="kity_path_597" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1282.5,1872.5C1267.5,1872.5,1267.5,1881.5,1252.5,1881.5L957.5,1881.5"></path><path id="kity_path_599" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,2623.5C1399.5,2623.5,1399.5,1978.5,1384.5,1978.5L1051.5,1978.5"></path><path id="kity_path_601" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1051.5,1978.5C1036.5,1978.5,1036.5,2023.5,1021.5,2023.5L327.5,2023.5"></path><path id="kity_path_603" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,2623.5C1399.5,2623.5,1399.5,2264.5,1384.5,2264.5L1249.5,2264.5"></path><path id="kity_path_605" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1249.5,2264.5C1234.5,2264.5,1234.5,2453.5,1219.5,2453.5L740.5,2453.5"></path><path id="kity_path_607" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,2623.5C1399.5,2623.5,1399.5,2901.5,1384.5,2901.5L1047.5,2901.5"></path><path id="kity_path_609" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1047.5,2901.5C1032.5,2901.5,1032.5,3297.5,1017.5,3297.5L516.5,3297.5"></path><path id="kity_path_611" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M516.5,3297.5C501.5,3297.5,501.5,2955.5,486.5,2955.5L20.5,2955.5"></path><path id="kity_path_613" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,2623.5C1399.5,2623.5,1399.5,3375.5,1384.5,3375.5L1155.5,3375.5"></path><path id="kity_path_615" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1155.5,3375.5C1140.5,3375.5,1140.5,3349.5,1125.5,3349.5L758.5,3349.5"></path><path id="kity_path_617" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1155.5,3375.5C1140.5,3375.5,1140.5,3401.5,1125.5,3401.5L690.5,3401.5"></path><path id="kity_path_619" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,3452.5,1540.5,3452.5L1414.5,3452.5"></path><path id="kity_path_621" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,3452.5C1399.5,3452.5,1399.5,3452.5,1384.5,3452.5L903.5,3452.5"></path><path id="kity_path_623" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,3530.5,1540.5,3530.5L1414.5,3530.5"></path><path id="kity_path_625" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,3530.5C1399.5,3530.5,1399.5,3504.5,1384.5,3504.5L531.5,3504.5"></path><path id="kity_path_627" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,3530.5C1399.5,3530.5,1399.5,3556.5,1384.5,3556.5L788.5,3556.5"></path><path id="kity_path_629" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,3617.5,1540.5,3617.5L1378.5,3617.5"></path><path id="kity_path_631" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1378.5,3617.5C1363.5,3617.5,1363.5,3626.5,1348.5,3626.5L343.5,3626.5"></path><path id="kity_path_633" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,3828.5,1540.5,3828.5L1330.5,3828.5"></path><path id="kity_path_635" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1330.5,3828.5C1315.5,3828.5,1315.5,3696.5,1300.5,3696.5L672.5,3696.5"></path><path id="kity_path_637" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1330.5,3828.5C1315.5,3828.5,1315.5,3802.5,1300.5,3802.5L320.5,3802.5"></path><path id="kity_path_639" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1330.5,3828.5C1315.5,3828.5,1315.5,3872.5,1300.5,3872.5L1095.5,3872.5"></path><path id="kity_path_641" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1095.5,3872.5C1080.5,3872.5,1080.5,3890.5,1065.5,3890.5L693.5,3890.5"></path><path id="kity_path_643" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1330.5,3828.5C1315.5,3828.5,1315.5,3978.5,1300.5,3978.5L286.5,3978.5"></path><path id="kity_path_645" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,4100.5,1540.5,4100.5L1414.5,4100.5"></path><path id="kity_path_647" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,4100.5C1399.5,4100.5,1399.5,4030.5,1384.5,4030.5L571.5,4030.5"></path><path id="kity_path_649" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,4100.5C1399.5,4100.5,1399.5,4082.5,1384.5,4082.5L1048.5,4082.5"></path><path id="kity_path_651" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,4100.5C1399.5,4100.5,1399.5,4170.5,1384.5,4170.5L208.5,4170.5"></path><path id="kity_path_653" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,4257.5,1540.5,4257.5L1414.5,4257.5"></path><path id="kity_path_655" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,4257.5C1399.5,4257.5,1399.5,4240.5,1384.5,4240.5L615.5,4240.5"></path><path id="kity_path_657" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,4257.5C1399.5,4257.5,1399.5,4292.5,1384.5,4292.5L563.5,4292.5"></path><path id="kity_path_659" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,4370.5,1540.5,4370.5L1438.5,4370.5"></path><path id="kity_path_661" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1438.5,4370.5C1423.5,4370.5,1423.5,4344.5,1408.5,4344.5L504.5,4344.5"></path><path id="kity_path_663" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1438.5,4370.5C1423.5,4370.5,1423.5,4396.5,1408.5,4396.5L1215.5,4396.5"></path><path id="kity_path_665" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,3581.5C1555.5,3581.5,1555.5,4539.5,1540.5,4539.5L1462.5,4539.5"></path><path id="kity_path_667" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1462.5,4539.5C1447.5,4539.5,1447.5,4474.5,1432.5,4474.5L1198.5,4474.5"></path><path id="kity_path_669" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1198.5,4474.5C1183.5,4474.5,1183.5,4448.5,1168.5,4448.5L709.5,4448.5"></path><path id="kity_path_671" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1198.5,4474.5C1183.5,4474.5,1183.5,4500.5,1168.5,4500.5L611.5,4500.5"></path><path id="kity_path_673" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1462.5,4539.5C1447.5,4539.5,1447.5,4552.5,1432.5,4552.5L1198.5,4552.5"></path><path id="kity_path_675" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1198.5,4552.5C1183.5,4552.5,1183.5,4552.5,1168.5,4552.5L861.5,4552.5"></path><path id="kity_path_677" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1462.5,4539.5C1447.5,4539.5,1447.5,4604.5,1432.5,4604.5L1258.5,4604.5"></path><path id="kity_path_679" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1258.5,4604.5C1243.5,4604.5,1243.5,4604.5,1228.5,4604.5L813.5,4604.5"></path><path id="kity_path_681" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1654.5,3629.5C1639.5,3629.5,1639.5,6447.5,1624.5,6447.5L1570.5,6447.5"></path><path id="kity_path_683" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,5498.5,1540.5,5498.5L1486.5,5498.5"></path><path id="kity_path_685" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1486.5,5498.5C1471.5,5498.5,1471.5,4657.5,1456.5,4657.5L1130.5,4657.5"></path><path id="kity_path_687" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1486.5,5498.5C1471.5,5498.5,1471.5,5087.5,1456.5,5087.5L1056.5,5087.5"></path><path id="kity_path_689" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1486.5,5498.5C1471.5,5498.5,1471.5,5625.5,1456.5,5625.5L1064.5,5625.5"></path><path id="kity_path_691" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1486.5,5498.5C1471.5,5498.5,1471.5,6091.5,1456.5,6091.5L1063.5,6091.5"></path><path id="kity_path_693" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1486.5,5498.5C1471.5,5498.5,1471.5,6269.5,1456.5,6269.5L763.5,6269.5"></path><path id="kity_path_695" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1486.5,5498.5C1471.5,5498.5,1471.5,6339.5,1456.5,6339.5L836.5,6339.5"></path><path id="kity_path_697" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,6693.5,1540.5,6693.5L1474.5,6693.5"></path><path id="kity_path_699" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1474.5,6693.5C1459.5,6693.5,1459.5,6445.5,1444.5,6445.5L1060.5,6445.5"></path><path id="kity_path_701" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1474.5,6693.5C1459.5,6693.5,1459.5,6695.5,1444.5,6695.5L982.5,6695.5"></path><path id="kity_path_703" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1474.5,6693.5C1459.5,6693.5,1459.5,6891.5,1444.5,6891.5L1017.5,6891.5"></path><path id="kity_path_705" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1474.5,6693.5C1459.5,6693.5,1459.5,6995.5,1444.5,6995.5L1055.5,6995.5"></path><path id="kity_path_707" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1055.5,6995.5C1040.5,6995.5,1040.5,6943.5,1025.5,6943.5L682.5,6943.5"></path><path id="kity_path_709" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1055.5,6995.5C1040.5,6995.5,1040.5,6995.5,1025.5,6995.5L766.5,6995.5"></path><path id="kity_path_711" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1055.5,6995.5C1040.5,6995.5,1040.5,7047.5,1025.5,7047.5L793.5,7047.5"></path><path id="kity_path_713" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,7144.5,1540.5,7144.5L1414.5,7144.5"></path><path id="kity_path_715" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1414.5,7144.5C1399.5,7144.5,1399.5,7189.5,1384.5,7189.5L807.5,7189.5"></path><path id="kity_path_717" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,7241.5,1540.5,7241.5L1462.5,7241.5"></path><path id="kity_path_719" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,7293.5,1540.5,7293.5L1464.5,7293.5"></path><path id="kity_path_721" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,7345.5,1540.5,7345.5L1426.5,7345.5"></path><path id="kity_path_723" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1570.5,6447.5C1555.5,6447.5,1555.5,7397.5,1540.5,7397.5L1486.5,7397.5"></path><path id="kity_path_725" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1926.5,5615.5A160,1986,0,0,1,1766.5,7601.5"></path><path id="kity_path_727" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7459.5,1610.5,7459.5L1520.5,7459.5"></path><path id="kity_path_729" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7511.5,1610.5,7511.5L1556.5,7511.5"></path><path id="kity_path_731" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7563.5,1610.5,7563.5L1534.5,7563.5"></path><path id="kity_path_733" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7615.5,1610.5,7615.5L1556.5,7615.5"></path><path id="kity_path_735" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7667.5,1610.5,7667.5L1508.5,7667.5"></path><path id="kity_path_737" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7719.5,1610.5,7719.5L1520.5,7719.5"></path><path id="kity_path_739" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1640.5,7601.5C1625.5,7601.5,1625.5,7771.5,1610.5,7771.5L1544.5,7771.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M1889.5,5595.5h74a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-74a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="5607.5" font-family="宋体,SimSun" x="1908.5">redis</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M1908.5,5615.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M1908.5,5615.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander74" style="cursor: pointer;"><path id="kity_path_2316" fill="white" stroke="gray" d="M2087.5,3593.5A6,6,0,1,1,2075.5,3593.5A6,6,0,1,1,2087.5,3593.5"></path><path id="kity_path_2317" fill="none" stroke="gray" d="M2077,3593.5L2086,3593.5"></path></g><path id="node_outline75" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M2091.5,3580.5h90a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-90a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text75" fill="black"><text id="kity_text_904" text-rendering="inherit" font-family="宋体,SimSun" font-size="14" dy=".8em" y="3586.5" x="2108.5">数据结构</text></g></g><g id="minder_node3"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_2175" fill="white" stroke="gray" d="M2224.5,2686.5A6,6,0,1,1,2212.5,2686.5A6,6,0,1,1,2224.5,2686.5"></path><path id="kity_path_2176" fill="none" stroke="gray" d="M2214,2686.5L2223,2686.5"></path></g><path id="node_outline28" fill="none" stroke="none" d="M2229.5,2675.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text28" fill="black"><text id="kity_text_793" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2680.5" x="2234.5">SDS</text></g></g><g id="minder_node4"><g id="node_expander8" style="cursor: pointer;"><path id="kity_path_2118" fill="white" stroke="gray" d="M2308.5,2535.5A6,6,0,1,1,2296.5,2535.5A6,6,0,1,1,2308.5,2535.5"></path><path id="kity_path_2119" fill="none" stroke="gray" d="M2298,2535.5L2307,2535.5"></path></g><path id="node_outline9" fill="none" stroke="none" d="M2313.5,2524.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_755" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2529.5" x="2318.5">结构</text></g></g><g id="minder_node5"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_2103" fill="white" stroke="gray" d="M2392.5,2470.5A6,6,0,1,1,2380.5,2470.5A6,6,0,1,1,2392.5,2470.5"></path><path id="kity_path_2104" fill="none" stroke="gray" d="M2382,2470.5L2391,2470.5"></path></g><path id="node_outline4" fill="none" stroke="none" d="M2397.5,2459.5h44a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-44a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_745" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2464.5" x="2402.5">int len</text></g></g><g id="minder_node6"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_2097" fill="white" stroke="gray" d="M2486.5,2444.5A6,6,0,1,1,2474.5,2444.5A6,6,0,1,1,2486.5,2444.5"></path><path id="kity_path_2098" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M2491.5,2433.5h196a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-196a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_741" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2438.5" x="2496.5">记录buf数组中已使用字节数的数量</text></g></g><g id="minder_node7"><g id="node_expander2" display="none" style="cursor: pointer;"><path id="kity_path_2100" fill="white" stroke="gray" d="M2486.5,2496.5A6,6,0,1,1,2474.5,2496.5A6,6,0,1,1,2486.5,2496.5"></path><path id="kity_path_2101" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M2491.5,2485.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_743" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2490.5" x="2496.5">等于SDS所保存字符串的长度</text></g></g><g id="minder_node8"><g id="node_expander5" style="cursor: pointer;"><path id="kity_path_2109" fill="white" stroke="gray" d="M2392.5,2548.5A6,6,0,1,1,2380.5,2548.5A6,6,0,1,1,2392.5,2548.5"></path><path id="kity_path_2110" fill="none" stroke="gray" d="M2382,2548.5L2391,2548.5"></path></g><path id="node_outline6" fill="none" stroke="none" d="M2397.5,2537.5h50a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_749" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2542.5" x="2402.5">int free</text></g></g><g id="minder_node9"><g id="node_expander4" display="none" style="cursor: pointer;"><path id="kity_path_2106" fill="white" stroke="gray" d="M2492.5,2548.5A6,6,0,1,1,2480.5,2548.5A6,6,0,1,1,2492.5,2548.5"></path><path id="kity_path_2107" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M2497.5,2537.5h196a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-196a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_747" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2542.5" x="2502.5">记录buf数组中未使用字节数的数量</text></g></g><g id="minder_node10"><g id="node_expander7" style="cursor: pointer;"><path id="kity_path_2115" fill="white" stroke="gray" d="M2392.5,2600.5A6,6,0,1,1,2380.5,2600.5A6,6,0,1,1,2392.5,2600.5"></path><path id="kity_path_2116" fill="none" stroke="gray" d="M2382,2600.5L2391,2600.5"></path></g><path id="node_outline8" fill="none" stroke="none" d="M2397.5,2589.5h65a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-65a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_753" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2594.5" x="2402.5">char buf[]</text></g></g><g id="minder_node11"><g id="node_expander6" display="none" style="cursor: pointer;"><path id="kity_path_2112" fill="white" stroke="gray" d="M2507.5,2600.5A6,6,0,1,1,2495.5,2600.5A6,6,0,1,1,2507.5,2600.5"></path><path id="kity_path_2113" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M2512.5,2589.5h180a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-180a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_751" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2594.5" x="2517.5">用于保存字符串. 以'\0'为结束符</text></g></g><g id="minder_node12"><g id="node_expander26" style="cursor: pointer;"><path id="kity_path_2172" fill="white" stroke="gray" d="M2308.5,2837.5A6,6,0,1,1,2296.5,2837.5A6,6,0,1,1,2308.5,2837.5"></path><path id="kity_path_2173" fill="none" stroke="gray" d="M2298,2837.5L2307,2837.5"></path></g><path id="node_outline27" fill="none" stroke="none" d="M2313.5,2826.5h150a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-150a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="black"><text id="kity_text_791" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2831.5" x="2318.5">SDS相比于C字符串的优点</text></g></g><g id="minder_node13"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_2148" fill="white" stroke="gray" d="M2508.5,2710.5A6,6,0,1,1,2496.5,2710.5A6,6,0,1,1,2508.5,2710.5"></path><path id="kity_path_2149" fill="none" stroke="gray" d="M2498,2710.5L2507,2710.5"></path></g><path id="node_outline19" fill="none" stroke="none" d="M2513.5,2699.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_775" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2704.5" x="2518.5">更高效</text></g></g><g id="minder_node14"><g id="node_expander10" style="cursor: pointer;"><path id="kity_path_2124" fill="white" stroke="gray" d="M2604.5,2652.5A6,6,0,1,1,2592.5,2652.5A6,6,0,1,1,2604.5,2652.5"></path><path id="kity_path_2125" fill="none" stroke="gray" d="M2594,2652.5L2603,2652.5"></path></g><path id="node_outline11" fill="none" stroke="none" d="M2609.5,2641.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_759" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2646.5" x="2614.5">求字符串长度更快</text></g></g><g id="minder_node15"><g id="node_expander9" display="none" style="cursor: pointer;"><path id="kity_path_2121" fill="white" stroke="gray" d="M2760.5,2652.5A6,6,0,1,1,2748.5,2652.5A6,6,0,1,1,2760.5,2652.5"></path><path id="kity_path_2122" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M2765.5,2641.5h379a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-379a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_757" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2646.5" x="2770.5">SDS在len字段中记录了长度, 所以获取字符串长度的时间复杂度是O(1)</text></g></g><g id="minder_node16"><g id="node_expander17" style="cursor: pointer;"><path id="kity_path_2145" fill="white" stroke="gray" d="M2604.5,2769.5A6,6,0,1,1,2592.5,2769.5A6,6,0,1,1,2604.5,2769.5"></path><path id="kity_path_2146" fill="none" stroke="gray" d="M2594,2769.5L2603,2769.5"></path></g><path id="node_outline18" fill="none" stroke="none" d="M2609.5,2758.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_773" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2763.5" x="2614.5">内存重新分配次数少</text></g></g><g id="minder_node17"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_2136" fill="white" stroke="gray" d="M2772.5,2730.5A6,6,0,1,1,2760.5,2730.5A6,6,0,1,1,2772.5,2730.5"></path><path id="kity_path_2137" fill="none" stroke="gray" d="M2762,2730.5L2771,2730.5"></path></g><path id="node_outline15" fill="none" stroke="none" d="M2777.5,2719.5h198a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-198a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_767" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2724.5" x="2782.5">空间预分配(取决于被修改后的大小)</text></g></g><g id="minder_node18"><g id="node_expander11" display="none" style="cursor: pointer;"><path id="kity_path_2127" fill="white" stroke="gray" d="M3020.5,2704.5A6,6,0,1,1,3008.5,2704.5A6,6,0,1,1,3020.5,2704.5"></path><path id="kity_path_2128" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M3025.5,2693.5h899a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-899a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_761" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2698.5" x="3030.5">小于1MB. free将和len保持一致。比如在进行修改后SDS的len变成了13字节, 那么同时也会预分配13字节的未使用空间, SDS的buf数组的实际长度将变成13+13+1=27字节</text></g></g><g id="minder_node19"><g id="node_expander13" style="cursor: pointer;"><path id="kity_path_2133" fill="white" stroke="gray" d="M3020.5,2756.5A6,6,0,1,1,3008.5,2756.5A6,6,0,1,1,3020.5,2756.5"></path><path id="kity_path_2134" fill="none" stroke="gray" d="M3010,2756.5L3019,2756.5"></path></g><path id="node_outline14" fill="none" stroke="none" d="M3025.5,2745.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_765" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2750.5" x="3030.5">大于1MB</text></g></g><g id="minder_node20"><g id="node_expander12" display="none" style="cursor: pointer;"><path id="kity_path_2130" fill="white" stroke="gray" d="M3128.5,2756.5A6,6,0,1,1,3116.5,2756.5A6,6,0,1,1,3128.5,2756.5"></path><path id="kity_path_2131" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M3133.5,2745.5h830a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-830a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_763" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2750.5" x="3138.5">每次会分配1MB的未使用空间. 比如进行修改后SDS的len将变成30MB, 那么会额外分配1MB的未使用空间。 SDS的buf数组实际长度将为30MB+1MB+1byte</text></g></g><g id="minder_node21"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_2142" fill="white" stroke="gray" d="M2772.5,2808.5A6,6,0,1,1,2760.5,2808.5A6,6,0,1,1,2772.5,2808.5"></path><path id="kity_path_2143" fill="none" stroke="gray" d="M2762,2808.5L2771,2808.5"></path></g><path id="node_outline17" fill="none" stroke="none" d="M2777.5,2797.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_771" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2802.5" x="2782.5">惰性空间释放</text></g></g><g id="minder_node22"><g id="node_expander15" display="none" style="cursor: pointer;"><path id="kity_path_2139" fill="white" stroke="gray" d="M2904.5,2808.5A6,6,0,1,1,2892.5,2808.5A6,6,0,1,1,2904.5,2808.5"></path><path id="kity_path_2140" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M2909.5,2797.5h923a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-923a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_769" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2802.5" x="2914.5">当缩短SDS保存的字符串时, 程序并不会立即使用内存重分配来回收空间, 而是用free字段将空余的空间大小记录下来。(有必要回收的时候可以根据sdsfree接口真正释放空间)</text></g></g><g id="minder_node23"><g id="node_expander23" style="cursor: pointer;"><path id="kity_path_2163" fill="white" stroke="gray" d="M2508.5,2886.5A6,6,0,1,1,2496.5,2886.5A6,6,0,1,1,2508.5,2886.5"></path><path id="kity_path_2164" fill="none" stroke="gray" d="M2498,2886.5L2507,2886.5"></path></g><path id="node_outline24" fill="none" stroke="none" d="M2513.5,2875.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="black"><text id="kity_text_785" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2880.5" x="2518.5">更安全</text></g></g><g id="minder_node24"><g id="node_expander20" style="cursor: pointer;"><path id="kity_path_2154" fill="white" stroke="gray" d="M2604.5,2860.5A6,6,0,1,1,2592.5,2860.5A6,6,0,1,1,2604.5,2860.5"></path><path id="kity_path_2155" fill="none" stroke="gray" d="M2594,2860.5L2603,2860.5"></path></g><path id="node_outline21" fill="none" stroke="none" d="M2609.5,2849.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_779" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2854.5" x="2614.5">避免缓冲区溢出</text></g></g><g id="minder_node25"><g id="node_expander19" display="none" style="cursor: pointer;"><path id="kity_path_2151" fill="white" stroke="gray" d="M2748.5,2860.5A6,6,0,1,1,2736.5,2860.5A6,6,0,1,1,2748.5,2860.5"></path><path id="kity_path_2152" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M2753.5,2849.5h543a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-543a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_777" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2854.5" x="2758.5">c语言中如果直接使用strcat方法, 可能会造成缓冲区溢出, 需要在使用前需要确认剩余空间是否足够。</text></g></g><g id="minder_node26"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_2160" fill="white" stroke="gray" d="M2604.5,2912.5A6,6,0,1,1,2592.5,2912.5A6,6,0,1,1,2604.5,2912.5"></path><path id="kity_path_2161" fill="none" stroke="gray" d="M2594,2912.5L2603,2912.5"></path></g><path id="node_outline23" fill="none" stroke="none" d="M2609.5,2901.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_783" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2906.5" x="2614.5">二进制安全</text></g></g><g id="minder_node27"><g id="node_expander21" display="none" style="cursor: pointer;"><path id="kity_path_2157" fill="white" stroke="gray" d="M2724.5,2912.5A6,6,0,1,1,2712.5,2912.5A6,6,0,1,1,2724.5,2912.5"></path><path id="kity_path_2158" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M2729.5,2901.5h814a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-814a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text22" fill="black"><text id="kity_text_781" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2906.5" x="2734.5">c语言不能插入'\0', 会被误认为字符串结束, 而sds可以根据len进行判断。这使得c语言字符串不能存储图片、音频、视频等二进制数据, 而sds可以支持。</text></g></g><g id="minder_node28"><g id="node_expander25" style="cursor: pointer;"><path id="kity_path_2169" fill="white" stroke="gray" d="M2508.5,2964.5A6,6,0,1,1,2496.5,2964.5A6,6,0,1,1,2508.5,2964.5"></path><path id="kity_path_2170" fill="none" stroke="gray" d="M2498,2964.5L2507,2964.5"></path></g><path id="node_outline26" fill="none" stroke="none" d="M2513.5,2953.5h77a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-77a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text26" fill="black"><text id="kity_text_789" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2958.5" x="2518.5">兼容c字符串</text></g></g><g id="minder_node29"><g id="node_expander24" display="none" style="cursor: pointer;"><path id="kity_path_2166" fill="white" stroke="gray" d="M2635.5,2964.5A6,6,0,1,1,2623.5,2964.5A6,6,0,1,1,2635.5,2964.5"></path><path id="kity_path_2167" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M2640.5,2953.5h301a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-301a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="black"><text id="kity_text_787" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="2958.5" x="2645.5">sds底层对字符串的处理可以复用&lt;string.h&gt;库里的函数</text></g></g><g id="minder_node30"><g id="node_expander28" display="none" style="cursor: pointer;"><path id="kity_path_2178" fill="white" stroke="gray" d="M2224.5,3016.5A6,6,0,1,1,2212.5,3016.5A6,6,0,1,1,2224.5,3016.5"></path><path id="kity_path_2179" fill="none" stroke="gray"></path></g><path id="node_outline29" fill="none" stroke="none" d="M2229.5,3005.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text29" fill="black"><text id="kity_text_795" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3010.5" x="2234.5">链表</text></g></g><g id="minder_node31"><g id="node_expander70" style="cursor: pointer;"><path id="kity_path_2304" fill="white" stroke="gray" d="M2224.5,3663.5A6,6,0,1,1,2212.5,3663.5A6,6,0,1,1,2224.5,3663.5"></path><path id="kity_path_2305" fill="none" stroke="gray" d="M2214,3663.5L2223,3663.5"></path></g><path id="node_outline71" fill="none" stroke="none" d="M2229.5,3652.5h63a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-63a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text71" fill="black"><text id="kity_text_896" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3657.5" x="2234.5">字典(dict)</text></g></g><g id="minder_node32"><g id="node_expander44" style="cursor: pointer;"><path id="kity_path_2226" fill="white" stroke="gray" d="M2337.5,3255.5A6,6,0,1,1,2325.5,3255.5A6,6,0,1,1,2337.5,3255.5"></path><path id="kity_path_2227" fill="none" stroke="gray" d="M2327,3255.5L2336,3255.5"></path></g><path id="node_outline45" fill="none" stroke="none" d="M2342.5,3244.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text45" fill="black"><text id="kity_text_843" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3249.5" x="2347.5">结构</text></g></g><g id="minder_node33"><g id="node_expander31" style="cursor: pointer;"><path id="kity_path_2187" fill="white" stroke="gray" d="M2421.5,3077.5A6,6,0,1,1,2409.5,3077.5A6,6,0,1,1,2421.5,3077.5"></path><path id="kity_path_2188" fill="none" stroke="gray" d="M2411,3077.5L2420,3077.5"></path></g><path id="node_outline32" fill="none" stroke="none" d="M2426.5,3057.5h98a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-98a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text32" fill="black"><text id="kity_text_801" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3062.5" x="2431.5">// 类型特定函数</text><text id="kity_text_802" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3080.5" x="2431.5">dictType *type</text></g></g><g id="minder_node34"><g id="node_expander30" style="cursor: pointer;"><path id="kity_path_2184" fill="white" stroke="gray" d="M2569.5,3077.5A6,6,0,1,1,2557.5,3077.5A6,6,0,1,1,2569.5,3077.5"></path><path id="kity_path_2185" fill="none" stroke="gray" d="M2559,3077.5L2568,3077.5"></path></g><path id="node_outline31" fill="none" stroke="none" d="M2574.5,3066.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text31" fill="black"><text id="kity_text_799" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3071.5" x="2579.5">哈希算法</text></g></g><g id="minder_node35"><g id="node_expander29" display="none" style="cursor: pointer;"><path id="kity_path_2181" fill="white" stroke="gray" d="M2677.5,3077.5A6,6,0,1,1,2665.5,3077.5A6,6,0,1,1,2677.5,3077.5"></path><path id="kity_path_2182" fill="none" stroke="gray"></path></g><path id="node_outline30" fill="none" stroke="none" d="M2682.5,3066.5h88a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-88a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text30" fill="black"><text id="kity_text_797" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3071.5" x="2687.5">MurmurHash2</text></g></g><g id="minder_node36"><g id="node_expander32" display="none" style="cursor: pointer;"><path id="kity_path_2190" fill="white" stroke="gray" d="M2421.5,3147.5A6,6,0,1,1,2409.5,3147.5A6,6,0,1,1,2421.5,3147.5"></path><path id="kity_path_2191" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M2426.5,3127.5h91a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-91a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text33" fill="black"><text id="kity_text_804" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3132.5" x="2431.5">//私有数据</text><text id="kity_text_805" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3150.5" x="2431.5">void *privdata;</text></g></g><g id="minder_node37"><g id="node_expander33" display="none" style="cursor: pointer;"><path id="kity_path_2193" fill="white" stroke="gray" d="M2421.5,3217.5A6,6,0,1,1,2409.5,3217.5A6,6,0,1,1,2421.5,3217.5"></path><path id="kity_path_2194" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="none" stroke="none" d="M2426.5,3197.5h178a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text34" fill="black"><text id="kity_text_807" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3202.5" x="2431.5">// 当rehash不在进行时, 值为-1</text><text id="kity_text_808" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3220.5" x="2431.5">int trehashidx；</text></g></g><g id="minder_node38"><g id="node_expander43" style="cursor: pointer;"><path id="kity_path_2223" fill="white" stroke="gray" d="M2421.5,3433.5A6,6,0,1,1,2409.5,3433.5A6,6,0,1,1,2421.5,3433.5"></path><path id="kity_path_2224" fill="none" stroke="gray" d="M2411,3433.5L2420,3433.5"></path></g><path id="node_outline44" fill="none" stroke="none" d="M2426.5,3413.5h81a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-81a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text44" fill="black"><text id="kity_text_840" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3418.5" x="2431.5">// 哈希表2个</text><text id="kity_text_841" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3436.5" x="2431.5">dictht ht[2]</text></g></g><g id="minder_node39"><g id="node_expander34" display="none" style="cursor: pointer;"><path id="kity_path_2196" fill="white" stroke="gray" d="M2552.5,3287.5A6,6,0,1,1,2540.5,3287.5A6,6,0,1,1,2552.5,3287.5"></path><path id="kity_path_2197" fill="none" stroke="gray"></path></g><path id="node_outline35" fill="none" stroke="none" d="M2557.5,3267.5h193a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-193a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text35" fill="black"><text id="kity_text_810" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3272.5" x="2562.5">一般字段只是用ht[0],</text><text id="kity_text_811" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3290.5" x="2562.5">ht[1]只会在ht[0]进行rehash时使用</text></g></g><g id="minder_node40"><g id="node_expander42" style="cursor: pointer;"><path id="kity_path_2220" fill="white" stroke="gray" d="M2552.5,3588.5A6,6,0,1,1,2540.5,3588.5A6,6,0,1,1,2552.5,3588.5"></path><path id="kity_path_2221" fill="none" stroke="gray" d="M2542,3588.5L2551,3588.5"></path></g><path id="node_outline43" fill="none" stroke="none" d="M2557.5,3577.5h86a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-86a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text43" fill="black"><text id="kity_text_838" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3582.5" x="2562.5">哈希表(dictht)</text></g></g><g id="minder_node41"><g id="node_expander37" style="cursor: pointer;"><path id="kity_path_2205" fill="white" stroke="gray" d="M2688.5,3474.5A6,6,0,1,1,2676.5,3474.5A6,6,0,1,1,2688.5,3474.5"></path><path id="kity_path_2206" fill="none" stroke="gray" d="M2678,3474.5L2687,3474.5"></path></g><path id="node_outline38" fill="none" stroke="none" d="M2693.5,3463.5h104a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-104a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text38" fill="black"><text id="kity_text_828" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3468.5" x="2698.5">dictEntry **table</text></g></g><g id="minder_node42"><g id="node_expander35" display="none" style="cursor: pointer;"><path id="kity_path_2199" fill="white" stroke="gray" d="M2842.5,3349.5A6,6,0,1,1,2830.5,3349.5A6,6,0,1,1,2842.5,3349.5"></path><path id="kity_path_2200" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M2847.5,3338.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text36" fill="black"><text id="kity_text_813" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3343.5" x="2852.5">**table是哈希表数组(哈希桶)</text></g></g><g id="minder_node43"><g id="node_expander36" display="none" style="cursor: pointer;"><path id="kity_path_2202" fill="white" stroke="gray" d="M2842.5,3500.5A6,6,0,1,1,2830.5,3500.5A6,6,0,1,1,2842.5,3500.5"></path><path id="kity_path_2203" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M2847.5,3390.5h332a5,5,0,0,1,5,5v210a5,5,0,0,1,-5,5h-332a5,5,0,0,1,-5,-5v-210a5,5,0,0,1,5,-5z"></path><g id="node_text37" fill="black"><text id="kity_text_815" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3395.5" x="2852.5">typedef struct dictEntry {</text><text id="kity_text_816" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3413.5" x="2852.5">.&#xa0; &#xa0; // 键</text><text id="kity_text_817" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3431.5" x="2852.5">.&#xa0; &#xa0; void *key;</text><text id="kity_text_818" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3449.5" x="2852.5">.&#xa0; &#xa0; // 值</text><text id="kity_text_819" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3467.5" x="2852.5">.&#xa0; &#xa0; union {</text><text id="kity_text_820" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3485.5" x="2852.5">.&#xa0; &#xa0; &#xa0; &#xa0; void *val;</text><text id="kity_text_821" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3503.5" x="2852.5">.&#xa0; &#xa0; &#xa0; &#xa0; uint64_tu64;</text><text id="kity_text_822" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3521.5" x="2852.5">.&#xa0; &#xa0; &#xa0; &#xa0; int64_ts64;&#xa0;</text><text id="kity_text_823" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3539.5" x="2852.5">.&#xa0; &#xa0; } v;</text><text id="kity_text_824" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3557.5" x="2852.5">.&#xa0; &#xa0; //指向下一个哈希表节点, 形成链表(头插法解决哈希冲突)</text><text id="kity_text_825" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3575.5" x="2852.5">.&#xa0; &#xa0; struct dictEntry *next;</text><text id="kity_text_826" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3593.5" x="2852.5">} dictEntry;</text></g></g><g id="minder_node44"><g id="node_expander39" style="cursor: pointer;"><path id="kity_path_2211" fill="white" stroke="gray" d="M2688.5,3651.5A6,6,0,1,1,2676.5,3651.5A6,6,0,1,1,2688.5,3651.5"></path><path id="kity_path_2212" fill="none" stroke="gray" d="M2678,3651.5L2687,3651.5"></path></g><path id="node_outline40" fill="none" stroke="none" d="M2693.5,3640.5h113a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text40" fill="black"><text id="kity_text_832" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3645.5" x="2698.5">unsigned long size</text></g></g><g id="minder_node45"><g id="node_expander38" display="none" style="cursor: pointer;"><path id="kity_path_2208" fill="white" stroke="gray" d="M2851.5,3651.5A6,6,0,1,1,2839.5,3651.5A6,6,0,1,1,2851.5,3651.5"></path><path id="kity_path_2209" fill="none" stroke="gray"></path></g><path id="node_outline39" fill="none" stroke="none" d="M2856.5,3640.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text39" fill="black"><text id="kity_text_830" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3645.5" x="2861.5">哈希表数组大小</text></g></g><g id="minder_node46"><g id="node_expander41" style="cursor: pointer;"><path id="kity_path_2217" fill="white" stroke="gray" d="M2688.5,3703.5A6,6,0,1,1,2676.5,3703.5A6,6,0,1,1,2688.5,3703.5"></path><path id="kity_path_2218" fill="none" stroke="gray" d="M2678,3703.5L2687,3703.5"></path></g><path id="node_outline42" fill="none" stroke="none" d="M2693.5,3692.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text42" fill="black"><text id="kity_text_836" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3697.5" x="2698.5">unsigned long used</text></g></g><g id="minder_node47"><g id="node_expander40" display="none" style="cursor: pointer;"><path id="kity_path_2214" fill="white" stroke="gray" d="M2856.5,3703.5A6,6,0,1,1,2844.5,3703.5A6,6,0,1,1,2856.5,3703.5"></path><path id="kity_path_2215" fill="none" stroke="gray"></path></g><path id="node_outline41" fill="none" stroke="none" d="M2861.5,3692.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text41" fill="black"><text id="kity_text_834" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3697.5" x="2866.5">哈希表已有节点的数量</text></g></g><g id="minder_node48"><g id="node_expander45" display="none" style="cursor: pointer;"><path id="kity_path_2229" fill="white" stroke="gray" d="M2337.5,3763.5A6,6,0,1,1,2325.5,3763.5A6,6,0,1,1,2337.5,3763.5"></path><path id="kity_path_2230" fill="none" stroke="gray"></path></g><path id="node_outline46" fill="none" stroke="none" d="M2342.5,3743.5h267a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-267a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text46" fill="black"><text id="kity_text_845" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3748.5" x="2347.5">负载因子 = 哈希表已保存节点数量 / 哈希表大小</text><text id="kity_text_846" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3766.5" x="2347.5">load_factor&#xa0; = ht[0].used / ht[0].size</text></g></g><g id="minder_node49"><g id="node_expander69" style="cursor: pointer;"><path id="kity_path_2301" fill="white" stroke="gray" d="M2337.5,4071.5A6,6,0,1,1,2325.5,4071.5A6,6,0,1,1,2337.5,4071.5"></path><path id="kity_path_2302" fill="none" stroke="gray" d="M2327,4071.5L2336,4071.5"></path></g><path id="node_outline70" fill="none" stroke="none" d="M2342.5,4060.5h47a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-47a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text70" fill="black"><text id="kity_text_894" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4065.5" x="2347.5">rehash</text></g></g><g id="minder_node50"><g id="node_expander50" style="cursor: pointer;"><path id="kity_path_2244" fill="white" stroke="gray" d="M2434.5,3876.5A6,6,0,1,1,2422.5,3876.5A6,6,0,1,1,2434.5,3876.5"></path><path id="kity_path_2245" fill="none" stroke="gray" d="M2424,3876.5L2433,3876.5"></path></g><path id="node_outline51" fill="none" stroke="none" d="M2439.5,3865.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text51" fill="black"><text id="kity_text_856" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3870.5" x="2444.5">触发时机</text></g></g><g id="minder_node51"><g id="node_expander46" display="none" style="cursor: pointer;"><path id="kity_path_2232" fill="white" stroke="gray" d="M2542.5,3824.5A6,6,0,1,1,2530.5,3824.5A6,6,0,1,1,2542.5,3824.5"></path><path id="kity_path_2233" fill="none" stroke="gray"></path></g><path id="node_outline47" fill="none" stroke="none" d="M2547.5,3813.5h516a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-516a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text47" fill="black"><text id="kity_text_848" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3818.5" x="2552.5">服务器目前没有在执行BGSAVE命令或者BGREWRITEOF命令, 并且哈希表的负载因子大于等于1</text></g></g><g id="minder_node52"><g id="node_expander48" style="cursor: pointer;"><path id="kity_path_2238" fill="white" stroke="gray" d="M2542.5,3876.5A6,6,0,1,1,2530.5,3876.5A6,6,0,1,1,2542.5,3876.5"></path><path id="kity_path_2239" fill="none" stroke="gray" d="M2532,3876.5L2541,3876.5"></path></g><path id="node_outline49" fill="none" stroke="none" d="M2547.5,3865.5h506a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-506a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text49" fill="black"><text id="kity_text_852" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3870.5" x="2552.5">服务器目前正在执行BGSAVE命令或者BGREWRITEOF命令, 并且哈希表的负载因子大于等于5</text></g></g><g id="minder_node53"><g id="node_expander47" display="none" style="cursor: pointer;"><path id="kity_path_2235" fill="white" stroke="gray" d="M3098.5,3876.5A6,6,0,1,1,3086.5,3876.5A6,6,0,1,1,3098.5,3876.5"></path><path id="kity_path_2236" fill="none" stroke="gray"></path></g><path id="node_outline48" fill="none" stroke="none" d="M3103.5,3865.5h630a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-630a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text48" fill="black"><text id="kity_text_850" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3870.5" x="3108.5">这只有子进程。大多数操作系统都采用copy-on-write技术来优化子进程的使用效率, 所以这时尽量避免内存过多copy</text></g></g><g id="minder_node54"><g id="node_expander49" display="none" style="cursor: pointer;"><path id="kity_path_2241" fill="white" stroke="gray" d="M2542.5,3928.5A6,6,0,1,1,2530.5,3928.5A6,6,0,1,1,2542.5,3928.5"></path><path id="kity_path_2242" fill="none" stroke="gray"></path></g><path id="node_outline50" fill="none" stroke="none" d="M2547.5,3917.5h308a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-308a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text50" fill="black"><text id="kity_text_854" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3922.5" x="2552.5">负载因子小于0.1时, 程序自动开始对哈希表执行收缩操作</text></g></g><g id="minder_node55"><g id="node_expander59" style="cursor: pointer;"><path id="kity_path_2271" fill="white" stroke="gray" d="M2434.5,4071.5A6,6,0,1,1,2422.5,4071.5A6,6,0,1,1,2434.5,4071.5"></path><path id="kity_path_2272" fill="none" stroke="gray" d="M2424,4071.5L2433,4071.5"></path></g><path id="node_outline60" fill="none" stroke="none" d="M2439.5,4060.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text60" fill="black"><text id="kity_text_874" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4065.5" x="2444.5">基本步骤</text></g></g><g id="minder_node56"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_2259" fill="white" stroke="gray" d="M2542.5,4006.5A6,6,0,1,1,2530.5,4006.5A6,6,0,1,1,2542.5,4006.5"></path><path id="kity_path_2260" fill="none" stroke="gray" d="M2532,4006.5L2541,4006.5"></path></g><path id="node_outline56" fill="none" stroke="none" d="M2547.5,3995.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text56" fill="black"><text id="kity_text_866" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4000.5" x="2552.5">为ht[1]分配空间</text></g></g><g id="minder_node57"><g id="node_expander52" style="cursor: pointer;"><path id="kity_path_2250" fill="white" stroke="gray" d="M2686.5,3980.5A6,6,0,1,1,2674.5,3980.5A6,6,0,1,1,2686.5,3980.5"></path><path id="kity_path_2251" fill="none" stroke="gray" d="M2676,3980.5L2685,3980.5"></path></g><path id="node_outline53" fill="none" stroke="none" d="M2691.5,3969.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text53" fill="black"><text id="kity_text_860" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3974.5" x="2696.5">扩展操作</text></g></g><g id="minder_node58"><g id="node_expander51" display="none" style="cursor: pointer;"><path id="kity_path_2247" fill="white" stroke="gray" d="M2794.5,3980.5A6,6,0,1,1,2782.5,3980.5A6,6,0,1,1,2794.5,3980.5"></path><path id="kity_path_2248" fill="none" stroke="gray"></path></g><path id="node_outline52" fill="none" stroke="none" d="M2799.5,3969.5h518a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-518a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text52" fill="black"><text id="kity_text_858" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3974.5" x="2804.5">设置ht[1]的大小。先求出tmp = ht[0].used*2的, ht[1]的大小就是第一个大于等于tmp的2的n次幂</text></g></g><g id="minder_node59"><g id="node_expander54" style="cursor: pointer;"><path id="kity_path_2256" fill="white" stroke="gray" d="M2686.5,4032.5A6,6,0,1,1,2674.5,4032.5A6,6,0,1,1,2686.5,4032.5"></path><path id="kity_path_2257" fill="none" stroke="gray" d="M2676,4032.5L2685,4032.5"></path></g><path id="node_outline55" fill="none" stroke="none" d="M2691.5,4021.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text55" fill="black"><text id="kity_text_864" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4026.5" x="2696.5">收缩操作</text></g></g><g id="minder_node60"><g id="node_expander53" display="none" style="cursor: pointer;"><path id="kity_path_2253" fill="white" stroke="gray" d="M2794.5,4032.5A6,6,0,1,1,2782.5,4032.5A6,6,0,1,1,2794.5,4032.5"></path><path id="kity_path_2254" fill="none" stroke="gray"></path></g><path id="node_outline54" fill="none" stroke="none" d="M2799.5,4021.5h373a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-373a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text54" fill="black"><text id="kity_text_862" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4026.5" x="2804.5">tmp = ht[0].used, 设置ht[1]的大小为第一个大于等于tmp的2的n次幂</text></g></g><g id="minder_node61"><g id="node_expander57" style="cursor: pointer;"><path id="kity_path_2265" fill="white" stroke="gray" d="M2542.5,4084.5A6,6,0,1,1,2530.5,4084.5A6,6,0,1,1,2542.5,4084.5"></path><path id="kity_path_2266" fill="none" stroke="gray" d="M2532,4084.5L2541,4084.5"></path></g><path id="node_outline58" fill="none" stroke="none" d="M2547.5,4073.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text58" fill="black"><text id="kity_text_870" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4078.5" x="2552.5">迁移</text></g></g><g id="minder_node62"><g id="node_expander56" display="none" style="cursor: pointer;"><path id="kity_path_2262" fill="white" stroke="gray" d="M2626.5,4084.5A6,6,0,1,1,2614.5,4084.5A6,6,0,1,1,2626.5,4084.5"></path><path id="kity_path_2263" fill="none" stroke="gray"></path></g><path id="node_outline57" fill="none" stroke="none" d="M2631.5,4073.5h442a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-442a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text57" fill="black"><text id="kity_text_868" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4078.5" x="2636.5">将ht[0]的所有键值对rehash到ht[1]上面。(rehash指的是重新计算哈希值和索引值)</text></g></g><g id="minder_node63"><g id="node_expander58" display="none" style="cursor: pointer;"><path id="kity_path_2268" fill="white" stroke="gray" d="M2542.5,4136.5A6,6,0,1,1,2530.5,4136.5A6,6,0,1,1,2542.5,4136.5"></path><path id="kity_path_2269" fill="none" stroke="gray"></path></g><path id="node_outline59" fill="none" stroke="none" d="M2547.5,4125.5h140a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-140a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text59" fill="black"><text id="kity_text_872" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4130.5" x="2552.5">释放h[0], 替换h[0]和h[1]</text></g></g><g id="minder_node64"><g id="node_expander68" style="cursor: pointer;"><path id="kity_path_2298" fill="white" stroke="gray" d="M2434.5,4266.5A6,6,0,1,1,2422.5,4266.5A6,6,0,1,1,2434.5,4266.5"></path><path id="kity_path_2299" fill="none" stroke="gray" d="M2424,4266.5L2433,4266.5"></path></g><path id="node_outline69" fill="none" stroke="none" d="M2439.5,4255.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text69" fill="black"><text id="kity_text_892" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4260.5" x="2444.5">渐进式</text></g></g><g id="minder_node65"><g id="node_expander67" style="cursor: pointer;"><path id="kity_path_2295" fill="white" stroke="gray" d="M2530.5,4266.5A6,6,0,1,1,2518.5,4266.5A6,6,0,1,1,2530.5,4266.5"></path><path id="kity_path_2296" fill="none" stroke="gray" d="M2520,4266.5L2529,4266.5"></path></g><path id="node_outline68" fill="none" stroke="none" d="M2535.5,4255.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text68" fill="black"><text id="kity_text_890" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4260.5" x="2540.5">步骤</text></g></g><g id="minder_node66"><g id="node_expander60" display="none" style="cursor: pointer;"><path id="kity_path_2274" fill="white" stroke="gray" d="M2614.5,4188.5A6,6,0,1,1,2602.5,4188.5A6,6,0,1,1,2614.5,4188.5"></path><path id="kity_path_2275" fill="none" stroke="gray"></path></g><path id="node_outline61" fill="none" stroke="none" d="M2619.5,4177.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text61" fill="black"><text id="kity_text_876" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4182.5" x="2624.5">为ht[1]分配空间</text></g></g><g id="minder_node67"><g id="node_expander62" style="cursor: pointer;"><path id="kity_path_2280" fill="white" stroke="gray" d="M2614.5,4240.5A6,6,0,1,1,2602.5,4240.5A6,6,0,1,1,2614.5,4240.5"></path><path id="kity_path_2281" fill="none" stroke="gray" d="M2604,4240.5L2613,4240.5"></path></g><path id="node_outline63" fill="none" stroke="none" d="M2619.5,4229.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text63" fill="black"><text id="kity_text_880" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4234.5" x="2624.5">准备开始</text></g></g><g id="minder_node68"><g id="node_expander61" display="none" style="cursor: pointer;"><path id="kity_path_2277" fill="white" stroke="gray" d="M2722.5,4240.5A6,6,0,1,1,2710.5,4240.5A6,6,0,1,1,2722.5,4240.5"></path><path id="kity_path_2278" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M2727.5,4229.5h458a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-458a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text62" fill="black"><text id="kity_text_878" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4234.5" x="2732.5">在字典中维持一个引用计数器变量rehashidx, 将值设置为0, 表示rehash工作正式开始</text></g></g><g id="minder_node69"><g id="node_expander64" style="cursor: pointer;"><path id="kity_path_2286" fill="white" stroke="gray" d="M2614.5,4292.5A6,6,0,1,1,2602.5,4292.5A6,6,0,1,1,2614.5,4292.5"></path><path id="kity_path_2287" fill="none" stroke="gray" d="M2604,4292.5L2613,4292.5"></path></g><path id="node_outline65" fill="none" stroke="none" d="M2619.5,4281.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text65" fill="black"><text id="kity_text_884" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4286.5" x="2624.5">迁移</text></g></g><g id="minder_node70"><g id="node_expander63" display="none" style="cursor: pointer;"><path id="kity_path_2283" fill="white" stroke="gray" d="M2698.5,4292.5A6,6,0,1,1,2686.5,4292.5A6,6,0,1,1,2698.5,4292.5"></path><path id="kity_path_2284" fill="none" stroke="gray"></path></g><path id="node_outline64" fill="none" stroke="none" d="M2703.5,4281.5h1094a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-1094a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text64" fill="black"><text id="kity_text_882" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4286.5" x="2708.5">每次对字典执行添加、删除、查找、更新 等操作时, 程序除了执行指定的操作以外, 还会顺带将ht[0]哈希表在rehashidx索引上的所有键值对rehash到ht[1], 当reshah工作完成后, 程序将rehashidx属性的值增1</text></g></g><g id="minder_node71"><g id="node_expander66" style="cursor: pointer;"><path id="kity_path_2292" fill="white" stroke="gray" d="M2614.5,4344.5A6,6,0,1,1,2602.5,4344.5A6,6,0,1,1,2614.5,4344.5"></path><path id="kity_path_2293" fill="none" stroke="gray" d="M2604,4344.5L2613,4344.5"></path></g><path id="node_outline67" fill="none" stroke="none" d="M2619.5,4333.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text67" fill="black"><text id="kity_text_888" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4338.5" x="2624.5">结束</text></g></g><g id="minder_node72"><g id="node_expander65" display="none" style="cursor: pointer;"><path id="kity_path_2289" fill="white" stroke="gray" d="M2698.5,4344.5A6,6,0,1,1,2686.5,4344.5A6,6,0,1,1,2698.5,4344.5"></path><path id="kity_path_2290" fill="none" stroke="gray"></path></g><path id="node_outline66" fill="none" stroke="none" d="M2703.5,4333.5h816a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-816a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text66" fill="black"><text id="kity_text_886" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4338.5" x="2708.5">随着字典操作的不断执行, 最终在某个时间点上, ht[0]的所有键值对都会被rehash至ht[1], 这时程序将rehashidx属性的值设置为-1, 表示rehash操作已完成</text></g></g><g id="minder_node73"><g id="node_expander71" display="none" style="cursor: pointer;"><path id="kity_path_2307" fill="white" stroke="gray" d="M2224.5,4396.5A6,6,0,1,1,2212.5,4396.5A6,6,0,1,1,2224.5,4396.5"></path><path id="kity_path_2308" fill="none" stroke="gray"></path></g><path id="node_outline72" fill="none" stroke="none" d="M2229.5,4385.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text72" fill="black"><text id="kity_text_898" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4390.5" x="2234.5">跳跃表</text></g></g><g id="minder_node74"><g id="node_expander72" display="none" style="cursor: pointer;"><path id="kity_path_2310" fill="white" stroke="gray" d="M2224.5,4448.5A6,6,0,1,1,2212.5,4448.5A6,6,0,1,1,2224.5,4448.5"></path><path id="kity_path_2311" fill="none" stroke="gray"></path></g><path id="node_outline73" fill="none" stroke="none" d="M2229.5,4437.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text73" fill="black"><text id="kity_text_900" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4442.5" x="2234.5">整数集合</text></g></g><g id="minder_node75"><g id="node_expander73" display="none" style="cursor: pointer;"><path id="kity_path_2313" fill="white" stroke="gray" d="M2224.5,4500.5A6,6,0,1,1,2212.5,4500.5A6,6,0,1,1,2224.5,4500.5"></path><path id="kity_path_2314" fill="none" stroke="gray"></path></g><path id="node_outline74" fill="none" stroke="none" d="M2229.5,4489.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text74" fill="black"><text id="kity_text_902" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4494.5" x="2234.5">压缩列表</text></g></g><g id="minder_node76"><g id="node_expander92" style="cursor: pointer;"><path id="kity_path_2370" fill="white" stroke="gray" d="M2087.5,4970.5A6,6,0,1,1,2075.5,4970.5A6,6,0,1,1,2087.5,4970.5"></path><path id="kity_path_2371" fill="none" stroke="gray" d="M2077,4970.5L2086,4970.5"></path></g><path id="node_outline93" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M2091.5,4957.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text93" fill="black"><text id="kity_text_951" text-rendering="inherit" font-family="宋体,SimSun" font-size="14" dy=".8em" y="4963.5" x="2108.5">对象</text></g></g><g id="minder_node77"><g id="node_expander76" style="cursor: pointer;"><path id="kity_path_2322" fill="white" stroke="gray" d="M2196.5,4661.5A6,6,0,1,1,2184.5,4661.5A6,6,0,1,1,2196.5,4661.5"></path><path id="kity_path_2323" fill="none" stroke="gray" d="M2186,4661.5L2195,4661.5"></path></g><path id="node_outline77" fill="none" stroke="none" d="M2201.5,4650.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text77" fill="black"><text id="kity_text_919" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4655.5" x="2206.5">结构</text></g></g><g id="minder_node78"><g id="node_expander75" display="none" style="cursor: pointer;"><path id="kity_path_2319" fill="white" stroke="gray" d="M2280.5,4661.5A6,6,0,1,1,2268.5,4661.5A6,6,0,1,1,2280.5,4661.5"></path><path id="kity_path_2320" fill="none" stroke="gray"></path></g><path id="node_outline76" fill="none" stroke="none" d="M2285.5,4551.5h201a5,5,0,0,1,5,5v210a5,5,0,0,1,-5,5h-201a5,5,0,0,1,-5,-5v-210a5,5,0,0,1,5,-5z"></path><g id="node_text76" fill="black"><text id="kity_text_906" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4556.5" x="2290.5">typedef struct redisObject {</text><text id="kity_text_907" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4574.5" x="2290.5">.&#xa0; &#xa0; // 类型</text><text id="kity_text_908" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4592.5" x="2290.5">.&#xa0; &#xa0; unsigned type:4;</text><text id="kity_text_909" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4610.5" x="2290.5">.&#xa0; &#xa0; // 编码</text><text id="kity_text_910" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4628.5" x="2290.5">.&#xa0; &#xa0; // unsigned encoding:4;</text><text id="kity_text_911" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4646.5" x="2290.5">.&#xa0; &#xa0; // 指向底层实现数据结构的指针</text><text id="kity_text_912" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4664.5" x="2290.5">.&#xa0; &#xa0; void *ptr;</text><text id="kity_text_913" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4682.5" x="2290.5">.&#xa0; &#xa0; // 引用计数</text><text id="kity_text_914" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4700.5" x="2290.5">.&#xa0; &#xa0; int refcount;</text><text id="kity_text_915" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4718.5" x="2290.5">.&#xa0; &#xa0; // 用于计算空转时长</text><text id="kity_text_916" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4736.5" x="2290.5">.&#xa0; &#xa0; unsinged lru:22;</text><text id="kity_text_917" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4754.5" x="2290.5">} robj;</text></g></g><g id="minder_node79"><g id="node_expander82" style="cursor: pointer;"><path id="kity_path_2340" fill="white" stroke="gray" d="M2196.5,4916.5A6,6,0,1,1,2184.5,4916.5A6,6,0,1,1,2196.5,4916.5"></path><path id="kity_path_2341" fill="none" stroke="gray" d="M2186,4916.5L2195,4916.5"></path></g><path id="node_outline83" fill="none" stroke="none" d="M2201.5,4905.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text83" fill="black"><text id="kity_text_931" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4910.5" x="2206.5">类型</text></g></g><g id="minder_node80"><g id="node_expander77" display="none" style="cursor: pointer;"><path id="kity_path_2325" fill="white" stroke="gray" d="M2280.5,4812.5A6,6,0,1,1,2268.5,4812.5A6,6,0,1,1,2280.5,4812.5"></path><path id="kity_path_2326" fill="none" stroke="gray"></path></g><path id="node_outline78" fill="none" stroke="none" d="M2285.5,4801.5h134a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-134a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text78" fill="black"><text id="kity_text_921" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4806.5" x="2290.5">REDIS_STRING 字符串</text></g></g><g id="minder_node81"><g id="node_expander78" display="none" style="cursor: pointer;"><path id="kity_path_2328" fill="white" stroke="gray" d="M2280.5,4864.5A6,6,0,1,1,2268.5,4864.5A6,6,0,1,1,2280.5,4864.5"></path><path id="kity_path_2329" fill="none" stroke="gray"></path></g><path id="node_outline79" fill="none" stroke="none" d="M2285.5,4853.5h104a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-104a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text79" fill="black"><text id="kity_text_923" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4858.5" x="2290.5">REDIS_LIST 列表</text></g></g><g id="minder_node82"><g id="node_expander79" display="none" style="cursor: pointer;"><path id="kity_path_2331" fill="white" stroke="gray" d="M2280.5,4916.5A6,6,0,1,1,2268.5,4916.5A6,6,0,1,1,2280.5,4916.5"></path><path id="kity_path_2332" fill="none" stroke="gray"></path></g><path id="node_outline80" fill="none" stroke="none" d="M2285.5,4905.5h111a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-111a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text80" fill="black"><text id="kity_text_925" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4910.5" x="2290.5">REDIS_HASH 哈希</text></g></g><g id="minder_node83"><g id="node_expander80" display="none" style="cursor: pointer;"><path id="kity_path_2334" fill="white" stroke="gray" d="M2280.5,4968.5A6,6,0,1,1,2268.5,4968.5A6,6,0,1,1,2280.5,4968.5"></path><path id="kity_path_2335" fill="none" stroke="gray"></path></g><path id="node_outline81" fill="none" stroke="none" d="M2285.5,4957.5h101a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-101a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text81" fill="black"><text id="kity_text_927" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="4962.5" x="2290.5">REDIS_SET 集合</text></g></g><g id="minder_node84"><g id="node_expander81" display="none" style="cursor: pointer;"><path id="kity_path_2337" fill="white" stroke="gray" d="M2280.5,5020.5A6,6,0,1,1,2268.5,5020.5A6,6,0,1,1,2280.5,5020.5"></path><path id="kity_path_2338" fill="none" stroke="gray"></path></g><path id="node_outline82" fill="none" stroke="none" d="M2285.5,5009.5h133a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-133a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text82" fill="black"><text id="kity_text_929" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5014.5" x="2290.5">REDIS_ZSET 有序集合</text></g></g><g id="minder_node85"><g id="node_expander84" style="cursor: pointer;"><path id="kity_path_2346" fill="white" stroke="gray" d="M2196.5,5072.5A6,6,0,1,1,2184.5,5072.5A6,6,0,1,1,2196.5,5072.5"></path><path id="kity_path_2347" fill="none" stroke="gray" d="M2186,5072.5L2195,5072.5"></path></g><path id="node_outline85" fill="none" stroke="none" d="M2201.5,5061.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text85" fill="black"><text id="kity_text_935" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5066.5" x="2206.5">编码</text></g></g><g id="minder_node86"><g id="node_expander83" display="none" style="cursor: pointer;"><path id="kity_path_2343" fill="white" stroke="gray" d="M2280.5,5072.5A6,6,0,1,1,2268.5,5072.5A6,6,0,1,1,2280.5,5072.5"></path><path id="kity_path_2344" fill="none" stroke="gray"></path></g><path id="node_outline84" fill="none" stroke="none" d="M2285.5,5061.5h127a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-127a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text84" fill="black"><text id="kity_text_933" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5066.5" x="2290.5">// TODO&#xa0; 8.1章, 待看</text></g></g><g id="minder_node87"><g id="node_expander86" style="cursor: pointer;"><path id="kity_path_2352" fill="white" stroke="gray" d="M2196.5,5124.5A6,6,0,1,1,2184.5,5124.5A6,6,0,1,1,2196.5,5124.5"></path><path id="kity_path_2353" fill="none" stroke="gray" d="M2186,5124.5L2195,5124.5"></path></g><path id="node_outline87" fill="none" stroke="none" d="M2201.5,5113.5h28a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-28a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text87" fill="black"><text id="kity_text_939" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5118.5" x="2206.5">GC</text></g></g><g id="minder_node88"><g id="node_expander85" display="none" style="cursor: pointer;"><path id="kity_path_2349" fill="white" stroke="gray" d="M2274.5,5124.5A6,6,0,1,1,2262.5,5124.5A6,6,0,1,1,2274.5,5124.5"></path><path id="kity_path_2350" fill="none" stroke="gray"></path></g><path id="node_outline86" fill="none" stroke="none" d="M2279.5,5113.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text86" fill="black"><text id="kity_text_937" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5118.5" x="2284.5">引用计数</text></g></g><g id="minder_node89"><g id="node_expander89" style="cursor: pointer;"><path id="kity_path_2361" fill="white" stroke="gray" d="M2196.5,5202.5A6,6,0,1,1,2184.5,5202.5A6,6,0,1,1,2196.5,5202.5"></path><path id="kity_path_2362" fill="none" stroke="gray" d="M2186,5202.5L2195,5202.5"></path></g><path id="node_outline90" fill="none" stroke="none" d="M2201.5,5191.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text90" fill="black"><text id="kity_text_945" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5196.5" x="2206.5">对象共享</text></g></g><g id="minder_node90"><g id="node_expander87" display="none" style="cursor: pointer;"><path id="kity_path_2355" fill="white" stroke="gray" d="M2304.5,5176.5A6,6,0,1,1,2292.5,5176.5A6,6,0,1,1,2304.5,5176.5"></path><path id="kity_path_2356" fill="none" stroke="gray"></path></g><path id="node_outline88" fill="none" stroke="none" d="M2309.5,5165.5h366a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-366a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text88" fill="black"><text id="kity_text_941" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5170.5" x="2314.5">Redis会在初始化服务器时, 创建0~9999的所有整数值作为共享对象</text></g></g><g id="minder_node91"><g id="node_expander88" display="none" style="cursor: pointer;"><path id="kity_path_2358" fill="white" stroke="gray" d="M2304.5,5228.5A6,6,0,1,1,2292.5,5228.5A6,6,0,1,1,2304.5,5228.5"></path><path id="kity_path_2359" fill="none" stroke="gray"></path></g><path id="node_outline89" fill="none" stroke="none" d="M2309.5,5217.5h450a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-450a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text89" fill="black"><text id="kity_text_943" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5222.5" x="2314.5">共享字符串对象的数量可以通过修改redis.h/REDIS_SHARE_INTEGERS常量来修改</text></g></g><g id="minder_node92"><g id="node_expander91" style="cursor: pointer;"><path id="kity_path_2367" fill="white" stroke="gray" d="M2196.5,5280.5A6,6,0,1,1,2184.5,5280.5A6,6,0,1,1,2196.5,5280.5"></path><path id="kity_path_2368" fill="none" stroke="gray" d="M2186,5280.5L2195,5280.5"></path></g><path id="node_outline92" fill="none" stroke="none" d="M2201.5,5269.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text92" fill="black"><text id="kity_text_949" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5274.5" x="2206.5">空转时长</text></g></g><g id="minder_node93"><g id="node_expander90" display="none" style="cursor: pointer;"><path id="kity_path_2364" fill="white" stroke="gray" d="M2304.5,5280.5A6,6,0,1,1,2292.5,5280.5A6,6,0,1,1,2304.5,5280.5"></path><path id="kity_path_2365" fill="none" stroke="gray"></path></g><path id="node_outline91" fill="none" stroke="none" d="M2309.5,5269.5h312a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-312a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text91" fill="black"><text id="kity_text_947" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5274.5" x="2314.5">根据当前时间减去键的值对象的lru时间来进行计算得出的</text></g></g><g id="minder_node94"><g id="node_expander232" style="cursor: pointer;"><path id="kity_path_2790" fill="white" stroke="gray" d="M2087.5,7637.5A6,6,0,1,1,2075.5,7637.5A6,6,0,1,1,2087.5,7637.5"></path><path id="kity_path_2791" fill="none" stroke="gray" d="M2077,7637.5L2086,7637.5"></path></g><path id="node_outline233" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M2091.5,7624.5h104a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-104a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text233" fill="black"><text id="kity_text_1275" text-rendering="inherit" font-family="宋体,SimSun" font-size="14" dy=".8em" y="7630.5" x="2108.5">单机数据库</text></g></g><g id="minder_node95"><g id="node_expander94" style="cursor: pointer;"><path id="kity_path_2376" fill="white" stroke="gray" d="M2238.5,5368.5A6,6,0,1,1,2226.5,5368.5A6,6,0,1,1,2238.5,5368.5"></path><path id="kity_path_2377" fill="none" stroke="gray" d="M2228,5368.5L2237,5368.5"></path></g><path id="node_outline95" fill="none" stroke="none" d="M2243.5,5357.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text95" fill="black"><text id="kity_text_958" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5362.5" x="2248.5">数据库结构定义</text></g></g><g id="minder_node96"><g id="node_expander93" display="none" style="cursor: pointer;"><path id="kity_path_2373" fill="white" stroke="gray" d="M2382.5,5368.5A6,6,0,1,1,2370.5,5368.5A6,6,0,1,1,2382.5,5368.5"></path><path id="kity_path_2374" fill="none" stroke="gray"></path></g><path id="node_outline94" fill="none" stroke="none" d="M2387.5,5330.5h208a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-208a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z"></path><g id="node_text94" fill="black"><text id="kity_text_953" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5335.5" x="2392.5">typedef struct redisDb {</text><text id="kity_text_954" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5353.5" x="2392.5">.&#xa0; &#xa0; // 过期字典, 保存着键的过期时间</text><text id="kity_text_955" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5371.5" x="2392.5">.&#xa0; &#xa0; dict *expires;</text><text id="kity_text_956" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5389.5" x="2392.5">} redisDb;</text></g></g><g id="minder_node97"><g id="node_expander111" style="cursor: pointer;"><path id="kity_path_2427" fill="white" stroke="gray" d="M2238.5,5681.5A6,6,0,1,1,2226.5,5681.5A6,6,0,1,1,2238.5,5681.5"></path><path id="kity_path_2428" fill="none" stroke="gray" d="M2228,5681.5L2237,5681.5"></path></g><path id="node_outline112" fill="none" stroke="none" d="M2243.5,5670.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text112" fill="black"><text id="kity_text_992" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5675.5" x="2248.5">过期删除</text></g></g><g id="minder_node98"><g id="node_expander95" display="none" style="cursor: pointer;"><path id="kity_path_2379" fill="white" stroke="gray" d="M2346.5,5447.5A6,6,0,1,1,2334.5,5447.5A6,6,0,1,1,2346.5,5447.5"></path><path id="kity_path_2380" fill="none" stroke="gray"></path></g><path id="node_outline96" fill="none" stroke="none" d="M2351.5,5436.5h242a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-242a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text96" fill="black"><text id="kity_text_960" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5441.5" x="2356.5">在expires字典中保存了数据库键的过期时间</text></g></g><g id="minder_node99"><g id="node_expander96" display="none" style="cursor: pointer;"><path id="kity_path_2382" fill="white" stroke="gray" d="M2346.5,5499.5A6,6,0,1,1,2334.5,5499.5A6,6,0,1,1,2346.5,5499.5"></path><path id="kity_path_2383" fill="none" stroke="gray"></path></g><path id="node_outline97" fill="none" stroke="none" d="M2351.5,5488.5h409a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-409a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text97" fill="black"><text id="kity_text_962" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5493.5" x="2356.5">dict和expires里的键都指向同一个键对象, 所以没有重复对象, 没有浪费空间</text></g></g><g id="minder_node100"><g id="node_expander106" style="cursor: pointer;"><path id="kity_path_2412" fill="white" stroke="gray" d="M2346.5,5629.5A6,6,0,1,1,2334.5,5629.5A6,6,0,1,1,2346.5,5629.5"></path><path id="kity_path_2413" fill="none" stroke="gray" d="M2336,5629.5L2345,5629.5"></path></g><path id="node_outline107" fill="none" stroke="none" d="M2351.5,5618.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text107" fill="black"><text id="kity_text_982" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5623.5" x="2356.5">删除策略</text></g></g><g id="minder_node101"><g id="node_expander98" style="cursor: pointer;"><path id="kity_path_2388" fill="white" stroke="gray" d="M2454.5,5551.5A6,6,0,1,1,2442.5,5551.5A6,6,0,1,1,2454.5,5551.5"></path><path id="kity_path_2389" fill="none" stroke="gray" d="M2444,5551.5L2453,5551.5"></path></g><path id="node_outline99" fill="none" stroke="none" d="M2459.5,5540.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text99" fill="black"><text id="kity_text_966" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5545.5" x="2464.5">惰性删除</text></g></g><g id="minder_node102"><g id="node_expander97" display="none" style="cursor: pointer;"><path id="kity_path_2385" fill="white" stroke="gray" d="M2562.5,5551.5A6,6,0,1,1,2550.5,5551.5A6,6,0,1,1,2562.5,5551.5"></path><path id="kity_path_2386" fill="none" stroke="gray"></path></g><path id="node_outline98" fill="none" stroke="none" d="M2567.5,5540.5h468a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-468a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text98" fill="black"><text id="kity_text_964" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5545.5" x="2572.5">每次访问到过期键的时候进行删除。浪费内存, 有可能永远无法回收, 有内存泄漏的风险</text></g></g><g id="minder_node103"><g id="node_expander105" style="cursor: pointer;"><path id="kity_path_2409" fill="white" stroke="gray" d="M2454.5,5707.5A6,6,0,1,1,2442.5,5707.5A6,6,0,1,1,2454.5,5707.5"></path><path id="kity_path_2410" fill="none" stroke="gray" d="M2444,5707.5L2453,5707.5"></path></g><path id="node_outline106" fill="none" stroke="none" d="M2459.5,5696.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text106" fill="black"><text id="kity_text_980" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5701.5" x="2464.5">定期删除</text></g></g><g id="minder_node104"><g id="node_expander104" style="cursor: pointer;"><path id="kity_path_2406" fill="white" stroke="gray" d="M2562.5,5707.5A6,6,0,1,1,2550.5,5707.5A6,6,0,1,1,2562.5,5707.5"></path><path id="kity_path_2407" fill="none" stroke="gray" d="M2552,5707.5L2561,5707.5"></path></g><path id="node_outline105" fill="none" stroke="none" d="M2567.5,5696.5h681a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-681a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text105" fill="black"><text id="kity_text_978" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5701.5" x="2572.5">在redis.c/serverCron函数里, 每隔一段时间执行一次删除过期键操作, 并通过限制时长和频率来减少删除操作对CPU时间的影响</text></g></g><g id="minder_node105"><g id="node_expander99" display="none" style="cursor: pointer;"><path id="kity_path_2391" fill="white" stroke="gray" d="M3293.5,5603.5A6,6,0,1,1,3281.5,5603.5A6,6,0,1,1,3293.5,5603.5"></path><path id="kity_path_2392" fill="none" stroke="gray"></path></g><path id="node_outline100" fill="none" stroke="none" d="M3298.5,5592.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text100" fill="black"><text id="kity_text_968" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5597.5" x="3303.5">current_db字段记录进度</text></g></g><g id="minder_node106"><g id="node_expander100" display="none" style="cursor: pointer;"><path id="kity_path_2394" fill="white" stroke="gray" d="M3293.5,5655.5A6,6,0,1,1,3281.5,5655.5A6,6,0,1,1,3293.5,5655.5"></path><path id="kity_path_2395" fill="none" stroke="gray"></path></g><path id="node_outline101" fill="none" stroke="none" d="M3298.5,5644.5h324a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-324a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text101" fill="black"><text id="kity_text_970" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5649.5" x="3303.5">如果当前的db里expire为空, 表示没有过期键, 则跳过这个库</text></g></g><g id="minder_node107"><g id="node_expander101" display="none" style="cursor: pointer;"><path id="kity_path_2397" fill="white" stroke="gray" d="M3293.5,5707.5A6,6,0,1,1,3281.5,5707.5A6,6,0,1,1,3293.5,5707.5"></path><path id="kity_path_2398" fill="none" stroke="gray"></path></g><path id="node_outline102" fill="none" stroke="none" d="M3298.5,5696.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text102" fill="black"><text id="kity_text_972" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5701.5" x="3303.5">随机获取一个带有过期时间的键</text></g></g><g id="minder_node108"><g id="node_expander102" display="none" style="cursor: pointer;"><path id="kity_path_2400" fill="white" stroke="gray" d="M3293.5,5759.5A6,6,0,1,1,3281.5,5759.5A6,6,0,1,1,3293.5,5759.5"></path><path id="kity_path_2401" fill="none" stroke="gray"></path></g><path id="node_outline103" fill="none" stroke="none" d="M3298.5,5748.5h200a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-200a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text103" fill="black"><text id="kity_text_974" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5753.5" x="3303.5">默认遍历20个键, 如果过期就删除它</text></g></g><g id="minder_node109"><g id="node_expander103" display="none" style="cursor: pointer;"><path id="kity_path_2403" fill="white" stroke="gray" d="M3293.5,5811.5A6,6,0,1,1,3281.5,5811.5A6,6,0,1,1,3293.5,5811.5"></path><path id="kity_path_2404" fill="none" stroke="gray"></path></g><path id="node_outline104" fill="none" stroke="none" d="M3298.5,5800.5h442a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-442a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text104" fill="black"><text id="kity_text_976" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5805.5" x="3303.5">如果遍历20个键的过程中, 提前到达时间上限, 那么就提前结束, 防止占用太多时间</text></g></g><g id="minder_node110"><g id="node_expander110" style="cursor: pointer;"><path id="kity_path_2424" fill="white" stroke="gray" d="M2346.5,5915.5A6,6,0,1,1,2334.5,5915.5A6,6,0,1,1,2346.5,5915.5"></path><path id="kity_path_2425" fill="none" stroke="gray" d="M2336,5915.5L2345,5915.5"></path></g><path id="node_outline111" fill="none" stroke="none" d="M2351.5,5904.5h203a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-203a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text111" fill="black"><text id="kity_text_990" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5909.5" x="2356.5">AOF/RDB/复制功能对过期键的处理</text></g></g><g id="minder_node111"><g id="node_expander107" display="none" style="cursor: pointer;"><path id="kity_path_2415" fill="white" stroke="gray" d="M2599.5,5863.5A6,6,0,1,1,2587.5,5863.5A6,6,0,1,1,2599.5,5863.5"></path><path id="kity_path_2416" fill="none" stroke="gray"></path></g><path id="node_outline108" fill="none" stroke="none" d="M2604.5,5852.5h150a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-150a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text108" fill="black"><text id="kity_text_984" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5857.5" x="2609.5">RDB不会保存已过期的key</text></g></g><g id="minder_node112"><g id="node_expander108" display="none" style="cursor: pointer;"><path id="kity_path_2418" fill="white" stroke="gray" d="M2599.5,5915.5A6,6,0,1,1,2587.5,5915.5A6,6,0,1,1,2599.5,5915.5"></path><path id="kity_path_2419" fill="none" stroke="gray"></path></g><path id="node_outline109" fill="none" stroke="none" d="M2604.5,5904.5h220a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-220a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text109" fill="black"><text id="kity_text_986" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5909.5" x="2609.5">AOF会在key被删除后追加一条DEL命令</text></g></g><g id="minder_node113"><g id="node_expander109" display="none" style="cursor: pointer;"><path id="kity_path_2421" fill="white" stroke="gray" d="M2599.5,5967.5A6,6,0,1,1,2587.5,5967.5A6,6,0,1,1,2599.5,5967.5"></path><path id="kity_path_2422" fill="none" stroke="gray"></path></g><path id="node_outline110" fill="none" stroke="none" d="M2604.5,5956.5h436a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-436a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text110" fill="black"><text id="kity_text_988" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="5961.5" x="2609.5">从服务器不会自动删除过期键, 只有在主服务器发来DEL命令之后才会删除过期键</text></g></g><g id="minder_node114"><g id="node_expander113" style="cursor: pointer;"><path id="kity_path_2433" fill="white" stroke="gray" d="M2238.5,6019.5A6,6,0,1,1,2226.5,6019.5A6,6,0,1,1,2238.5,6019.5"></path><path id="kity_path_2434" fill="none" stroke="gray" d="M2228,6019.5L2237,6019.5"></path></g><path id="node_outline114" fill="none" stroke="none" d="M2243.5,6008.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text114" fill="black"><text id="kity_text_996" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6013.5" x="2248.5">数据库通知</text></g></g><g id="minder_node115"><g id="node_expander112" display="none" style="cursor: pointer;"><path id="kity_path_2430" fill="white" stroke="gray" d="M2358.5,6019.5A6,6,0,1,1,2346.5,6019.5A6,6,0,1,1,2358.5,6019.5"></path><path id="kity_path_2431" fill="none" stroke="gray"></path></g><path id="node_outline113" fill="none" stroke="none" d="M2363.5,6008.5h258a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-258a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text113" fill="black"><text id="kity_text_994" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6013.5" x="2368.5">Redis2.8新增功能, 支持订阅数据库中键的变化</text></g></g><g id="minder_node116"><g id="node_expander161" style="cursor: pointer;"><path id="kity_path_2577" fill="white" stroke="gray" d="M2238.5,6603.5A6,6,0,1,1,2226.5,6603.5A6,6,0,1,1,2238.5,6603.5"></path><path id="kity_path_2578" fill="none" stroke="gray" d="M2228,6603.5L2237,6603.5"></path></g><path id="node_outline162" fill="none" stroke="none" d="M2243.5,6592.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text162" fill="black"><text id="kity_text_1113" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6597.5" x="2248.5">持久化</text></g></g><g id="minder_node117"><g id="node_expander121" style="cursor: pointer;"><path id="kity_path_2457" fill="white" stroke="gray" d="M2334.5,6226.5A6,6,0,1,1,2322.5,6226.5A6,6,0,1,1,2334.5,6226.5"></path><path id="kity_path_2458" fill="none" stroke="gray" d="M2324,6226.5L2333,6226.5"></path></g><path id="node_outline122" fill="none" stroke="none" d="M2339.5,6215.5h35a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-35a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text122" fill="black"><text id="kity_text_1023" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6220.5" x="2344.5">RDB</text></g></g><g id="minder_node118"><g id="node_expander114" display="none" style="cursor: pointer;"><path id="kity_path_2436" fill="white" stroke="gray" d="M2419.5,6071.5A6,6,0,1,1,2407.5,6071.5A6,6,0,1,1,2419.5,6071.5"></path><path id="kity_path_2437" fill="none" stroke="gray"></path></g><path id="node_outline115" fill="none" stroke="none" d="M2424.5,6060.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text115" fill="black"><text id="kity_text_998" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6065.5" x="2429.5">BGSAVE</text></g></g><g id="minder_node119"><g id="node_expander117" style="cursor: pointer;"><path id="kity_path_2445" fill="white" stroke="gray" d="M2419.5,6204.5A6,6,0,1,1,2407.5,6204.5A6,6,0,1,1,2419.5,6204.5"></path><path id="kity_path_2446" fill="none" stroke="gray" d="M2409,6204.5L2418,6204.5"></path></g><path id="node_outline118" fill="none" stroke="none" d="M2424.5,6193.5h167a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-167a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text118" fill="black"><text id="kity_text_1013" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6198.5" x="2429.5">serverCron里自动间隔性保存</text></g></g><g id="minder_node120"><g id="node_expander116" style="cursor: pointer;"><path id="kity_path_2442" fill="white" stroke="gray" d="M2636.5,6204.5A6,6,0,1,1,2624.5,6204.5A6,6,0,1,1,2636.5,6204.5"></path><path id="kity_path_2443" fill="none" stroke="gray" d="M2626,6204.5L2635,6204.5"></path></g><path id="node_outline117" fill="none" stroke="none" d="M2641.5,6193.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text117" fill="black"><text id="kity_text_1011" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6198.5" x="2646.5">相关结构</text></g></g><g id="minder_node121"><g id="node_expander115" display="none" style="cursor: pointer;"><path id="kity_path_2439" fill="white" stroke="gray" d="M2744.5,6204.5A6,6,0,1,1,2732.5,6204.5A6,6,0,1,1,2744.5,6204.5"></path><path id="kity_path_2440" fill="none" stroke="gray"></path></g><path id="node_outline116" fill="none" stroke="none" d="M2749.5,6112.5h342a5,5,0,0,1,5,5v174a5,5,0,0,1,-5,5h-342a5,5,0,0,1,-5,-5v-174a5,5,0,0,1,5,-5z"></path><g id="node_text116" fill="black"><text id="kity_text_1000" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6117.5" x="2754.5">redisServer</text><text id="kity_text_1001" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6135.5" x="2754.5">...</text><text id="kity_text_1002" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6153.5" x="2754.5">// 上次RDB之后数据变化的次数</text><text id="kity_text_1003" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6171.5" x="2754.5">long dirty;</text><text id="kity_text_1004" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6189.5" x="2754.5">// 上次RDB的时间</text><text id="kity_text_1005" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6207.5" x="2754.5">long lastsave;</text><text id="kity_text_1006" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6225.5" x="2754.5">// RDB触发条件和频率的配置</text><text id="kity_text_1007" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6243.5" x="2754.5">saveparams{</text><text id="kity_text_1008" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6261.5" x="2754.5">{seconds:xx秒, changes:xx次}, {seconds:xx秒, changes:xx次}</text><text id="kity_text_1009" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6279.5" x="2754.5">}</text></g></g><g id="minder_node122"><g id="node_expander120" style="cursor: pointer;"><path id="kity_path_2454" fill="white" stroke="gray" d="M2419.5,6381.5A6,6,0,1,1,2407.5,6381.5A6,6,0,1,1,2419.5,6381.5"></path><path id="kity_path_2455" fill="none" stroke="gray" d="M2409,6381.5L2418,6381.5"></path></g><path id="node_outline121" fill="none" stroke="none" d="M2424.5,6370.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text121" fill="black"><text id="kity_text_1021" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6375.5" x="2429.5">文件结构</text></g></g><g id="minder_node123"><g id="node_expander118" display="none" style="cursor: pointer;"><path id="kity_path_2448" fill="white" stroke="gray" d="M2527.5,6337.5A6,6,0,1,1,2515.5,6337.5A6,6,0,1,1,2527.5,6337.5"></path><path id="kity_path_2449" fill="none" stroke="gray"></path></g><path id="node_outline119" fill="none" stroke="none" d="M2532.5,6326.5h529a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-529a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text119" fill="black"><text id="kity_text_1015" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6331.5" x="2537.5">"REDIS" | db_version | "SELECTDB" | "0" | pairs | "SELECTDB" | "3" | pairs | EOF | check_sum</text></g></g><g id="minder_node124"><g id="node_expander119" display="none" style="cursor: pointer;"><path id="kity_path_2451" fill="white" stroke="gray" d="M2527.5,6407.5A6,6,0,1,1,2515.5,6407.5A6,6,0,1,1,2527.5,6407.5"></path><path id="kity_path_2452" fill="none" stroke="gray"></path></g><path id="node_outline120" fill="none" stroke="none" d="M2532.5,6378.5h575a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-575a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text120" fill="black"><text id="kity_text_1017" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6383.5" x="2537.5">其中pairs部分</text><text id="kity_text_1018" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6401.5" x="2537.5">如果不带过期时间, 那么结构如下:&#xa0; type(1字节) | key | value</text><text id="kity_text_1019" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6419.5" x="2537.5">如果带过期时间, 那么结构如下: "EXPIRETIME_MS"(1字节的枚举值) | ms(8字节) | type(1字节) | key | value</text></g></g><g id="minder_node125"><g id="node_expander160" style="cursor: pointer;"><path id="kity_path_2574" fill="white" stroke="gray" d="M2334.5,6980.5A6,6,0,1,1,2322.5,6980.5A6,6,0,1,1,2334.5,6980.5"></path><path id="kity_path_2575" fill="none" stroke="gray" d="M2324,6980.5L2333,6980.5"></path></g><path id="node_outline161" fill="none" stroke="none" d="M2339.5,6969.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text161" fill="black"><text id="kity_text_1111" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6974.5" x="2344.5">AOF</text></g></g><g id="minder_node126"><g id="node_expander122" display="none" style="cursor: pointer;"><path id="kity_path_2460" fill="white" stroke="gray" d="M2418.5,6477.5A6,6,0,1,1,2406.5,6477.5A6,6,0,1,1,2418.5,6477.5"></path><path id="kity_path_2461" fill="none" stroke="gray"></path></g><path id="node_outline123" fill="none" stroke="none" d="M2423.5,6466.5h292a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-292a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text123" fill="black"><text id="kity_text_1025" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6471.5" x="2428.5">以Redis的命令请求协议格式保存的 (REDIS通信协议)</text></g></g><g id="minder_node127"><g id="node_expander137" style="cursor: pointer;"><path id="kity_path_2505" fill="white" stroke="gray" d="M2418.5,6706.5A6,6,0,1,1,2406.5,6706.5A6,6,0,1,1,2418.5,6706.5"></path><path id="kity_path_2506" fill="none" stroke="gray" d="M2408,6706.5L2417,6706.5"></path></g><path id="node_outline138" fill="none" stroke="none" d="M2423.5,6695.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text138" fill="black"><text id="kity_text_1063" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6700.5" x="2428.5">实现</text></g></g><g id="minder_node128"><g id="node_expander123" display="none" style="cursor: pointer;"><path id="kity_path_2463" fill="white" stroke="gray" d="M2502.5,6573.5A6,6,0,1,1,2490.5,6573.5A6,6,0,1,1,2502.5,6573.5"></path><path id="kity_path_2464" fill="none" stroke="gray"></path></g><path id="node_outline124" fill="none" stroke="none" d="M2507.5,6517.5h113a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z"></path><g id="node_text124" fill="black"><text id="kity_text_1027" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6522.5" x="2512.5">struct redisServer{</text><text id="kity_text_1028" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6540.5" x="2512.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1029" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6558.5" x="2512.5">.&#xa0; &#xa0; // AOF缓冲区</text><text id="kity_text_1030" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6576.5" x="2512.5">.&#xa0; &#xa0; sds aof_buf;</text><text id="kity_text_1031" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6594.5" x="2512.5">.&#xa0; &#xa0; &#xa0;// ...</text><text id="kity_text_1032" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6612.5" x="2512.5">}</text></g></g><g id="minder_node129"><g id="node_expander125" style="cursor: pointer;"><path id="kity_path_2469" fill="white" stroke="gray" d="M2502.5,6670.5A6,6,0,1,1,2490.5,6670.5A6,6,0,1,1,2502.5,6670.5"></path><path id="kity_path_2470" fill="none" stroke="gray" d="M2492,6670.5L2501,6670.5"></path></g><path id="node_outline126" fill="none" stroke="none" d="M2507.5,6659.5h107a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-107a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text126" fill="black"><text id="kity_text_1036" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6664.5" x="2512.5">命令追加(append)</text></g></g><g id="minder_node130"><g id="node_expander124" display="none" style="cursor: pointer;"><path id="kity_path_2466" fill="white" stroke="gray" d="M2659.5,6670.5A6,6,0,1,1,2647.5,6670.5A6,6,0,1,1,2659.5,6670.5"></path><path id="kity_path_2467" fill="none" stroke="gray"></path></g><path id="node_outline125" fill="none" stroke="none" d="M2664.5,6659.5h115a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-115a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text125" fill="black"><text id="kity_text_1034" text-rendering="inherit" font-size="12" dy=".8em" y="6664.5" x="2669.5">会追加到aof_buf中</text></g></g><g id="minder_node131"><g id="node_expander127" style="cursor: pointer;"><path id="kity_path_2475" fill="white" stroke="gray" d="M2502.5,6722.5A6,6,0,1,1,2490.5,6722.5A6,6,0,1,1,2502.5,6722.5"></path><path id="kity_path_2476" fill="none" stroke="gray" d="M2492,6722.5L2501,6722.5"></path></g><path id="node_outline128" fill="none" stroke="none" d="M2507.5,6711.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text128" fill="black"><text id="kity_text_1040" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6716.5" x="2512.5">文件写入</text></g></g><g id="minder_node132"><g id="node_expander126" display="none" style="cursor: pointer;"><path id="kity_path_2472" fill="white" stroke="gray" d="M2610.5,6722.5A6,6,0,1,1,2598.5,6722.5A6,6,0,1,1,2610.5,6722.5"></path><path id="kity_path_2473" fill="none" stroke="gray"></path></g><path id="node_outline127" fill="none" stroke="none" d="M2615.5,6711.5h517a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-517a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text127" fill="black"><text id="kity_text_1038" text-rendering="inherit" font-size="12" dy=".8em" y="6716.5" x="2620.5">如果appendfsync选项的值为everysec, 那么每秒会定时把aof_buf中的内容写入到AOF文件中</text></g></g><g id="minder_node133"><g id="node_expander136" style="cursor: pointer;"><path id="kity_path_2502" fill="white" stroke="gray" d="M2502.5,6884.5A6,6,0,1,1,2490.5,6884.5A6,6,0,1,1,2502.5,6884.5"></path><path id="kity_path_2503" fill="none" stroke="gray" d="M2492,6884.5L2501,6884.5"></path></g><path id="node_outline137" fill="none" stroke="none" d="M2507.5,6873.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text137" fill="black"><text id="kity_text_1061" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6878.5" x="2512.5">文件同步</text></g></g><g id="minder_node134"><g id="node_expander135" style="cursor: pointer;"><path id="kity_path_2499" fill="white" stroke="gray" d="M2610.5,6884.5A6,6,0,1,1,2598.5,6884.5A6,6,0,1,1,2610.5,6884.5"></path><path id="kity_path_2500" fill="none" stroke="gray" d="M2600,6884.5L2609,6884.5"></path></g><path id="node_outline136" fill="none" stroke="none" d="M2615.5,6873.5h867a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-867a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text136" fill="black"><text id="kity_text_1059" text-rendering="inherit" font-size="12" dy=".8em" y="6878.5" x="2620.5">操作系统write函数也会有缓存, 这样在突然停机时会有丢失数据的风险。所以redis会借助操作系统提供的fsync函数和fdatasync函数来让操作系统立即写入数据。</text></g></g><g id="minder_node135"><g id="node_expander129" style="cursor: pointer;"><path id="kity_path_2481" fill="white" stroke="gray" d="M3527.5,6784.5A6,6,0,1,1,3515.5,6784.5A6,6,0,1,1,3527.5,6784.5"></path><path id="kity_path_2482" fill="none" stroke="gray" d="M3517,6784.5L3526,6784.5"></path></g><path id="node_outline130" fill="none" stroke="none" d="M3532.5,6773.5h60a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-60a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text130" fill="black"><text id="kity_text_1045" text-rendering="inherit" font-size="12" dy=".8em" y="6778.5" x="3537.5">sync函数</text></g></g><g id="minder_node136"><g id="node_expander128" display="none" style="cursor: pointer;"><path id="kity_path_2478" fill="white" stroke="gray" d="M3637.5,6784.5A6,6,0,1,1,3625.5,6784.5A6,6,0,1,1,3637.5,6784.5"></path><path id="kity_path_2479" fill="none" stroke="gray"></path></g><path id="node_outline129" fill="none" stroke="none" d="M3642.5,6764.5h797a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-797a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text129" fill="black"><text id="kity_text_1042" text-rendering="inherit" font-size="12" dy=".8em" y="6769.5" x="3647.5">sync函数只是将所有修改过的块缓冲区排入写队列，然后就返回，它并不等待实际写磁盘操作结束。</text><text id="kity_text_1043" text-rendering="inherit" font-size="12" dy=".8em" y="6787.5" x="3647.5">通常称为update的系统守护进程会周期性地（一般每隔30秒）调用sync函数。这就保证了定期冲洗内核的块缓冲区。命令sync(1)也调用sync函数。</text></g></g><g id="minder_node137"><g id="node_expander131" style="cursor: pointer;"><path id="kity_path_2487" fill="white" stroke="gray" d="M3527.5,6854.5A6,6,0,1,1,3515.5,6854.5A6,6,0,1,1,3527.5,6854.5"></path><path id="kity_path_2488" fill="none" stroke="gray" d="M3517,6854.5L3526,6854.5"></path></g><path id="node_outline132" fill="none" stroke="none" d="M3532.5,6843.5h64a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-64a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text132" fill="black"><text id="kity_text_1050" text-rendering="inherit" font-size="12" dy=".8em" y="6848.5" x="3537.5">fsync函数</text></g></g><g id="minder_node138"><g id="node_expander130" display="none" style="cursor: pointer;"><path id="kity_path_2484" fill="white" stroke="gray" d="M3641.5,6854.5A6,6,0,1,1,3629.5,6854.5A6,6,0,1,1,3641.5,6854.5"></path><path id="kity_path_2485" fill="none" stroke="gray"></path></g><path id="node_outline131" fill="none" stroke="none" d="M3646.5,6834.5h533a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-533a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text131" fill="black"><text id="kity_text_1047" text-rendering="inherit" font-size="12" dy=".8em" y="6839.5" x="3651.5">fsync函数只对由文件描述符filedes指定的单一文件起作用，并且等待写磁盘操作结束，然后返回。</text><text id="kity_text_1048" text-rendering="inherit" font-size="12" dy=".8em" y="6857.5" x="3651.5">fsync可用于数据库这样的应用程序，这种应用程序需要确保将修改过的块立即写到磁盘上。</text></g></g><g id="minder_node139"><g id="node_expander133" style="cursor: pointer;"><path id="kity_path_2493" fill="white" stroke="gray" d="M3527.5,6924.5A6,6,0,1,1,3515.5,6924.5A6,6,0,1,1,3527.5,6924.5"></path><path id="kity_path_2494" fill="none" stroke="gray" d="M3517,6924.5L3526,6924.5"></path></g><path id="node_outline134" fill="none" stroke="none" d="M3532.5,6913.5h93a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-93a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text134" fill="black"><text id="kity_text_1055" text-rendering="inherit" font-size="12" dy=".8em" y="6918.5" x="3537.5">fdatasync函数</text></g></g><g id="minder_node140"><g id="node_expander132" display="none" style="cursor: pointer;"><path id="kity_path_2490" fill="white" stroke="gray" d="M3670.5,6924.5A6,6,0,1,1,3658.5,6924.5A6,6,0,1,1,3670.5,6924.5"></path><path id="kity_path_2491" fill="none" stroke="gray"></path></g><path id="node_outline133" fill="none" stroke="none" d="M3675.5,6904.5h910a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-910a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text133" fill="black"><text id="kity_text_1052" text-rendering="inherit" font-size="12" dy=".8em" y="6909.5" x="3680.5">fdatasync函数类似于fsync，但它只影响文件的数据部分。而除数据外，fsync还会同步更新文件的属性。</text><text id="kity_text_1053" text-rendering="inherit" font-size="12" dy=".8em" y="6927.5" x="3680.5">对于提供事务支持的数据库，在事务提交时，都要确保事务日志（包含该事务所有的修改操作以及一个提交记录）完全写到硬盘上，才认定事务提交成功并返回给应用层。</text></g></g><g id="minder_node141"><g id="node_expander134" display="none" style="cursor: pointer;"><path id="kity_path_2496" fill="white" stroke="gray" d="M3527.5,6985.5A6,6,0,1,1,3515.5,6985.5A6,6,0,1,1,3527.5,6985.5"></path><path id="kity_path_2497" fill="none" stroke="gray"></path></g><path id="node_outline135" fill="none" stroke="none" d="M3532.5,6974.5h39a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-39a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text135" fill="black"><text id="kity_text_1057" text-rendering="inherit" font-size="12" dy=".8em" y="6979.5" x="3537.5">fflush</text></g></g><g id="minder_node142"><g id="node_expander140" style="cursor: pointer;"><path id="kity_path_2514" fill="white" stroke="gray" d="M2418.5,7063.5A6,6,0,1,1,2406.5,7063.5A6,6,0,1,1,2418.5,7063.5"></path><path id="kity_path_2515" fill="none" stroke="gray" d="M2408,7063.5L2417,7063.5"></path></g><path id="node_outline141" fill="none" stroke="none" d="M2423.5,7052.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text141" fill="black"><text id="kity_text_1069" text-rendering="inherit" font-size="12" dy=".8em" y="7057.5" x="2428.5">载入与数据还原</text></g></g><g id="minder_node143"><g id="node_expander138" display="none" style="cursor: pointer;"><path id="kity_path_2508" fill="white" stroke="gray" d="M2562.5,7037.5A6,6,0,1,1,2550.5,7037.5A6,6,0,1,1,2562.5,7037.5"></path><path id="kity_path_2509" fill="none" stroke="gray"></path></g><path id="node_outline139" fill="none" stroke="none" d="M2567.5,7026.5h95a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-95a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text139" fill="black"><text id="kity_text_1065" text-rendering="inherit" font-size="12" dy=".8em" y="7031.5" x="2572.5">创建fake client</text></g></g><g id="minder_node144"><g id="node_expander139" display="none" style="cursor: pointer;"><path id="kity_path_2511" fill="white" stroke="gray" d="M2562.5,7089.5A6,6,0,1,1,2550.5,7089.5A6,6,0,1,1,2562.5,7089.5"></path><path id="kity_path_2512" fill="none" stroke="gray"></path></g><path id="node_outline140" fill="none" stroke="none" d="M2567.5,7078.5h709a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-709a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text140" fill="black"><text id="kity_text_1067" text-rendering="inherit" font-size="12" dy=".8em" y="7083.5" x="2572.5">从AOF文件中分析并读取出一条写命令, 使用fake client执行被读出的写命令。循环此步骤, 直到AOF文件中的所有写命令都处理完。</text></g></g><g id="minder_node145"><g id="node_expander159" style="cursor: pointer;"><path id="kity_path_2571" fill="white" stroke="gray" d="M2418.5,7484.5A6,6,0,1,1,2406.5,7484.5A6,6,0,1,1,2418.5,7484.5"></path><path id="kity_path_2572" fill="none" stroke="gray" d="M2408,7484.5L2417,7484.5"></path></g><path id="node_outline160" fill="none" stroke="none" d="M2423.5,7473.5h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text160" fill="black"><text id="kity_text_1109" text-rendering="inherit" font-size="12" dy=".8em" y="7478.5" x="2428.5">AOF重写</text></g></g><g id="minder_node146"><g id="node_expander147" style="cursor: pointer;"><path id="kity_path_2535" fill="white" stroke="gray" d="M2527.5,7271.5A6,6,0,1,1,2515.5,7271.5A6,6,0,1,1,2527.5,7271.5"></path><path id="kity_path_2536" fill="none" stroke="gray" d="M2517,7271.5L2526,7271.5"></path></g><path id="node_outline148" fill="none" stroke="none" d="M2532.5,7260.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text148" fill="black"><text id="kity_text_1083" text-rendering="inherit" font-size="12" dy=".8em" y="7265.5" x="2537.5">步骤</text></g></g><g id="minder_node147"><g id="node_expander141" display="none" style="cursor: pointer;"><path id="kity_path_2517" fill="white" stroke="gray" d="M2611.5,7141.5A6,6,0,1,1,2599.5,7141.5A6,6,0,1,1,2611.5,7141.5"></path><path id="kity_path_2518" fill="none" stroke="gray"></path></g><path id="node_outline142" fill="none" stroke="none" d="M2616.5,7130.5h95a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-95a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text142" fill="black"><text id="kity_text_1071" text-rendering="inherit" font-size="12" dy=".8em" y="7135.5" x="2621.5">创建新AOF文件</text></g></g><g id="minder_node148"><g id="node_expander142" display="none" style="cursor: pointer;"><path id="kity_path_2520" fill="white" stroke="gray" d="M2611.5,7193.5A6,6,0,1,1,2599.5,7193.5A6,6,0,1,1,2611.5,7193.5"></path><path id="kity_path_2521" fill="none" stroke="gray"></path></g><path id="node_outline143" fill="none" stroke="none" d="M2616.5,7182.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text143" fill="black"><text id="kity_text_1073" text-rendering="inherit" font-size="12" dy=".8em" y="7187.5" x="2621.5">遍历数据库</text></g></g><g id="minder_node149"><g id="node_expander143" display="none" style="cursor: pointer;"><path id="kity_path_2523" fill="white" stroke="gray" d="M2611.5,7245.5A6,6,0,1,1,2599.5,7245.5A6,6,0,1,1,2611.5,7245.5"></path><path id="kity_path_2524" fill="none" stroke="gray"></path></g><path id="node_outline144" fill="none" stroke="none" d="M2616.5,7234.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text144" fill="black"><text id="kity_text_1075" text-rendering="inherit" font-size="12" dy=".8em" y="7239.5" x="2621.5">遍历数据库中的所有键</text></g></g><g id="minder_node150"><g id="node_expander144" display="none" style="cursor: pointer;"><path id="kity_path_2526" fill="white" stroke="gray" d="M2611.5,7297.5A6,6,0,1,1,2599.5,7297.5A6,6,0,1,1,2611.5,7297.5"></path><path id="kity_path_2527" fill="none" stroke="gray"></path></g><path id="node_outline145" fill="none" stroke="none" d="M2616.5,7286.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text145" fill="black"><text id="kity_text_1077" text-rendering="inherit" font-size="12" dy=".8em" y="7291.5" x="2621.5">对键进行重写</text></g></g><g id="minder_node151"><g id="node_expander145" display="none" style="cursor: pointer;"><path id="kity_path_2529" fill="white" stroke="gray" d="M2611.5,7349.5A6,6,0,1,1,2599.5,7349.5A6,6,0,1,1,2611.5,7349.5"></path><path id="kity_path_2530" fill="none" stroke="gray"></path></g><path id="node_outline146" fill="none" stroke="none" d="M2616.5,7338.5h220a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-220a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text146" fill="black"><text id="kity_text_1079" text-rendering="inherit" font-size="12" dy=".8em" y="7343.5" x="2621.5">如果键有过期时间, 那么要重写过期时间</text></g></g><g id="minder_node152"><g id="node_expander146" display="none" style="cursor: pointer;"><path id="kity_path_2532" fill="white" stroke="gray" d="M2611.5,7401.5A6,6,0,1,1,2599.5,7401.5A6,6,0,1,1,2611.5,7401.5"></path><path id="kity_path_2533" fill="none" stroke="gray"></path></g><path id="node_outline147" fill="none" stroke="none" d="M2616.5,7390.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text147" fill="black"><text id="kity_text_1081" text-rendering="inherit" font-size="12" dy=".8em" y="7395.5" x="2621.5">关闭文件</text></g></g><g id="minder_node153"><g id="node_expander149" style="cursor: pointer;"><path id="kity_path_2541" fill="white" stroke="gray" d="M2527.5,7471.5A6,6,0,1,1,2515.5,7471.5A6,6,0,1,1,2527.5,7471.5"></path><path id="kity_path_2542" fill="none" stroke="gray" d="M2517,7471.5L2526,7471.5"></path></g><path id="node_outline150" fill="none" stroke="none" d="M2532.5,7460.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text150" fill="black"><text id="kity_text_1089" text-rendering="inherit" font-size="12" dy=".8em" y="7465.5" x="2537.5">指令拆分</text></g></g><g id="minder_node154"><g id="node_expander148" display="none" style="cursor: pointer;"><path id="kity_path_2538" fill="white" stroke="gray" d="M2635.5,7471.5A6,6,0,1,1,2623.5,7471.5A6,6,0,1,1,2635.5,7471.5"></path><path id="kity_path_2539" fill="none" stroke="gray"></path></g><path id="node_outline149" fill="none" stroke="none" d="M2640.5,7442.5h647a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-647a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text149" fill="black"><text id="kity_text_1085" text-rendering="inherit" font-size="12" dy=".8em" y="7447.5" x="2645.5">为了避免在执行命令时造成客户端输入缓冲区溢出, </text><text id="kity_text_1086" text-rendering="inherit" font-size="12" dy=".8em" y="7465.5" x="2645.5">重写程序在处理集合类型时, 如果元素的数量超过了redis.h/REDIS_AOF_REWRITE_ITEMS_PER_CMD常量的值(默认是64), </text><text id="kity_text_1087" text-rendering="inherit" font-size="12" dy=".8em" y="7483.5" x="2645.5">那么每条命令设置的元素数量也不会超过64</text></g></g><g id="minder_node155"><g id="node_expander152" style="cursor: pointer;"><path id="kity_path_2550" fill="white" stroke="gray" d="M2527.5,7567.5A6,6,0,1,1,2515.5,7567.5A6,6,0,1,1,2527.5,7567.5"></path><path id="kity_path_2551" fill="none" stroke="gray" d="M2517,7567.5L2526,7567.5"></path></g><path id="node_outline153" fill="none" stroke="none" d="M2532.5,7556.5h103a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-103a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text153" fill="black"><text id="kity_text_1095" text-rendering="inherit" font-size="12" dy=".8em" y="7561.5" x="2537.5">后台重写(子进程)</text></g></g><g id="minder_node156"><g id="node_expander150" display="none" style="cursor: pointer;"><path id="kity_path_2544" fill="white" stroke="gray" d="M2680.5,7541.5A6,6,0,1,1,2668.5,7541.5A6,6,0,1,1,2680.5,7541.5"></path><path id="kity_path_2545" fill="none" stroke="gray"></path></g><path id="node_outline151" fill="none" stroke="none" d="M2685.5,7530.5h287a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-287a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text151" fill="black"><text id="kity_text_1091" text-rendering="inherit" font-size="12" dy=".8em" y="7535.5" x="2690.5">为了让AOF重写过程不阻塞主进程正常处理命令请求</text></g></g><g id="minder_node157"><g id="node_expander151" display="none" style="cursor: pointer;"><path id="kity_path_2547" fill="white" stroke="gray" d="M2680.5,7593.5A6,6,0,1,1,2668.5,7593.5A6,6,0,1,1,2680.5,7593.5"></path><path id="kity_path_2548" fill="none" stroke="gray"></path></g><path id="node_outline152" fill="none" stroke="none" d="M2685.5,7582.5h383a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-383a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text152" fill="black"><text id="kity_text_1093" text-rendering="inherit" font-size="12" dy=".8em" y="7587.5" x="2690.5">使用子进程而不是线程, 可以在避免使用锁的情况下, 保证数据的安全性</text></g></g><g id="minder_node158"><g id="node_expander158" style="cursor: pointer;"><path id="kity_path_2568" fill="white" stroke="gray" d="M2527.5,7697.5A6,6,0,1,1,2515.5,7697.5A6,6,0,1,1,2527.5,7697.5"></path><path id="kity_path_2569" fill="none" stroke="gray" d="M2517,7697.5L2526,7697.5"></path></g><path id="node_outline159" fill="none" stroke="none" d="M2532.5,7686.5h269a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-269a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text159" fill="black"><text id="kity_text_1107" text-rendering="inherit" font-size="12" dy=".8em" y="7691.5" x="2537.5">AOF重写期间, 服务器进程需要执行一下三个工作</text></g></g><g id="minder_node159"><g id="node_expander153" display="none" style="cursor: pointer;"><path id="kity_path_2553" fill="white" stroke="gray" d="M2846.5,7645.5A6,6,0,1,1,2834.5,7645.5A6,6,0,1,1,2846.5,7645.5"></path><path id="kity_path_2554" fill="none" stroke="gray"></path></g><path id="node_outline154" fill="none" stroke="none" d="M2851.5,7634.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text154" fill="black"><text id="kity_text_1097" text-rendering="inherit" font-size="12" dy=".8em" y="7639.5" x="2856.5">执行客户端发来的命令</text></g></g><g id="minder_node160"><g id="node_expander155" style="cursor: pointer;"><path id="kity_path_2559" fill="white" stroke="gray" d="M2846.5,7697.5A6,6,0,1,1,2834.5,7697.5A6,6,0,1,1,2846.5,7697.5"></path><path id="kity_path_2560" fill="none" stroke="gray" d="M2836,7697.5L2845,7697.5"></path></g><path id="node_outline156" fill="none" stroke="none" d="M2851.5,7686.5h203a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-203a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text156" fill="black"><text id="kity_text_1101" text-rendering="inherit" font-size="12" dy=".8em" y="7691.5" x="2856.5">将执行后的写命令追加到AOF缓冲区</text></g></g><g id="minder_node161"><g id="node_expander154" display="none" style="cursor: pointer;"><path id="kity_path_2556" fill="white" stroke="gray" d="M3099.5,7697.5A6,6,0,1,1,3087.5,7697.5A6,6,0,1,1,3099.5,7697.5"></path><path id="kity_path_2557" fill="none" stroke="gray"></path></g><path id="node_outline155" fill="none" stroke="none" d="M3104.5,7686.5h107a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-107a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text155" fill="black"><text id="kity_text_1099" text-rendering="inherit" font-size="12" dy=".8em" y="7691.5" x="3109.5">保证现有AOF文件</text></g></g><g id="minder_node162"><g id="node_expander157" style="cursor: pointer;"><path id="kity_path_2565" fill="white" stroke="gray" d="M2846.5,7749.5A6,6,0,1,1,2834.5,7749.5A6,6,0,1,1,2846.5,7749.5"></path><path id="kity_path_2566" fill="none" stroke="gray" d="M2836,7749.5L2845,7749.5"></path></g><path id="node_outline158" fill="none" stroke="none" d="M2851.5,7738.5h227a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-227a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text158" fill="black"><text id="kity_text_1105" text-rendering="inherit" font-size="12" dy=".8em" y="7743.5" x="2856.5">将执行后的写命令追加到AOF重写缓冲区</text></g></g><g id="minder_node163"><g id="node_expander156" display="none" style="cursor: pointer;"><path id="kity_path_2562" fill="white" stroke="gray" d="M3123.5,7749.5A6,6,0,1,1,3111.5,7749.5A6,6,0,1,1,3123.5,7749.5"></path><path id="kity_path_2563" fill="none" stroke="gray"></path></g><path id="node_outline157" fill="none" stroke="none" d="M3128.5,7738.5h95a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-95a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text157" fill="black"><text id="kity_text_1103" text-rendering="inherit" font-size="12" dy=".8em" y="7743.5" x="3133.5">保证新AOF文件</text></g></g><g id="minder_node164"><g id="node_expander184" style="cursor: pointer;"><path id="kity_path_2646" fill="white" stroke="gray" d="M2238.5,8057.5A6,6,0,1,1,2226.5,8057.5A6,6,0,1,1,2238.5,8057.5"></path><path id="kity_path_2647" fill="none" stroke="gray" d="M2228,8057.5L2237,8057.5"></path></g><path id="node_outline185" fill="none" stroke="none" d="M2243.5,8046.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text185" fill="black"><text id="kity_text_1160" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="8051.5" x="2248.5">事件</text></g></g><g id="minder_node165"><g id="node_expander167" style="cursor: pointer;"><path id="kity_path_2595" fill="white" stroke="gray" d="M2322.5,7879.5A6,6,0,1,1,2310.5,7879.5A6,6,0,1,1,2322.5,7879.5"></path><path id="kity_path_2596" fill="none" stroke="gray" d="M2312,7879.5L2321,7879.5"></path></g><path id="node_outline168" fill="none" stroke="none" d="M2327.5,7868.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text168" fill="black"><text id="kity_text_1125" text-rendering="inherit" font-size="12" dy=".8em" y="7873.5" x="2332.5">文件事件</text></g></g><g id="minder_node166"><g id="node_expander166" style="cursor: pointer;"><path id="kity_path_2592" fill="white" stroke="gray" d="M2430.5,7879.5A6,6,0,1,1,2418.5,7879.5A6,6,0,1,1,2430.5,7879.5"></path><path id="kity_path_2593" fill="none" stroke="gray" d="M2420,7879.5L2429,7879.5"></path></g><path id="node_outline167" fill="none" stroke="none" d="M2435.5,7868.5h147a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-147a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text167" fill="black"><text id="kity_text_1123" text-rendering="inherit" font-size="12" dy=".8em" y="7873.5" x="2440.5">IO多路复用/Reactor模式</text></g></g><g id="minder_node167"><g id="node_expander162" display="none" style="cursor: pointer;"><path id="kity_path_2580" fill="white" stroke="gray" d="M2627.5,7801.5A6,6,0,1,1,2615.5,7801.5A6,6,0,1,1,2627.5,7801.5"></path><path id="kity_path_2581" fill="none" stroke="gray"></path></g><path id="node_outline163" fill="none" stroke="none" d="M2632.5,7790.5h48a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-48a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text163" fill="black"><text id="kity_text_1115" text-rendering="inherit" font-size="12" dy=".8em" y="7795.5" x="2637.5">evport</text></g></g><g id="minder_node168"><g id="node_expander163" display="none" style="cursor: pointer;"><path id="kity_path_2583" fill="white" stroke="gray" d="M2627.5,7853.5A6,6,0,1,1,2615.5,7853.5A6,6,0,1,1,2627.5,7853.5"></path><path id="kity_path_2584" fill="none" stroke="gray"></path></g><path id="node_outline164" fill="none" stroke="none" d="M2632.5,7842.5h39a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-39a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text164" fill="black"><text id="kity_text_1117" text-rendering="inherit" font-size="12" dy=".8em" y="7847.5" x="2637.5">epoll</text></g></g><g id="minder_node169"><g id="node_expander164" display="none" style="cursor: pointer;"><path id="kity_path_2586" fill="white" stroke="gray" d="M2627.5,7905.5A6,6,0,1,1,2615.5,7905.5A6,6,0,1,1,2627.5,7905.5"></path><path id="kity_path_2587" fill="none" stroke="gray"></path></g><path id="node_outline165" fill="none" stroke="none" d="M2632.5,7894.5h54a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-54a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text165" fill="black"><text id="kity_text_1119" text-rendering="inherit" font-size="12" dy=".8em" y="7899.5" x="2637.5">kqueue</text></g></g><g id="minder_node170"><g id="node_expander165" display="none" style="cursor: pointer;"><path id="kity_path_2589" fill="white" stroke="gray" d="M2627.5,7957.5A6,6,0,1,1,2615.5,7957.5A6,6,0,1,1,2627.5,7957.5"></path><path id="kity_path_2590" fill="none" stroke="gray"></path></g><path id="node_outline166" fill="none" stroke="none" d="M2632.5,7946.5h45a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-45a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text166" fill="black"><text id="kity_text_1121" text-rendering="inherit" font-size="12" dy=".8em" y="7951.5" x="2637.5">select</text></g></g><g id="minder_node171"><g id="node_expander183" style="cursor: pointer;"><path id="kity_path_2643" fill="white" stroke="gray" d="M2322.5,8235.5A6,6,0,1,1,2310.5,8235.5A6,6,0,1,1,2322.5,8235.5"></path><path id="kity_path_2644" fill="none" stroke="gray" d="M2312,8235.5L2321,8235.5"></path></g><path id="node_outline184" fill="none" stroke="none" d="M2327.5,8224.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text184" fill="black"><text id="kity_text_1158" text-rendering="inherit" font-size="12" dy=".8em" y="8229.5" x="2332.5">时间事件</text></g></g><g id="minder_node172"><g id="node_expander170" style="cursor: pointer;"><path id="kity_path_2604" fill="white" stroke="gray" d="M2430.5,8036.5A6,6,0,1,1,2418.5,8036.5A6,6,0,1,1,2430.5,8036.5"></path><path id="kity_path_2605" fill="none" stroke="gray" d="M2420,8036.5L2429,8036.5"></path></g><path id="node_outline171" fill="none" stroke="none" d="M2435.5,8025.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text171" fill="black"><text id="kity_text_1131" text-rendering="inherit" font-size="12" dy=".8em" y="8030.5" x="2440.5">定时事件</text></g></g><g id="minder_node173"><g id="node_expander168" display="none" style="cursor: pointer;"><path id="kity_path_2598" fill="white" stroke="gray" d="M2538.5,8010.5A6,6,0,1,1,2526.5,8010.5A6,6,0,1,1,2538.5,8010.5"></path><path id="kity_path_2599" fill="none" stroke="gray"></path></g><path id="node_outline169" fill="none" stroke="none" d="M2543.5,7999.5h174a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-174a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text169" fill="black"><text id="kity_text_1127" text-rendering="inherit" font-size="12" dy=".8em" y="8004.5" x="2548.5">比如, 让程序在30毫秒之后执行</text></g></g><g id="minder_node174"><g id="node_expander169" display="none" style="cursor: pointer;"><path id="kity_path_2601" fill="white" stroke="gray" d="M2538.5,8062.5A6,6,0,1,1,2526.5,8062.5A6,6,0,1,1,2538.5,8062.5"></path><path id="kity_path_2602" fill="none" stroke="gray"></path></g><path id="node_outline170" fill="none" stroke="none" d="M2543.5,8051.5h148a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-148a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text170" fill="black"><text id="kity_text_1129" text-rendering="inherit" font-size="12" dy=".8em" y="8056.5" x="2548.5">时间事件到达后, 会被删除</text></g></g><g id="minder_node175"><g id="node_expander173" style="cursor: pointer;"><path id="kity_path_2613" fill="white" stroke="gray" d="M2430.5,8140.5A6,6,0,1,1,2418.5,8140.5A6,6,0,1,1,2430.5,8140.5"></path><path id="kity_path_2614" fill="none" stroke="gray" d="M2420,8140.5L2429,8140.5"></path></g><path id="node_outline174" fill="none" stroke="none" d="M2435.5,8129.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text174" fill="black"><text id="kity_text_1137" text-rendering="inherit" font-size="12" dy=".8em" y="8134.5" x="2440.5">周期性事件</text></g></g><g id="minder_node176"><g id="node_expander171" display="none" style="cursor: pointer;"><path id="kity_path_2607" fill="white" stroke="gray" d="M2550.5,8114.5A6,6,0,1,1,2538.5,8114.5A6,6,0,1,1,2550.5,8114.5"></path><path id="kity_path_2608" fill="none" stroke="gray"></path></g><path id="node_outline172" fill="none" stroke="none" d="M2555.5,8103.5h174a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-174a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text172" fill="black"><text id="kity_text_1133" text-rendering="inherit" font-size="12" dy=".8em" y="8108.5" x="2560.5">比如, 让程序每30毫秒执行一次</text></g></g><g id="minder_node177"><g id="node_expander172" display="none" style="cursor: pointer;"><path id="kity_path_2610" fill="white" stroke="gray" d="M2550.5,8166.5A6,6,0,1,1,2538.5,8166.5A6,6,0,1,1,2550.5,8166.5"></path><path id="kity_path_2611" fill="none" stroke="gray"></path></g><path id="node_outline173" fill="none" stroke="none" d="M2555.5,8155.5h301a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-301a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text173" fill="black"><text id="kity_text_1135" text-rendering="inherit" font-size="12" dy=".8em" y="8160.5" x="2560.5">时间事件到达之后, 会对时间事件的when属性进行更新</text></g></g><g id="minder_node178"><g id="node_expander174" display="none" style="cursor: pointer;"><path id="kity_path_2616" fill="white" stroke="gray" d="M2430.5,8218.5A6,6,0,1,1,2418.5,8218.5A6,6,0,1,1,2430.5,8218.5"></path><path id="kity_path_2617" fill="none" stroke="gray"></path></g><path id="node_outline175" fill="none" stroke="none" d="M2435.5,8207.5h655a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-655a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text175" fill="black"><text id="kity_text_1139" text-rendering="inherit" font-size="12" dy=".8em" y="8212.5" x="2440.5">redis使用无序链表来维护时间事件。新事件会插入到链表头部。当时间事件执行器运行的时候, 会遍历链表中的所有节点。</text></g></g><g id="minder_node179"><g id="node_expander182" style="cursor: pointer;"><path id="kity_path_2640" fill="white" stroke="gray" d="M2430.5,8435.5A6,6,0,1,1,2418.5,8435.5A6,6,0,1,1,2430.5,8435.5"></path><path id="kity_path_2641" fill="none" stroke="gray" d="M2420,8435.5L2429,8435.5"></path></g><path id="node_outline183" fill="none" stroke="none" d="M2435.5,8424.5h97a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-97a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text183" fill="black"><text id="kity_text_1156" text-rendering="inherit" font-size="12" dy=".8em" y="8429.5" x="2440.5">serverCron函数</text></g></g><g id="minder_node180"><g id="node_expander175" display="none" style="cursor: pointer;"><path id="kity_path_2619" fill="white" stroke="gray" d="M2577.5,8270.5A6,6,0,1,1,2565.5,8270.5A6,6,0,1,1,2577.5,8270.5"></path><path id="kity_path_2620" fill="none" stroke="gray"></path></g><path id="node_outline176" fill="none" stroke="none" d="M2582.5,8259.5h364a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-364a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text176" fill="black"><text id="kity_text_1141" text-rendering="inherit" font-size="12" dy=".8em" y="8264.5" x="2587.5">更新服务器的各类统计信息, 比如时间、内存占用、数据库占用情况</text></g></g><g id="minder_node181"><g id="node_expander176" display="none" style="cursor: pointer;"><path id="kity_path_2622" fill="white" stroke="gray" d="M2577.5,8322.5A6,6,0,1,1,2565.5,8322.5A6,6,0,1,1,2577.5,8322.5"></path><path id="kity_path_2623" fill="none" stroke="gray"></path></g><path id="node_outline177" fill="none" stroke="none" d="M2582.5,8311.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text177" fill="black"><text id="kity_text_1143" text-rendering="inherit" font-size="12" dy=".8em" y="8316.5" x="2587.5">清理数据库中的过期键值对</text></g></g><g id="minder_node182"><g id="node_expander177" display="none" style="cursor: pointer;"><path id="kity_path_2625" fill="white" stroke="gray" d="M2577.5,8374.5A6,6,0,1,1,2565.5,8374.5A6,6,0,1,1,2577.5,8374.5"></path><path id="kity_path_2626" fill="none" stroke="gray"></path></g><path id="node_outline178" fill="none" stroke="none" d="M2582.5,8363.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text178" fill="black"><text id="kity_text_1145" text-rendering="inherit" font-size="12" dy=".8em" y="8368.5" x="2587.5">关闭和清理连接失效的客户端</text></g></g><g id="minder_node183"><g id="node_expander178" display="none" style="cursor: pointer;"><path id="kity_path_2628" fill="white" stroke="gray" d="M2577.5,8426.5A6,6,0,1,1,2565.5,8426.5A6,6,0,1,1,2577.5,8426.5"></path><path id="kity_path_2629" fill="none" stroke="gray"></path></g><path id="node_outline179" fill="none" stroke="none" d="M2582.5,8415.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text179" fill="black"><text id="kity_text_1147" text-rendering="inherit" font-size="12" dy=".8em" y="8420.5" x="2587.5">尝试进行AOF或RDB持久化操作</text></g></g><g id="minder_node184"><g id="node_expander179" display="none" style="cursor: pointer;"><path id="kity_path_2631" fill="white" stroke="gray" d="M2577.5,8478.5A6,6,0,1,1,2565.5,8478.5A6,6,0,1,1,2577.5,8478.5"></path><path id="kity_path_2632" fill="none" stroke="gray"></path></g><path id="node_outline180" fill="none" stroke="none" d="M2582.5,8467.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text180" fill="black"><text id="kity_text_1149" text-rendering="inherit" font-size="12" dy=".8em" y="8472.5" x="2587.5">对从服务器进行定期同步</text></g></g><g id="minder_node185"><g id="node_expander180" display="none" style="cursor: pointer;"><path id="kity_path_2634" fill="white" stroke="gray" d="M2577.5,8530.5A6,6,0,1,1,2565.5,8530.5A6,6,0,1,1,2577.5,8530.5"></path><path id="kity_path_2635" fill="none" stroke="gray"></path></g><path id="node_outline181" fill="none" stroke="none" d="M2582.5,8519.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text181" fill="black"><text id="kity_text_1151" text-rendering="inherit" font-size="12" dy=".8em" y="8524.5" x="2587.5">对集群进行定期同步和连接测试</text></g></g><g id="minder_node186"><g id="node_expander181" display="none" style="cursor: pointer;"><path id="kity_path_2637" fill="white" stroke="gray" d="M2577.5,8591.5A6,6,0,1,1,2565.5,8591.5A6,6,0,1,1,2577.5,8591.5"></path><path id="kity_path_2638" fill="none" stroke="gray"></path></g><path id="node_outline182" fill="none" stroke="none" d="M2582.5,8571.5h378a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-378a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text182" fill="black"><text id="kity_text_1153" text-rendering="inherit" font-size="12" dy=".8em" y="8576.5" x="2587.5">redis2.6版本, serverCron每秒运行10次, 平均每隔100毫秒运行一次。</text><text id="kity_text_1154" text-rendering="inherit" font-size="12" dy=".8em" y="8594.5" x="2587.5">redis2.8开始, 用户可以通过修改hz选项来调整每秒执行的次数。</text></g></g><g id="minder_node187"><g id="node_expander185" display="none" style="cursor: pointer;"><path id="kity_path_2649" fill="white" stroke="gray" d="M2238.5,8651.5A6,6,0,1,1,2226.5,8651.5A6,6,0,1,1,2238.5,8651.5"></path><path id="kity_path_2650" fill="none" stroke="gray"></path></g><path id="node_outline186" fill="none" stroke="none" d="M2243.5,8640.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text186" fill="black"><text id="kity_text_1162" text-rendering="inherit" font-size="12" dy=".8em" y="8645.5" x="2248.5">客户端</text></g></g><g id="minder_node188"><g id="node_expander231" style="cursor: pointer;"><path id="kity_path_2787" fill="white" stroke="gray" d="M2238.5,9906.5A6,6,0,1,1,2226.5,9906.5A6,6,0,1,1,2238.5,9906.5"></path><path id="kity_path_2788" fill="none" stroke="gray" d="M2228,9906.5L2237,9906.5"></path></g><path id="node_outline232" fill="none" stroke="none" d="M2243.5,9895.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text232" fill="black"><text id="kity_text_1273" text-rendering="inherit" font-size="12" dy=".8em" y="9900.5" x="2248.5">服务器</text></g></g><g id="minder_node189"><g id="node_expander205" style="cursor: pointer;"><path id="kity_path_2709" fill="white" stroke="gray" d="M2334.5,9103.5A6,6,0,1,1,2322.5,9103.5A6,6,0,1,1,2334.5,9103.5"></path><path id="kity_path_2710" fill="none" stroke="gray" d="M2324,9103.5L2333,9103.5"></path></g><path id="node_outline206" fill="none" stroke="none" d="M2339.5,9092.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text206" fill="black"><text id="kity_text_1204" text-rendering="inherit" font-size="12" dy=".8em" y="9097.5" x="2344.5">命令请求的执行过程</text></g></g><g id="minder_node190"><g id="node_expander188" style="cursor: pointer;"><path id="kity_path_2658" fill="white" stroke="gray" d="M2502.5,8739.5A6,6,0,1,1,2490.5,8739.5A6,6,0,1,1,2502.5,8739.5"></path><path id="kity_path_2659" fill="none" stroke="gray" d="M2492,8739.5L2501,8739.5"></path></g><path id="node_outline189" fill="none" stroke="none" d="M2507.5,8728.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text189" fill="black"><text id="kity_text_1169" text-rendering="inherit" font-size="12" dy=".8em" y="8733.5" x="2512.5">读取命令</text></g></g><g id="minder_node191"><g id="node_expander186" display="none" style="cursor: pointer;"><path id="kity_path_2652" fill="white" stroke="gray" d="M2610.5,8704.5A6,6,0,1,1,2598.5,8704.5A6,6,0,1,1,2610.5,8704.5"></path><path id="kity_path_2653" fill="none" stroke="gray"></path></g><path id="node_outline187" fill="none" stroke="none" d="M2615.5,8693.5h333a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-333a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text187" fill="black"><text id="kity_text_1164" text-rendering="inherit" font-size="12" dy=".8em" y="8698.5" x="2620.5">会将协议存在redisClient结构体里的querybuf里(SDS结构)。</text></g></g><g id="minder_node192"><g id="node_expander187" display="none" style="cursor: pointer;"><path id="kity_path_2655" fill="white" stroke="gray" d="M2610.5,8765.5A6,6,0,1,1,2598.5,8765.5A6,6,0,1,1,2610.5,8765.5"></path><path id="kity_path_2656" fill="none" stroke="gray"></path></g><path id="node_outline188" fill="none" stroke="none" d="M2615.5,8745.5h358a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-358a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text188" fill="black"><text id="kity_text_1166" text-rendering="inherit" font-size="12" dy=".8em" y="8750.5" x="2620.5">将输入缓冲区中内容解析, 分析出argv和argc。</text><text id="kity_text_1167" text-rendering="inherit" font-size="12" dy=".8em" y="8768.5" x="2620.5">根据argv[0]到命令表字典中寻找寻找对应的redisCommand结构</text></g></g><g id="minder_node193"><g id="node_expander196" style="cursor: pointer;"><path id="kity_path_2682" fill="white" stroke="gray" d="M2502.5,8991.5A6,6,0,1,1,2490.5,8991.5A6,6,0,1,1,2502.5,8991.5"></path><path id="kity_path_2683" fill="none" stroke="gray" d="M2492,8991.5L2501,8991.5"></path></g><path id="node_outline197" fill="none" stroke="none" d="M2507.5,8980.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text197" fill="black"><text id="kity_text_1186" text-rendering="inherit" font-size="12" dy=".8em" y="8985.5" x="2512.5">准备工作</text></g></g><g id="minder_node194"><g id="node_expander189" display="none" style="cursor: pointer;"><path id="kity_path_2661" fill="white" stroke="gray" d="M2610.5,8835.5A6,6,0,1,1,2598.5,8835.5A6,6,0,1,1,2610.5,8835.5"></path><path id="kity_path_2662" fill="none" stroke="gray"></path></g><path id="node_outline190" fill="none" stroke="none" d="M2615.5,8815.5h357a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-357a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text190" fill="black"><text id="kity_text_1171" text-rendering="inherit" font-size="12" dy=".8em" y="8820.5" x="2620.5">获取到的redisCommand结构记为cmd指针。</text><text id="kity_text_1172" text-rendering="inherit" font-size="12" dy=".8em" y="8838.5" x="2620.5">如果cmd指针指向null, 说明命令不存在, 并向客户端返回一个错误</text></g></g><g id="minder_node195"><g id="node_expander190" display="none" style="cursor: pointer;"><path id="kity_path_2664" fill="white" stroke="gray" d="M2610.5,8896.5A6,6,0,1,1,2598.5,8896.5A6,6,0,1,1,2610.5,8896.5"></path><path id="kity_path_2665" fill="none" stroke="gray"></path></g><path id="node_outline191" fill="none" stroke="none" d="M2615.5,8885.5h353a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-353a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text191" fill="black"><text id="kity_text_1174" text-rendering="inherit" font-size="12" dy=".8em" y="8890.5" x="2620.5">检查redisCommand结构的arity属性与输入的参数个数是否匹配</text></g></g><g id="minder_node196"><g id="node_expander191" display="none" style="cursor: pointer;"><path id="kity_path_2667" fill="white" stroke="gray" d="M2610.5,8948.5A6,6,0,1,1,2598.5,8948.5A6,6,0,1,1,2610.5,8948.5"></path><path id="kity_path_2668" fill="none" stroke="gray"></path></g><path id="node_outline192" fill="none" stroke="none" d="M2615.5,8937.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text192" fill="black"><text id="kity_text_1176" text-rendering="inherit" font-size="12" dy=".8em" y="8942.5" x="2620.5">检查客户端是否已经通过了身份验证</text></g></g><g id="minder_node197"><g id="node_expander192" display="none" style="cursor: pointer;"><path id="kity_path_2670" fill="white" stroke="gray" d="M2610.5,9000.5A6,6,0,1,1,2598.5,9000.5A6,6,0,1,1,2610.5,9000.5"></path><path id="kity_path_2671" fill="none" stroke="gray"></path></g><path id="node_outline193" fill="none" stroke="none" d="M2615.5,8989.5h630a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-630a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text193" fill="black"><text id="kity_text_1178" text-rendering="inherit" font-size="12" dy=".8em" y="8994.5" x="2620.5">如果服务器打开了maxmemory功能, 那么再执行命令之前, 先检查服务器的内存占用情况, 并在有需要时进行内存回收</text></g></g><g id="minder_node198"><g id="node_expander193" display="none" style="cursor: pointer;"><path id="kity_path_2673" fill="white" stroke="gray" d="M2610.5,9052.5A6,6,0,1,1,2598.5,9052.5A6,6,0,1,1,2610.5,9052.5"></path><path id="kity_path_2674" fill="none" stroke="gray"></path></g><path id="node_outline194" fill="none" stroke="none" d="M2615.5,9041.5h738a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-738a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text194" fill="black"><text id="kity_text_1180" text-rendering="inherit" font-size="12" dy=".8em" y="9046.5" x="2620.5">如果服务器上一次执行BGSAVE命令时出错, 并且服务器打开了stop-writes-on-bgsave-error功能, 那么再服务器将要执行写命令时, 会报错</text></g></g><g id="minder_node199"><g id="node_expander194" display="none" style="cursor: pointer;"><path id="kity_path_2676" fill="white" stroke="gray" d="M2610.5,9104.5A6,6,0,1,1,2598.5,9104.5A6,6,0,1,1,2610.5,9104.5"></path><path id="kity_path_2677" fill="none" stroke="gray"></path></g><path id="node_outline195" fill="none" stroke="none" d="M2615.5,9093.5h816a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-816a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text195" fill="black"><text id="kity_text_1182" text-rendering="inherit" font-size="12" dy=".8em" y="9098.5" x="2620.5">如果客户端当前正在用SUBSCRIBE命令, 或正在用PSUBSCRIBE命令, 那么服务器只会执行客户端发来的订阅模式相关的命令, 其他命令都会被服务器拒绝。</text></g></g><g id="minder_node200"><g id="node_expander195" display="none" style="cursor: pointer;"><path id="kity_path_2679" fill="white" stroke="gray" d="M2610.5,9156.5A6,6,0,1,1,2598.5,9156.5A6,6,0,1,1,2610.5,9156.5"></path><path id="kity_path_2680" fill="none" stroke="gray"></path></g><path id="node_outline196" fill="none" stroke="none" d="M2615.5,9145.5h484a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-484a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text196" fill="black"><text id="kity_text_1184" text-rendering="inherit" font-size="12" dy=".8em" y="9150.5" x="2620.5">如果服务器打开了监视器功能, 那么服务器会将要执行的命令和参数等信息发送给监视器。</text></g></g><g id="minder_node201"><g id="node_expander198" style="cursor: pointer;"><path id="kity_path_2688" fill="white" stroke="gray" d="M2502.5,9208.5A6,6,0,1,1,2490.5,9208.5A6,6,0,1,1,2502.5,9208.5"></path><path id="kity_path_2689" fill="none" stroke="gray" d="M2492,9208.5L2501,9208.5"></path></g><path id="node_outline199" fill="none" stroke="none" d="M2507.5,9197.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text199" fill="black"><text id="kity_text_1190" text-rendering="inherit" font-size="12" dy=".8em" y="9202.5" x="2512.5">执行</text></g></g><g id="minder_node202"><g id="node_expander197" display="none" style="cursor: pointer;"><path id="kity_path_2685" fill="white" stroke="gray" d="M2586.5,9208.5A6,6,0,1,1,2574.5,9208.5A6,6,0,1,1,2586.5,9208.5"></path><path id="kity_path_2686" fill="none" stroke="gray"></path></g><path id="node_outline198" fill="none" stroke="none" d="M2591.5,9197.5h605a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-605a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text198" fill="black"><text id="kity_text_1188" text-rendering="inherit" font-size="12" dy=".8em" y="9202.5" x="2596.5">调用client-&gt;cmd-&gt;proc(client)执行命令。执行后的结果会存储在redisClient结构体里的buf字段里(SDS结构)。</text></g></g><g id="minder_node203"><g id="node_expander203" style="cursor: pointer;"><path id="kity_path_2703" fill="white" stroke="gray" d="M2502.5,9338.5A6,6,0,1,1,2490.5,9338.5A6,6,0,1,1,2502.5,9338.5"></path><path id="kity_path_2704" fill="none" stroke="gray" d="M2492,9338.5L2501,9338.5"></path></g><path id="node_outline204" fill="none" stroke="none" d="M2507.5,9327.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text204" fill="black"><text id="kity_text_1200" text-rendering="inherit" font-size="12" dy=".8em" y="9332.5" x="2512.5">执行后续</text></g></g><g id="minder_node204"><g id="node_expander199" display="none" style="cursor: pointer;"><path id="kity_path_2691" fill="white" stroke="gray" d="M2610.5,9260.5A6,6,0,1,1,2598.5,9260.5A6,6,0,1,1,2610.5,9260.5"></path><path id="kity_path_2692" fill="none" stroke="gray"></path></g><path id="node_outline200" fill="none" stroke="none" d="M2615.5,9249.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text200" fill="black"><text id="kity_text_1192" text-rendering="inherit" font-size="12" dy=".8em" y="9254.5" x="2620.5">判断是否慢日志</text></g></g><g id="minder_node205"><g id="node_expander200" display="none" style="cursor: pointer;"><path id="kity_path_2694" fill="white" stroke="gray" d="M2610.5,9312.5A6,6,0,1,1,2598.5,9312.5A6,6,0,1,1,2610.5,9312.5"></path><path id="kity_path_2695" fill="none" stroke="gray"></path></g><path id="node_outline201" fill="none" stroke="none" d="M2615.5,9301.5h634a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-634a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text201" fill="black"><text id="kity_text_1194" text-rendering="inherit" font-size="12" dy=".8em" y="9306.5" x="2620.5">更新被执行命令的redisCommand结构的milliseconds属性。并将命令的redisCommand结构的calls技术器的值增一</text></g></g><g id="minder_node206"><g id="node_expander201" display="none" style="cursor: pointer;"><path id="kity_path_2697" fill="white" stroke="gray" d="M2610.5,9364.5A6,6,0,1,1,2598.5,9364.5A6,6,0,1,1,2610.5,9364.5"></path><path id="kity_path_2698" fill="none" stroke="gray"></path></g><path id="node_outline202" fill="none" stroke="none" d="M2615.5,9353.5h95a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-95a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text202" fill="black"><text id="kity_text_1196" text-rendering="inherit" font-size="12" dy=".8em" y="9358.5" x="2620.5">写入AOF缓冲区</text></g></g><g id="minder_node207"><g id="node_expander202" display="none" style="cursor: pointer;"><path id="kity_path_2700" fill="white" stroke="gray" d="M2610.5,9416.5A6,6,0,1,1,2598.5,9416.5A6,6,0,1,1,2610.5,9416.5"></path><path id="kity_path_2701" fill="none" stroke="gray"></path></g><path id="node_outline203" fill="none" stroke="none" d="M2615.5,9405.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text203" fill="black"><text id="kity_text_1198" text-rendering="inherit" font-size="12" dy=".8em" y="9410.5" x="2620.5">将执行的命令发送给从服务器</text></g></g><g id="minder_node208"><g id="node_expander204" display="none" style="cursor: pointer;"><path id="kity_path_2706" fill="white" stroke="gray" d="M2502.5,9468.5A6,6,0,1,1,2490.5,9468.5A6,6,0,1,1,2502.5,9468.5"></path><path id="kity_path_2707" fill="none" stroke="gray"></path></g><path id="node_outline205" fill="none" stroke="none" d="M2507.5,9457.5h460a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-460a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text205" fill="black"><text id="kity_text_1202" text-rendering="inherit" font-size="12" dy=".8em" y="9462.5" x="2512.5">将命令回复发送给客户端。清空客户端装填的输出缓冲区, 为下一个命令请求做好准备</text></g></g><g id="minder_node209"><g id="node_expander224" style="cursor: pointer;"><path id="kity_path_2766" fill="white" stroke="gray" d="M2334.5,10094.5A6,6,0,1,1,2322.5,10094.5A6,6,0,1,1,2334.5,10094.5"></path><path id="kity_path_2767" fill="none" stroke="gray" d="M2324,10094.5L2333,10094.5"></path></g><path id="node_outline225" fill="none" stroke="none" d="M2339.5,10083.5h97a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-97a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text225" fill="black"><text id="kity_text_1259" text-rendering="inherit" font-size="12" dy=".8em" y="10088.5" x="2344.5">serverCron函数</text></g></g><g id="minder_node210"><g id="node_expander209" style="cursor: pointer;"><path id="kity_path_2721" fill="white" stroke="gray" d="M2481.5,9635.5A6,6,0,1,1,2469.5,9635.5A6,6,0,1,1,2481.5,9635.5"></path><path id="kity_path_2722" fill="none" stroke="gray" d="M2471,9635.5L2480,9635.5"></path></g><path id="node_outline210" fill="none" stroke="none" d="M2486.5,9624.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text210" fill="black"><text id="kity_text_1219" text-rendering="inherit" font-size="12" dy=".8em" y="9629.5" x="2491.5">更新服务器时间缓存</text></g></g><g id="minder_node211"><g id="node_expander206" display="none" style="cursor: pointer;"><path id="kity_path_2712" fill="white" stroke="gray" d="M2649.5,9583.5A6,6,0,1,1,2637.5,9583.5A6,6,0,1,1,2649.5,9583.5"></path><path id="kity_path_2713" fill="none" stroke="gray"></path></g><path id="node_outline207" fill="none" stroke="none" d="M2654.5,9509.5h258a5,5,0,0,1,5,5v138a5,5,0,0,1,-5,5h-258a5,5,0,0,1,-5,-5v-138a5,5,0,0,1,5,-5z"></path><g id="node_text207" fill="black"><text id="kity_text_1206" text-rendering="inherit" font-size="12" dy=".8em" y="9514.5" x="2659.5">struct redisServer{</text><text id="kity_text_1207" text-rendering="inherit" font-size="12" dy=".8em" y="9532.5" x="2659.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1208" text-rendering="inherit" font-size="12" dy=".8em" y="9550.5" x="2659.5">.&#xa0; &#xa0; // 保存了秒级精度的系统当前UNIX时间戳</text><text id="kity_text_1209" text-rendering="inherit" font-size="12" dy=".8em" y="9568.5" x="2659.5">.&#xa0; &#xa0; time_t unixtime;</text><text id="kity_text_1210" text-rendering="inherit" font-size="12" dy=".8em" y="9586.5" x="2659.5">.&#xa0; &#xa0; // 保存了毫秒级精度的系统当前UNIX时间戳</text><text id="kity_text_1211" text-rendering="inherit" font-size="12" dy=".8em" y="9604.5" x="2659.5">.&#xa0; &#xa0; long long mstime;</text><text id="kity_text_1212" text-rendering="inherit" font-size="12" dy=".8em" y="9622.5" x="2659.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1213" text-rendering="inherit" font-size="12" dy=".8em" y="9640.5" x="2659.5">};</text></g></g><g id="minder_node212"><g id="node_expander207" display="none" style="cursor: pointer;"><path id="kity_path_2715" fill="white" stroke="gray" d="M2649.5,9698.5A6,6,0,1,1,2637.5,9698.5A6,6,0,1,1,2649.5,9698.5"></path><path id="kity_path_2716" fill="none" stroke="gray"></path></g><path id="node_outline208" fill="none" stroke="none" d="M2654.5,9687.5h724a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-724a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text208" fill="black"><text id="kity_text_1215" text-rendering="inherit" font-size="12" dy=".8em" y="9692.5" x="2659.5">在 打印日志、更新服务器的LRU时钟、决定是否持久化、计算服务器上线时间等经典却独要求不要的时候, 会使用服务器时间缓存里的值</text></g></g><g id="minder_node213"><g id="node_expander208" display="none" style="cursor: pointer;"><path id="kity_path_2718" fill="white" stroke="gray" d="M2649.5,9750.5A6,6,0,1,1,2637.5,9750.5A6,6,0,1,1,2649.5,9750.5"></path><path id="kity_path_2719" fill="none" stroke="gray"></path></g><path id="node_outline209" fill="none" stroke="none" d="M2654.5,9739.5h757a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-757a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text209" fill="black"><text id="kity_text_1217" text-rendering="inherit" font-size="12" dy=".8em" y="9744.5" x="2659.5">对于为键设置国企时间、添加慢查询日志这种对时间精确度要求较高的时候, redis还是会再次执行系统调用, 从而获得最准确的系统当前时间。</text></g></g><g id="minder_node214"><g id="node_expander213" style="cursor: pointer;"><path id="kity_path_2733" fill="white" stroke="gray" d="M2481.5,9900.5A6,6,0,1,1,2469.5,9900.5A6,6,0,1,1,2481.5,9900.5"></path><path id="kity_path_2734" fill="none" stroke="gray" d="M2471,9900.5L2480,9900.5"></path></g><path id="node_outline214" fill="none" stroke="none" d="M2486.5,9889.5h79a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-79a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text214" fill="black"><text id="kity_text_1237" text-rendering="inherit" font-size="12" dy=".8em" y="9894.5" x="2491.5">更新LRU时钟</text></g></g><g id="minder_node215"><g id="node_expander210" display="none" style="cursor: pointer;"><path id="kity_path_2724" fill="white" stroke="gray" d="M2610.5,9856.5A6,6,0,1,1,2598.5,9856.5A6,6,0,1,1,2610.5,9856.5"></path><path id="kity_path_2725" fill="none" stroke="gray"></path></g><path id="node_outline211" fill="none" stroke="none" d="M2615.5,9791.5h462a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-462a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text211" fill="black"><text id="kity_text_1221" text-rendering="inherit" font-size="12" dy=".8em" y="9796.5" x="2620.5">struct redisServer{</text><text id="kity_text_1222" text-rendering="inherit" font-size="12" dy=".8em" y="9814.5" x="2620.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1223" text-rendering="inherit" font-size="12" dy=".8em" y="9832.5" x="2620.5">.&#xa0; &#xa0; // 默认每10秒更新一次的时钟缓存</text><text id="kity_text_1224" text-rendering="inherit" font-size="12" dy=".8em" y="9850.5" x="2620.5">.&#xa0; &#xa0; // 用于计算键的空转(idle)时长。服务器的lruclock - 对象的lru字段时间 = 空转时长</text><text id="kity_text_1225" text-rendering="inherit" font-size="12" dy=".8em" y="9868.5" x="2620.5">.&#xa0; &#xa0; unsigned lruclock:22;</text><text id="kity_text_1226" text-rendering="inherit" font-size="12" dy=".8em" y="9886.5" x="2620.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1227" text-rendering="inherit" font-size="12" dy=".8em" y="9904.5" x="2620.5">};</text></g></g><g id="minder_node216"><g id="node_expander212" style="cursor: pointer;"><path id="kity_path_2730" fill="white" stroke="gray" d="M2610.5,9998.5A6,6,0,1,1,2598.5,9998.5A6,6,0,1,1,2610.5,9998.5"></path><path id="kity_path_2731" fill="none" stroke="gray" d="M2600,9998.5L2609,9998.5"></path></g><path id="node_outline213" fill="none" stroke="none" d="M2615.5,9987.5h457a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-457a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text213" fill="black"><text id="kity_text_1235" text-rendering="inherit" font-size="12" dy=".8em" y="9992.5" x="2620.5">每个Redis对象都会有一个lru属性, 这个lru属性保存了对象最后一次被命令访问的时间</text></g></g><g id="minder_node217"><g id="node_expander211" display="none" style="cursor: pointer;"><path id="kity_path_2727" fill="white" stroke="gray" d="M3117.5,9998.5A6,6,0,1,1,3105.5,9998.5A6,6,0,1,1,3117.5,9998.5"></path><path id="kity_path_2728" fill="none" stroke="gray"></path></g><path id="node_outline212" fill="none" stroke="none" d="M3122.5,9951.5h165a5,5,0,0,1,5,5v84a5,5,0,0,1,-5,5h-165a5,5,0,0,1,-5,-5v-84a5,5,0,0,1,5,-5z"></path><g id="node_text212" fill="black"><text id="kity_text_1229" text-rendering="inherit" font-size="12" dy=".8em" y="9956.5" x="3127.5">typedef struct redisObject{</text><text id="kity_text_1230" text-rendering="inherit" font-size="12" dy=".8em" y="9974.5" x="3127.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1231" text-rendering="inherit" font-size="12" dy=".8em" y="9992.5" x="3127.5">unsigned lru:22;</text><text id="kity_text_1232" text-rendering="inherit" font-size="12" dy=".8em" y="10010.5" x="3127.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1233" text-rendering="inherit" font-size="12" dy=".8em" y="10028.5" x="3127.5">} robj;</text></g></g><g id="minder_node218"><g id="node_expander214" display="none" style="cursor: pointer;"><path id="kity_path_2736" fill="white" stroke="gray" d="M2481.5,10086.5A6,6,0,1,1,2469.5,10086.5A6,6,0,1,1,2481.5,10086.5"></path><path id="kity_path_2737" fill="none" stroke="gray"></path></g><path id="node_outline215" fill="none" stroke="none" d="M2486.5,10075.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text215" fill="black"><text id="kity_text_1239" text-rendering="inherit" font-size="12" dy=".8em" y="10080.5" x="2491.5">更新服务器每秒执行命令次数</text></g></g><g id="minder_node219"><g id="node_expander215" display="none" style="cursor: pointer;"><path id="kity_path_2739" fill="white" stroke="gray" d="M2481.5,10138.5A6,6,0,1,1,2469.5,10138.5A6,6,0,1,1,2481.5,10138.5"></path><path id="kity_path_2740" fill="none" stroke="gray"></path></g><path id="node_outline216" fill="none" stroke="none" d="M2486.5,10127.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text216" fill="black"><text id="kity_text_1241" text-rendering="inherit" font-size="12" dy=".8em" y="10132.5" x="2491.5">更新服务器内存峰值记录</text></g></g><g id="minder_node220"><g id="node_expander216" display="none" style="cursor: pointer;"><path id="kity_path_2742" fill="white" stroke="gray" d="M2481.5,10190.5A6,6,0,1,1,2469.5,10190.5A6,6,0,1,1,2481.5,10190.5"></path><path id="kity_path_2743" fill="none" stroke="gray"></path></g><path id="node_outline217" fill="none" stroke="none" d="M2486.5,10179.5h107a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-107a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text217" fill="black"><text id="kity_text_1243" text-rendering="inherit" font-size="12" dy=".8em" y="10184.5" x="2491.5">处理SIGTERM信号</text></g></g><g id="minder_node221"><g id="node_expander217" display="none" style="cursor: pointer;"><path id="kity_path_2745" fill="white" stroke="gray" d="M2481.5,10242.5A6,6,0,1,1,2469.5,10242.5A6,6,0,1,1,2481.5,10242.5"></path><path id="kity_path_2746" fill="none" stroke="gray"></path></g><path id="node_outline218" fill="none" stroke="none" d="M2486.5,10231.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text218" fill="black"><text id="kity_text_1245" text-rendering="inherit" font-size="12" dy=".8em" y="10236.5" x="2491.5">管理客户端资源</text></g></g><g id="minder_node222"><g id="node_expander218" display="none" style="cursor: pointer;"><path id="kity_path_2748" fill="white" stroke="gray" d="M2481.5,10294.5A6,6,0,1,1,2469.5,10294.5A6,6,0,1,1,2481.5,10294.5"></path><path id="kity_path_2749" fill="none" stroke="gray"></path></g><path id="node_outline219" fill="none" stroke="none" d="M2486.5,10283.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text219" fill="black"><text id="kity_text_1247" text-rendering="inherit" font-size="12" dy=".8em" y="10288.5" x="2491.5">管理数据库资源</text></g></g><g id="minder_node223"><g id="node_expander219" display="none" style="cursor: pointer;"><path id="kity_path_2751" fill="white" stroke="gray" d="M2481.5,10346.5A6,6,0,1,1,2469.5,10346.5A6,6,0,1,1,2481.5,10346.5"></path><path id="kity_path_2752" fill="none" stroke="gray"></path></g><path id="node_outline220" fill="none" stroke="none" d="M2486.5,10335.5h171a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-171a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text220" fill="black"><text id="kity_text_1249" text-rendering="inherit" font-size="12" dy=".8em" y="10340.5" x="2491.5">执行被延迟的BGREWRITEAOF</text></g></g><g id="minder_node224"><g id="node_expander220" display="none" style="cursor: pointer;"><path id="kity_path_2754" fill="white" stroke="gray" d="M2481.5,10398.5A6,6,0,1,1,2469.5,10398.5A6,6,0,1,1,2481.5,10398.5"></path><path id="kity_path_2755" fill="none" stroke="gray"></path></g><path id="node_outline221" fill="none" stroke="none" d="M2486.5,10387.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text221" fill="black"><text id="kity_text_1251" text-rendering="inherit" font-size="12" dy=".8em" y="10392.5" x="2491.5">检查持久化操作的执行状态</text></g></g><g id="minder_node225"><g id="node_expander221" display="none" style="cursor: pointer;"><path id="kity_path_2757" fill="white" stroke="gray" d="M2481.5,10450.5A6,6,0,1,1,2469.5,10450.5A6,6,0,1,1,2481.5,10450.5"></path><path id="kity_path_2758" fill="none" stroke="gray"></path></g><path id="node_outline222" fill="none" stroke="none" d="M2486.5,10439.5h204a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-204a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text222" fill="black"><text id="kity_text_1253" text-rendering="inherit" font-size="12" dy=".8em" y="10444.5" x="2491.5">将AOF缓冲区中的内容写入AOF文件</text></g></g><g id="minder_node226"><g id="node_expander222" display="none" style="cursor: pointer;"><path id="kity_path_2760" fill="white" stroke="gray" d="M2481.5,10502.5A6,6,0,1,1,2469.5,10502.5A6,6,0,1,1,2481.5,10502.5"></path><path id="kity_path_2761" fill="none" stroke="gray"></path></g><path id="node_outline223" fill="none" stroke="none" d="M2486.5,10491.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text223" fill="black"><text id="kity_text_1255" text-rendering="inherit" font-size="12" dy=".8em" y="10496.5" x="2491.5">关闭异步客户端</text></g></g><g id="minder_node227"><g id="node_expander223" display="none" style="cursor: pointer;"><path id="kity_path_2763" fill="white" stroke="gray" d="M2481.5,10554.5A6,6,0,1,1,2469.5,10554.5A6,6,0,1,1,2481.5,10554.5"></path><path id="kity_path_2764" fill="none" stroke="gray"></path></g><path id="node_outline224" fill="none" stroke="none" d="M2486.5,10543.5h152a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-152a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text224" fill="black"><text id="kity_text_1257" text-rendering="inherit" font-size="12" dy=".8em" y="10548.5" x="2491.5">增加cronloops计数器的值</text></g></g><g id="minder_node228"><g id="node_expander230" style="cursor: pointer;"><path id="kity_path_2784" fill="white" stroke="gray" d="M2334.5,10709.5A6,6,0,1,1,2322.5,10709.5A6,6,0,1,1,2334.5,10709.5"></path><path id="kity_path_2785" fill="none" stroke="gray" d="M2324,10709.5L2333,10709.5"></path></g><path id="node_outline231" fill="none" stroke="none" d="M2339.5,10698.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text231" fill="black"><text id="kity_text_1271" text-rendering="inherit" font-size="12" dy=".8em" y="10703.5" x="2344.5">初始化服务器</text></g></g><g id="minder_node229"><g id="node_expander225" display="none" style="cursor: pointer;"><path id="kity_path_2769" fill="white" stroke="gray" d="M2466.5,10605.5A6,6,0,1,1,2454.5,10605.5A6,6,0,1,1,2466.5,10605.5"></path><path id="kity_path_2770" fill="none" stroke="gray"></path></g><path id="node_outline226" fill="none" stroke="none" d="M2471.5,10594.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text226" fill="black"><text id="kity_text_1261" text-rendering="inherit" font-size="12" dy=".8em" y="10599.5" x="2476.5">初始化服务器状态结构</text></g></g><g id="minder_node230"><g id="node_expander226" display="none" style="cursor: pointer;"><path id="kity_path_2772" fill="white" stroke="gray" d="M2466.5,10657.5A6,6,0,1,1,2454.5,10657.5A6,6,0,1,1,2466.5,10657.5"></path><path id="kity_path_2773" fill="none" stroke="gray"></path></g><path id="node_outline227" fill="none" stroke="none" d="M2471.5,10646.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text227" fill="black"><text id="kity_text_1263" text-rendering="inherit" font-size="12" dy=".8em" y="10651.5" x="2476.5">载入配置选项</text></g></g><g id="minder_node231"><g id="node_expander227" display="none" style="cursor: pointer;"><path id="kity_path_2775" fill="white" stroke="gray" d="M2466.5,10709.5A6,6,0,1,1,2454.5,10709.5A6,6,0,1,1,2466.5,10709.5"></path><path id="kity_path_2776" fill="none" stroke="gray"></path></g><path id="node_outline228" fill="none" stroke="none" d="M2471.5,10698.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text228" fill="black"><text id="kity_text_1265" text-rendering="inherit" font-size="12" dy=".8em" y="10703.5" x="2476.5">初始化服务器数据结构</text></g></g><g id="minder_node232"><g id="node_expander228" display="none" style="cursor: pointer;"><path id="kity_path_2778" fill="white" stroke="gray" d="M2466.5,10761.5A6,6,0,1,1,2454.5,10761.5A6,6,0,1,1,2466.5,10761.5"></path><path id="kity_path_2779" fill="none" stroke="gray"></path></g><path id="node_outline229" fill="none" stroke="none" d="M2471.5,10750.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text229" fill="black"><text id="kity_text_1267" text-rendering="inherit" font-size="12" dy=".8em" y="10755.5" x="2476.5">还原数据库状态</text></g></g><g id="minder_node233"><g id="node_expander229" display="none" style="cursor: pointer;"><path id="kity_path_2781" fill="white" stroke="gray" d="M2466.5,10813.5A6,6,0,1,1,2454.5,10813.5A6,6,0,1,1,2466.5,10813.5"></path><path id="kity_path_2782" fill="none" stroke="gray"></path></g><path id="node_outline230" fill="none" stroke="none" d="M2471.5,10802.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text230" fill="black"><text id="kity_text_1269" text-rendering="inherit" font-size="12" dy=".8em" y="10807.5" x="2476.5">执行事件循环</text></g></g><g id="minder_node234"><g id="node_expander347" style="cursor: pointer;"><path id="kity_path_3135" fill="white" stroke="gray" d="M1777.5,3629.5A6,6,0,1,1,1765.5,3629.5A6,6,0,1,1,1777.5,3629.5"></path><path id="kity_path_3136" fill="none" stroke="gray" d="M1767,3629.5L1776,3629.5"></path></g><path id="node_outline348" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1657.5,3616.5h104a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-104a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text348" fill="black"><text id="kity_text_1724" text-rendering="inherit" font-family="宋体,SimSun" font-size="14" dy=".8em" y="3622.5" x="1674.5">多机数据库</text></g></g><g id="minder_node235"><g id="node_expander279" style="cursor: pointer;"><path id="kity_path_2931" fill="white" stroke="gray" d="M1626.5,825.5A6,6,0,1,1,1614.5,825.5A6,6,0,1,1,1626.5,825.5"></path><path id="kity_path_2932" fill="none" stroke="gray" d="M1616,825.5L1625,825.5"></path></g><path id="node_outline280" fill="none" stroke="none" d="M1551.5,814.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text280" fill="black"><text id="kity_text_1393" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="819.5" x="1556.5">主从复制</text></g></g><g id="minder_node236"><g id="node_expander233" display="none" style="cursor: pointer;"><path id="kity_path_2793" fill="white" stroke="gray" d="M1518.5,31.5A6,6,0,1,1,1506.5,31.5A6,6,0,1,1,1518.5,31.5"></path><path id="kity_path_2794" fill="none" stroke="gray"></path></g><path id="node_outline234" fill="none" stroke="none" d="M1415.5,20.5h86a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-86a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text234" fill="black"><text id="kity_text_1277" text-rendering="inherit" font-size="12" dy=".8em" y="25.5" x="1420.5">SLAVEOF命令</text></g></g><g id="minder_node237"><g id="node_expander245" style="cursor: pointer;"><path id="kity_path_2829" fill="white" stroke="gray" d="M1518.5,248.5A6,6,0,1,1,1506.5,248.5A6,6,0,1,1,1518.5,248.5"></path><path id="kity_path_2830" fill="none" stroke="gray" d="M1508,248.5L1517,248.5"></path></g><path id="node_outline246" fill="none" stroke="none" d="M1419.5,237.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text246" fill="black"><text id="kity_text_1302" text-rendering="inherit" font-size="12" dy=".8em" y="242.5" x="1424.5">旧版复制功能</text></g></g><g id="minder_node238"><g id="node_expander237" style="cursor: pointer;"><path id="kity_path_2805" fill="white" stroke="gray" d="M1386.5,135.5A6,6,0,1,1,1374.5,135.5A6,6,0,1,1,1386.5,135.5"></path><path id="kity_path_2806" fill="none" stroke="gray" d="M1376,135.5L1385,135.5"></path></g><path id="node_outline238" fill="none" stroke="none" d="M1300.5,124.5h69a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-69a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text238" fill="black"><text id="kity_text_1285" text-rendering="inherit" font-size="12" dy=".8em" y="129.5" x="1305.5">同步(sync)</text></g></g><g id="minder_node239"><g id="node_expander234" display="none" style="cursor: pointer;"><path id="kity_path_2796" fill="white" stroke="gray" d="M1267.5,83.5A6,6,0,1,1,1255.5,83.5A6,6,0,1,1,1267.5,83.5"></path><path id="kity_path_2797" fill="none" stroke="gray"></path></g><path id="node_outline235" fill="none" stroke="none" d="M1052.5,72.5h198a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-198a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text235" fill="black"><text id="kity_text_1279" text-rendering="inherit" font-size="12" dy=".8em" y="77.5" x="1057.5">从服务器向主服务器发送SYNC命令</text></g></g><g id="minder_node240"><g id="node_expander235" display="none" style="cursor: pointer;"><path id="kity_path_2799" fill="white" stroke="gray" d="M1267.5,135.5A6,6,0,1,1,1255.5,135.5A6,6,0,1,1,1267.5,135.5"></path><path id="kity_path_2800" fill="none" stroke="gray"></path></g><path id="node_outline236" fill="none" stroke="none" d="M1061.5,124.5h189a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-189a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text236" fill="black"><text id="kity_text_1281" text-rendering="inherit" font-size="12" dy=".8em" y="129.5" x="1066.5">主服务器向从服务器发送RDB文件</text></g></g><g id="minder_node241"><g id="node_expander236" display="none" style="cursor: pointer;"><path id="kity_path_2802" fill="white" stroke="gray" d="M1267.5,187.5A6,6,0,1,1,1255.5,187.5A6,6,0,1,1,1267.5,187.5"></path><path id="kity_path_2803" fill="none" stroke="gray"></path></g><path id="node_outline237" fill="none" stroke="none" d="M976.5,176.5h274a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-274a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text237" fill="black"><text id="kity_text_1283" text-rendering="inherit" font-size="12" dy=".8em" y="181.5" x="981.5">主服务器向从服务器发送缓冲区保存的所有写命令</text></g></g><g id="minder_node242"><g id="node_expander239" style="cursor: pointer;"><path id="kity_path_2811" fill="white" stroke="gray" d="M1386.5,248.5A6,6,0,1,1,1374.5,248.5A6,6,0,1,1,1386.5,248.5"></path><path id="kity_path_2812" fill="none" stroke="gray" d="M1376,248.5L1385,248.5"></path></g><path id="node_outline240" fill="none" stroke="none" d="M1173.5,237.5h196a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-196a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text240" fill="black"><text id="kity_text_1290" text-rendering="inherit" font-size="12" dy=".8em" y="242.5" x="1178.5">命令传播(command propagate)</text></g></g><g id="minder_node243"><g id="node_expander238" display="none" style="cursor: pointer;"><path id="kity_path_2808" fill="white" stroke="gray" d="M1140.5,248.5A6,6,0,1,1,1128.5,248.5A6,6,0,1,1,1140.5,248.5"></path><path id="kity_path_2809" fill="none" stroke="gray"></path></g><path id="node_outline239" fill="none" stroke="none" d="M807.5,228.5h316a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-316a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text239" fill="black"><text id="kity_text_1287" text-rendering="inherit" font-size="12" dy=".8em" y="233.5" x="812.5">主服务器需要对从服务器执行命令传播操作:</text><text id="kity_text_1288" text-rendering="inherit" font-size="12" dy=".8em" y="251.5" x="812.5">主服务器会将自己执行的写命令, 发送给给从服务器执行。</text></g></g><g id="minder_node244"><g id="node_expander244" style="cursor: pointer;"><path id="kity_path_2826" fill="white" stroke="gray" d="M1386.5,361.5A6,6,0,1,1,1374.5,361.5A6,6,0,1,1,1386.5,361.5"></path><path id="kity_path_2827" fill="none" stroke="gray" d="M1376,361.5L1385,361.5"></path></g><path id="node_outline245" fill="none" stroke="none" d="M1335.5,350.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text245" fill="black"><text id="kity_text_1300" text-rendering="inherit" font-size="12" dy=".8em" y="355.5" x="1340.5">缺陷</text></g></g><g id="minder_node245"><g id="node_expander243" style="cursor: pointer;"><path id="kity_path_2823" fill="white" stroke="gray" d="M1302.5,361.5A6,6,0,1,1,1290.5,361.5A6,6,0,1,1,1302.5,361.5"></path><path id="kity_path_2824" fill="none" stroke="gray" d="M1292,361.5L1301,361.5"></path></g><path id="node_outline244" fill="none" stroke="none" d="M915.5,350.5h370a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-370a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text244" fill="black"><text id="kity_text_1298" text-rendering="inherit" font-size="12" dy=".8em" y="355.5" x="920.5">从服务器断线重连后, 会重新拉取主服务器的RDB文件, 进行全量同步</text></g></g><g id="minder_node246"><g id="node_expander240" display="none" style="cursor: pointer;"><path id="kity_path_2814" fill="white" stroke="gray" d="M882.5,309.5A6,6,0,1,1,870.5,309.5A6,6,0,1,1,882.5,309.5"></path><path id="kity_path_2815" fill="none" stroke="gray"></path></g><path id="node_outline241" fill="none" stroke="none" d="M689.5,298.5h176a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-176a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text241" fill="black"><text id="kity_text_1292" text-rendering="inherit" font-size="12" dy=".8em" y="303.5" x="694.5">cpu、内存、io资源的耗费较大</text></g></g><g id="minder_node247"><g id="node_expander241" display="none" style="cursor: pointer;"><path id="kity_path_2817" fill="white" stroke="gray" d="M882.5,361.5A6,6,0,1,1,870.5,361.5A6,6,0,1,1,882.5,361.5"></path><path id="kity_path_2818" fill="none" stroke="gray"></path></g><path id="node_outline242" fill="none" stroke="none" d="M687.5,350.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text242" fill="black"><text id="kity_text_1294" text-rendering="inherit" font-size="12" dy=".8em" y="355.5" x="692.5">对带宽和流量产生非常大的耗费</text></g></g><g id="minder_node248"><g id="node_expander242" display="none" style="cursor: pointer;"><path id="kity_path_2820" fill="white" stroke="gray" d="M882.5,413.5A6,6,0,1,1,870.5,413.5A6,6,0,1,1,882.5,413.5"></path><path id="kity_path_2821" fill="none" stroke="gray"></path></g><path id="node_outline243" fill="none" stroke="none" d="M591.5,402.5h274a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-274a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text243" fill="black"><text id="kity_text_1296" text-rendering="inherit" font-size="12" dy=".8em" y="407.5" x="596.5">从服务器加载RDB时, 是阻塞的, 无法处理命令请求</text></g></g><g id="minder_node249"><g id="node_expander259" style="cursor: pointer;"><path id="kity_path_2871" fill="white" stroke="gray" d="M1518.5,556.5A6,6,0,1,1,1506.5,556.5A6,6,0,1,1,1518.5,556.5"></path><path id="kity_path_2872" fill="none" stroke="gray" d="M1508,556.5L1517,556.5"></path></g><path id="node_outline260" fill="none" stroke="none" d="M1419.5,545.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text260" fill="black"><text id="kity_text_1330" text-rendering="inherit" font-size="12" dy=".8em" y="550.5" x="1424.5">新版复制功能</text></g></g><g id="minder_node250"><g id="node_expander258" style="cursor: pointer;"><path id="kity_path_2868" fill="white" stroke="gray" d="M1386.5,556.5A6,6,0,1,1,1374.5,556.5A6,6,0,1,1,1386.5,556.5"></path><path id="kity_path_2869" fill="none" stroke="gray" d="M1376,556.5L1385,556.5"></path></g><path id="node_outline259" fill="none" stroke="none" d="M1192.5,545.5h177a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-177a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text259" fill="black"><text id="kity_text_1328" text-rendering="inherit" font-size="12" dy=".8em" y="550.5" x="1197.5">采用PSYNC命令代替SYNC命令</text></g></g><g id="minder_node251"><g id="node_expander247" style="cursor: pointer;"><path id="kity_path_2835" fill="white" stroke="gray" d="M1159.5,465.5A6,6,0,1,1,1147.5,465.5A6,6,0,1,1,1159.5,465.5"></path><path id="kity_path_2836" fill="none" stroke="gray" d="M1149,465.5L1158,465.5"></path></g><path id="node_outline248" fill="none" stroke="none" d="M1084.5,454.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text248" fill="black"><text id="kity_text_1306" text-rendering="inherit" font-size="12" dy=".8em" y="459.5" x="1089.5">完成同步</text></g></g><g id="minder_node252"><g id="node_expander246" display="none" style="cursor: pointer;"><path id="kity_path_2832" fill="white" stroke="gray" d="M1051.5,465.5A6,6,0,1,1,1039.5,465.5A6,6,0,1,1,1051.5,465.5"></path><path id="kity_path_2833" fill="none" stroke="gray"></path></g><path id="node_outline247" fill="none" stroke="none" d="M824.5,454.5h210a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text247" fill="black"><text id="kity_text_1304" text-rendering="inherit" font-size="12" dy=".8em" y="459.5" x="829.5">用于初次复制。与SYNC命令基本一样</text></g></g><g id="minder_node253"><g id="node_expander257" style="cursor: pointer;"><path id="kity_path_2865" fill="white" stroke="gray" d="M1159.5,647.5A6,6,0,1,1,1147.5,647.5A6,6,0,1,1,1159.5,647.5"></path><path id="kity_path_2866" fill="none" stroke="gray" d="M1149,647.5L1158,647.5"></path></g><path id="node_outline258" fill="none" stroke="none" d="M1084.5,636.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text258" fill="black"><text id="kity_text_1326" text-rendering="inherit" font-size="12" dy=".8em" y="641.5" x="1089.5">部分同步</text></g></g><g id="minder_node254"><g id="node_expander251" style="cursor: pointer;"><path id="kity_path_2847" fill="white" stroke="gray" d="M1051.5,569.5A6,6,0,1,1,1039.5,569.5A6,6,0,1,1,1051.5,569.5"></path><path id="kity_path_2848" fill="none" stroke="gray" d="M1041,569.5L1050,569.5"></path></g><path id="node_outline252" fill="none" stroke="none" d="M868.5,558.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text252" fill="black"><text id="kity_text_1314" text-rendering="inherit" font-size="12" dy=".8em" y="563.5" x="873.5">用于处理断线后重复制的情况</text></g></g><g id="minder_node255"><g id="node_expander248" display="none" style="cursor: pointer;"><path id="kity_path_2838" fill="white" stroke="gray" d="M835.5,517.5A6,6,0,1,1,823.5,517.5A6,6,0,1,1,835.5,517.5"></path><path id="kity_path_2839" fill="none" stroke="gray"></path></g><path id="node_outline249" fill="none" stroke="none" d="M613.5,506.5h205a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-205a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text249" fill="black"><text id="kity_text_1308" text-rendering="inherit" font-size="12" dy=".8em" y="511.5" x="618.5">从服务器向主服务器发送PSYNC命令</text></g></g><g id="minder_node256"><g id="node_expander249" display="none" style="cursor: pointer;"><path id="kity_path_2841" fill="white" stroke="gray" d="M835.5,569.5A6,6,0,1,1,823.5,569.5A6,6,0,1,1,835.5,569.5"></path><path id="kity_path_2842" fill="none" stroke="gray"></path></g><path id="node_outline250" fill="none" stroke="none" d="M585.5,558.5h233a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-233a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text250" fill="black"><text id="kity_text_1310" text-rendering="inherit" font-size="12" dy=".8em" y="563.5" x="590.5">主服务器向从服务器发送+CONTINUE命令</text></g></g><g id="minder_node257"><g id="node_expander250" display="none" style="cursor: pointer;"><path id="kity_path_2844" fill="white" stroke="gray" d="M835.5,621.5A6,6,0,1,1,823.5,621.5A6,6,0,1,1,835.5,621.5"></path><path id="kity_path_2845" fill="none" stroke="gray"></path></g><path id="node_outline251" fill="none" stroke="none" d="M556.5,610.5h262a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-262a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text251" fill="black"><text id="kity_text_1312" text-rendering="inherit" font-size="12" dy=".8em" y="615.5" x="561.5">主服务器向从服务器发送断线期间产生的写命令</text></g></g><g id="minder_node258"><g id="node_expander256" style="cursor: pointer;"><path id="kity_path_2862" fill="white" stroke="gray" d="M1051.5,725.5A6,6,0,1,1,1039.5,725.5A6,6,0,1,1,1051.5,725.5"></path><path id="kity_path_2863" fill="none" stroke="gray" d="M1041,725.5L1050,725.5"></path></g><path id="node_outline257" fill="none" stroke="none" d="M1000.5,714.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text257" fill="black"><text id="kity_text_1324" text-rendering="inherit" font-size="12" dy=".8em" y="719.5" x="1005.5">实现</text></g></g><g id="minder_node259"><g id="node_expander252" display="none" style="cursor: pointer;"><path id="kity_path_2850" fill="white" stroke="gray" d="M967.5,673.5A6,6,0,1,1,955.5,673.5A6,6,0,1,1,967.5,673.5"></path><path id="kity_path_2851" fill="none" stroke="gray"></path></g><path id="node_outline253" fill="none" stroke="none" d="M688.5,662.5h262a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-262a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text253" fill="black"><text id="kity_text_1316" text-rendering="inherit" font-size="12" dy=".8em" y="667.5" x="693.5">主服务器的复制偏移量、从服务器的复制偏移量</text></g></g><g id="minder_node260"><g id="node_expander254" style="cursor: pointer;"><path id="kity_path_2856" fill="white" stroke="gray" d="M967.5,725.5A6,6,0,1,1,955.5,725.5A6,6,0,1,1,967.5,725.5"></path><path id="kity_path_2857" fill="none" stroke="gray" d="M957,725.5L966,725.5"></path></g><path id="node_outline255" fill="none" stroke="none" d="M674.5,714.5h276a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-276a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text255" fill="black"><text id="kity_text_1320" text-rendering="inherit" font-size="12" dy=".8em" y="719.5" x="679.5">主服务器的复制积压缓冲区(replication backlog)</text></g></g><g id="minder_node261"><g id="node_expander253" display="none" style="cursor: pointer;"><path id="kity_path_2853" fill="white" stroke="gray" d="M641.5,725.5A6,6,0,1,1,629.5,725.5A6,6,0,1,1,641.5,725.5"></path><path id="kity_path_2854" fill="none" stroke="gray"></path></g><path id="node_outline254" fill="none" stroke="none" d="M589.5,714.5h35a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-35a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text254" fill="black"><text id="kity_text_1318" text-rendering="inherit" font-size="12" dy=".8em" y="719.5" x="594.5">FIFO</text></g></g><g id="minder_node262"><g id="node_expander255" display="none" style="cursor: pointer;"><path id="kity_path_2859" fill="white" stroke="gray" d="M967.5,777.5A6,6,0,1,1,955.5,777.5A6,6,0,1,1,967.5,777.5"></path><path id="kity_path_2860" fill="none" stroke="gray"></path></g><path id="node_outline256" fill="none" stroke="none" d="M815.5,766.5h135a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-135a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text256" fill="black"><text id="kity_text_1322" text-rendering="inherit" font-size="12" dy=".8em" y="771.5" x="820.5">服务器的运行ID(run ID)</text></g></g><g id="minder_node263"><g id="node_expander269" style="cursor: pointer;"><path id="kity_path_2901" fill="white" stroke="gray" d="M1518.5,1110.5A6,6,0,1,1,1506.5,1110.5A6,6,0,1,1,1518.5,1110.5"></path><path id="kity_path_2902" fill="none" stroke="gray" d="M1508,1110.5L1517,1110.5"></path></g><path id="node_outline270" fill="none" stroke="none" d="M1431.5,1099.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text270" fill="black"><text id="kity_text_1361" text-rendering="inherit" font-size="12" dy=".8em" y="1104.5" x="1436.5">复制的实现</text></g></g><g id="minder_node264"><g id="node_expander260" display="none" style="cursor: pointer;"><path id="kity_path_2874" fill="white" stroke="gray" d="M1398.5,883.5A6,6,0,1,1,1386.5,883.5A6,6,0,1,1,1398.5,883.5"></path><path id="kity_path_2875" fill="none" stroke="gray"></path></g><path id="node_outline261" fill="none" stroke="none" d="M1254.5,818.5h127a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-127a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text261" fill="black"><text id="kity_text_1332" text-rendering="inherit" font-size="12" dy=".8em" y="823.5" x="1259.5">struct redisServer{</text><text id="kity_text_1333" text-rendering="inherit" font-size="12" dy=".8em" y="841.5" x="1259.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1334" text-rendering="inherit" font-size="12" dy=".8em" y="859.5" x="1259.5">.&#xa0; &#xa0; // 主服务器的地址</text><text id="kity_text_1335" text-rendering="inherit" font-size="12" dy=".8em" y="877.5" x="1259.5">.&#xa0; &#xa0; char *masterhost;</text><text id="kity_text_1336" text-rendering="inherit" font-size="12" dy=".8em" y="895.5" x="1259.5">.&#xa0; &#xa0; // 主服务器的端口</text><text id="kity_text_1337" text-rendering="inherit" font-size="12" dy=".8em" y="913.5" x="1259.5">.&#xa0; &#xa0; int masterport;</text><text id="kity_text_1338" text-rendering="inherit" font-size="12" dy=".8em" y="931.5" x="1259.5">};</text></g></g><g id="minder_node265"><g id="node_expander261" display="none" style="cursor: pointer;"><path id="kity_path_2877" fill="white" stroke="gray" d="M1398.5,989.5A6,6,0,1,1,1386.5,989.5A6,6,0,1,1,1398.5,989.5"></path><path id="kity_path_2878" fill="none" stroke="gray"></path></g><path id="node_outline262" fill="none" stroke="none" d="M1043.5,978.5h338a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-338a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text262" fill="black"><text id="kity_text_1340" text-rendering="inherit" font-size="12" dy=".8em" y="983.5" x="1048.5">用SLAVEOF命令设置在从服务器上设置主服务器的地址和端口</text></g></g><g id="minder_node266"><g id="node_expander262" display="none" style="cursor: pointer;"><path id="kity_path_2880" fill="white" stroke="gray" d="M1398.5,1041.5A6,6,0,1,1,1386.5,1041.5A6,6,0,1,1,1398.5,1041.5"></path><path id="kity_path_2881" fill="none" stroke="gray"></path></g><path id="node_outline263" fill="none" stroke="none" d="M1287.5,1030.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text263" fill="black"><text id="kity_text_1342" text-rendering="inherit" font-size="12" dy=".8em" y="1035.5" x="1292.5">建立套接字连接</text></g></g><g id="minder_node267"><g id="node_expander263" display="none" style="cursor: pointer;"><path id="kity_path_2883" fill="white" stroke="gray" d="M1398.5,1093.5A6,6,0,1,1,1386.5,1093.5A6,6,0,1,1,1398.5,1093.5"></path><path id="kity_path_2884" fill="none" stroke="gray"></path></g><path id="node_outline264" fill="none" stroke="none" d="M1294.5,1082.5h87a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-87a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text264" fill="black"><text id="kity_text_1344" text-rendering="inherit" font-size="12" dy=".8em" y="1087.5" x="1299.5">发送PING命令</text></g></g><g id="minder_node268"><g id="node_expander264" display="none" style="cursor: pointer;"><path id="kity_path_2886" fill="white" stroke="gray" d="M1398.5,1145.5A6,6,0,1,1,1386.5,1145.5A6,6,0,1,1,1398.5,1145.5"></path><path id="kity_path_2887" fill="none" stroke="gray"></path></g><path id="node_outline265" fill="none" stroke="none" d="M1323.5,1134.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text265" fill="black"><text id="kity_text_1346" text-rendering="inherit" font-size="12" dy=".8em" y="1139.5" x="1328.5">身份验证</text></g></g><g id="minder_node269"><g id="node_expander266" style="cursor: pointer;"><path id="kity_path_2892" fill="white" stroke="gray" d="M1398.5,1242.5A6,6,0,1,1,1386.5,1242.5A6,6,0,1,1,1398.5,1242.5"></path><path id="kity_path_2893" fill="none" stroke="gray" d="M1388,1242.5L1397,1242.5"></path></g><path id="node_outline267" fill="none" stroke="none" d="M1299.5,1231.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text267" fill="black"><text id="kity_text_1355" text-rendering="inherit" font-size="12" dy=".8em" y="1236.5" x="1304.5">发送端口信息</text></g></g><g id="minder_node270"><g id="node_expander265" display="none" style="cursor: pointer;"><path id="kity_path_2889" fill="white" stroke="gray" d="M1266.5,1242.5A6,6,0,1,1,1254.5,1242.5A6,6,0,1,1,1266.5,1242.5"></path><path id="kity_path_2890" fill="none" stroke="gray"></path></g><path id="node_outline266" fill="none" stroke="none" d="M1078.5,1186.5h171a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-171a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z"></path><g id="node_text266" fill="black"><text id="kity_text_1348" text-rendering="inherit" font-size="12" dy=".8em" y="1191.5" x="1083.5">typedef struct redisClient {</text><text id="kity_text_1349" text-rendering="inherit" font-size="12" dy=".8em" y="1209.5" x="1083.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1350" text-rendering="inherit" font-size="12" dy=".8em" y="1227.5" x="1083.5">.&#xa0; &#xa0; // 从服务器的监听端口号</text><text id="kity_text_1351" text-rendering="inherit" font-size="12" dy=".8em" y="1245.5" x="1083.5">.&#xa0; &#xa0; // int slave_listening_port;</text><text id="kity_text_1352" text-rendering="inherit" font-size="12" dy=".8em" y="1263.5" x="1083.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1353" text-rendering="inherit" font-size="12" dy=".8em" y="1281.5" x="1083.5">} redisClient;</text></g></g><g id="minder_node271"><g id="node_expander267" display="none" style="cursor: pointer;"><path id="kity_path_2895" fill="white" stroke="gray" d="M1398.5,1339.5A6,6,0,1,1,1386.5,1339.5A6,6,0,1,1,1398.5,1339.5"></path><path id="kity_path_2896" fill="none" stroke="gray"></path></g><path id="node_outline268" fill="none" stroke="none" d="M1347.5,1328.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text268" fill="black"><text id="kity_text_1357" text-rendering="inherit" font-size="12" dy=".8em" y="1333.5" x="1352.5">同步</text></g></g><g id="minder_node272"><g id="node_expander268" display="none" style="cursor: pointer;"><path id="kity_path_2898" fill="white" stroke="gray" d="M1398.5,1391.5A6,6,0,1,1,1386.5,1391.5A6,6,0,1,1,1398.5,1391.5"></path><path id="kity_path_2899" fill="none" stroke="gray"></path></g><path id="node_outline269" fill="none" stroke="none" d="M1323.5,1380.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text269" fill="black"><text id="kity_text_1359" text-rendering="inherit" font-size="12" dy=".8em" y="1385.5" x="1328.5">命令传播</text></g></g><g id="minder_node273"><g id="node_expander278" style="cursor: pointer;"><path id="kity_path_2928" fill="white" stroke="gray" d="M1518.5,1620.5A6,6,0,1,1,1506.5,1620.5A6,6,0,1,1,1518.5,1620.5"></path><path id="kity_path_2929" fill="none" stroke="gray" d="M1508,1620.5L1517,1620.5"></path></g><path id="node_outline279" fill="none" stroke="none" d="M1443.5,1609.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text279" fill="black"><text id="kity_text_1391" text-rendering="inherit" font-size="12" dy=".8em" y="1614.5" x="1448.5">心跳检测</text></g></g><g id="minder_node274"><g id="node_expander271" style="cursor: pointer;"><path id="kity_path_2907" fill="white" stroke="gray" d="M1410.5,1470.5A6,6,0,1,1,1398.5,1470.5A6,6,0,1,1,1410.5,1470.5"></path><path id="kity_path_2908" fill="none" stroke="gray" d="M1400,1470.5L1409,1470.5"></path></g><path id="node_outline272" fill="none" stroke="none" d="M1004.5,1450.5h389a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-389a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text272" fill="black"><text id="kity_text_1368" text-rendering="inherit" font-size="12" dy=".8em" y="1455.5" x="1009.5">在命令传播阶段, 从服务器默认会以每秒1次的频率, 向主服务器发送命令</text><text id="kity_text_1369" text-rendering="inherit" font-size="12" dy=".8em" y="1473.5" x="1009.5">REPLCONF ACK &lt;replication_offset&gt;</text></g></g><g id="minder_node275"><g id="node_expander270" display="none" style="cursor: pointer;"><path id="kity_path_2904" fill="white" stroke="gray" d="M971.5,1470.5A6,6,0,1,1,959.5,1470.5A6,6,0,1,1,971.5,1470.5"></path><path id="kity_path_2905" fill="none" stroke="gray"></path></g><path id="node_outline271" fill="none" stroke="none" d="M659.5,1432.5h295a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-295a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z"></path><g id="node_text271" fill="black"><text id="kity_text_1363" text-rendering="inherit" font-size="12" dy=".8em" y="1437.5" x="664.5">发送REPLCONF ACK命令对于主从服务器有三个作用:</text><text id="kity_text_1364" text-rendering="inherit" font-size="12" dy=".8em" y="1455.5" x="664.5">1. 检测主从服务器的网络连接状态</text><text id="kity_text_1365" text-rendering="inherit" font-size="12" dy=".8em" y="1473.5" x="664.5">2. 付诸实现min-slaves选项</text><text id="kity_text_1366" text-rendering="inherit" font-size="12" dy=".8em" y="1491.5" x="664.5">3. 检测命令丢失</text></g></g><g id="minder_node276"><g id="node_expander273" style="cursor: pointer;"><path id="kity_path_2913" fill="white" stroke="gray" d="M1410.5,1549.5A6,6,0,1,1,1398.5,1549.5A6,6,0,1,1,1410.5,1549.5"></path><path id="kity_path_2914" fill="none" stroke="gray" d="M1400,1549.5L1409,1549.5"></path></g><path id="node_outline274" fill="none" stroke="none" d="M1215.5,1538.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text274" fill="black"><text id="kity_text_1373" text-rendering="inherit" font-size="12" dy=".8em" y="1543.5" x="1220.5">检测主从服务器的网络连接状态</text></g></g><g id="minder_node277"><g id="node_expander272" display="none" style="cursor: pointer;"><path id="kity_path_2910" fill="white" stroke="gray" d="M1182.5,1549.5A6,6,0,1,1,1170.5,1549.5A6,6,0,1,1,1182.5,1549.5"></path><path id="kity_path_2911" fill="none" stroke="gray"></path></g><path id="node_outline273" fill="none" stroke="none" d="M1062.5,1538.5h103a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-103a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text273" fill="black"><text id="kity_text_1371" text-rendering="inherit" font-size="12" dy=".8em" y="1543.5" x="1067.5">INFO replication</text></g></g><g id="minder_node278"><g id="node_expander275" style="cursor: pointer;"><path id="kity_path_2919" fill="white" stroke="gray" d="M1410.5,1655.5A6,6,0,1,1,1398.5,1655.5A6,6,0,1,1,1410.5,1655.5"></path><path id="kity_path_2920" fill="none" stroke="gray" d="M1400,1655.5L1409,1655.5"></path></g><path id="node_outline276" fill="none" stroke="none" d="M1204.5,1644.5h189a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-189a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text276" fill="black"><text id="kity_text_1383" text-rendering="inherit" font-size="12" dy=".8em" y="1649.5" x="1209.5">辅助是爱心纳min-slaves配置选项</text></g></g><g id="minder_node279"><g id="node_expander274" display="none" style="cursor: pointer;"><path id="kity_path_2916" fill="white" stroke="gray" d="M1171.5,1655.5A6,6,0,1,1,1159.5,1655.5A6,6,0,1,1,1171.5,1655.5"></path><path id="kity_path_2917" fill="none" stroke="gray"></path></g><path id="node_outline275" fill="none" stroke="none" d="M860.5,1590.5h294a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-294a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text275" fill="black"><text id="kity_text_1375" text-rendering="inherit" font-size="12" dy=".8em" y="1595.5" x="865.5">假如我们向主服务器提供一下设置:</text><text id="kity_text_1376" text-rendering="inherit" font-size="12" dy=".8em" y="1613.5" x="865.5">min-slaves-to-write 3</text><text id="kity_text_1377" text-rendering="inherit" font-size="12" dy=".8em" y="1631.5" x="865.5">min-slaves-max-lag 10</text><text id="kity_text_1378" text-rendering="inherit" font-size="12" dy=".8em" y="1649.5" x="865.5"></text><text id="kity_text_1379" text-rendering="inherit" font-size="12" dy=".8em" y="1667.5" x="865.5">那么在从服务器的数量少于3个, </text><text id="kity_text_1380" text-rendering="inherit" font-size="12" dy=".8em" y="1685.5" x="865.5">或者三个从服务器的延迟(lag)值都大于或等于10秒时,</text><text id="kity_text_1381" text-rendering="inherit" font-size="12" dy=".8em" y="1703.5" x="865.5">&#xa0;主服务器将拒绝执行写命令</text></g></g><g id="minder_node280"><g id="node_expander277" style="cursor: pointer;"><path id="kity_path_2925" fill="white" stroke="gray" d="M1410.5,1779.5A6,6,0,1,1,1398.5,1779.5A6,6,0,1,1,1410.5,1779.5"></path><path id="kity_path_2926" fill="none" stroke="gray" d="M1400,1779.5L1409,1779.5"></path></g><path id="node_outline278" fill="none" stroke="none" d="M1311.5,1768.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text278" fill="black"><text id="kity_text_1389" text-rendering="inherit" font-size="12" dy=".8em" y="1773.5" x="1316.5">检测命令丢失</text></g></g><g id="minder_node281"><g id="node_expander276" display="none" style="cursor: pointer;"><path id="kity_path_2922" fill="white" stroke="gray" d="M1278.5,1779.5A6,6,0,1,1,1266.5,1779.5A6,6,0,1,1,1278.5,1779.5"></path><path id="kity_path_2923" fill="none" stroke="gray"></path></g><path id="node_outline277" fill="none" stroke="none" d="M741.5,1750.5h520a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-520a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text277" fill="black"><text id="kity_text_1385" text-rendering="inherit" font-size="12" dy=".8em" y="1755.5" x="746.5">在发送REPLCONF ACK时, 主服务器会根据偏移量进行判断。</text><text id="kity_text_1386" text-rendering="inherit" font-size="12" dy=".8em" y="1773.5" x="746.5">如果发现从服务器的偏移量少于自己的复制偏移量, </text><text id="kity_text_1387" text-rendering="inherit" font-size="12" dy=".8em" y="1791.5" x="746.5">主服务器就会在复制积压缓冲区里找到从服务器缺少的数据, 并将这些数据重新发送给从服务器。</text></g></g><g id="minder_node282"><g id="node_expander324" style="cursor: pointer;"><path id="kity_path_3066" fill="white" stroke="gray" d="M1626.5,3567.5A6,6,0,1,1,1614.5,3567.5A6,6,0,1,1,1626.5,3567.5"></path><path id="kity_path_3067" fill="none" stroke="gray" d="M1616,3567.5L1625,3567.5"></path></g><path id="node_outline325" fill="none" stroke="none" d="M1575.5,3556.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text325" fill="black"><text id="kity_text_1572" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="3561.5" x="1580.5">哨兵</text></g></g><g id="minder_node283"><g id="node_expander292" style="cursor: pointer;"><path id="kity_path_2970" fill="white" stroke="gray" d="M1542.5,2609.5A6,6,0,1,1,1530.5,2609.5A6,6,0,1,1,1542.5,2609.5"></path><path id="kity_path_2971" fill="none" stroke="gray" d="M1532,2609.5L1541,2609.5"></path></g><path id="node_outline293" fill="none" stroke="none" d="M1419.5,2598.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text293" fill="black"><text id="kity_text_1496" text-rendering="inherit" font-size="12" dy=".8em" y="2603.5" x="1424.5">启动并初始化哨兵</text></g></g><g id="minder_node284"><g id="node_expander281" style="cursor: pointer;"><path id="kity_path_2937" fill="white" stroke="gray" d="M1386.5,1858.5A6,6,0,1,1,1374.5,1858.5A6,6,0,1,1,1386.5,1858.5"></path><path id="kity_path_2938" fill="none" stroke="gray" d="M1376,1858.5L1385,1858.5"></path></g><path id="node_outline282" fill="none" stroke="none" d="M1287.5,1847.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text282" fill="black"><text id="kity_text_1398" text-rendering="inherit" font-size="12" dy=".8em" y="1852.5" x="1292.5">初始化服务器</text></g></g><g id="minder_node285"><g id="node_expander280" display="none" style="cursor: pointer;"><path id="kity_path_2934" fill="white" stroke="gray" d="M1254.5,1858.5A6,6,0,1,1,1242.5,1858.5A6,6,0,1,1,1254.5,1858.5"></path><path id="kity_path_2935" fill="none" stroke="gray"></path></g><path id="node_outline281" fill="none" stroke="none" d="M962.5,1838.5h275a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-275a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text281" fill="black"><text id="kity_text_1395" text-rendering="inherit" font-size="12" dy=".8em" y="1843.5" x="967.5">初始化Sentinel服务器。</text><text id="kity_text_1396" text-rendering="inherit" font-size="12" dy=".8em" y="1861.5" x="967.5">与Redis服务器有区别, 例如不会载入持久化文件。</text></g></g><g id="minder_node286"><g id="node_expander283" style="cursor: pointer;"><path id="kity_path_2943" fill="white" stroke="gray" d="M1386.5,1964.5A6,6,0,1,1,1374.5,1964.5A6,6,0,1,1,1386.5,1964.5"></path><path id="kity_path_2944" fill="none" stroke="gray" d="M1376,1964.5L1385,1964.5"></path></g><path id="node_outline284" fill="none" stroke="none" d="M1056.5,1953.5h313a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-313a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text284" fill="black"><text id="kity_text_1407" text-rendering="inherit" font-size="12" dy=".8em" y="1958.5" x="1061.5">将普通的Redis服务器使用的代码替换成Sentinel专用代码</text></g></g><g id="minder_node287"><g id="node_expander282" display="none" style="cursor: pointer;"><path id="kity_path_2940" fill="white" stroke="gray" d="M1023.5,1964.5A6,6,0,1,1,1011.5,1964.5A6,6,0,1,1,1023.5,1964.5"></path><path id="kity_path_2941" fill="none" stroke="gray"></path></g><path id="node_outline283" fill="none" stroke="none" d="M332.5,1908.5h674a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-674a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z"></path><g id="node_text283" fill="black"><text id="kity_text_1400" text-rendering="inherit" font-size="12" dy=".8em" y="1913.5" x="337.5">将一部分普通Redis服务器使用的代码替换成Sentinel专用代码。</text><text id="kity_text_1401" text-rendering="inherit" font-size="12" dy=".8em" y="1931.5" x="337.5">比如说, 普通Redis服务器使用redis.h/REDIS_SERVERPORT常量的值作为服务器端口, 即6379.</text><text id="kity_text_1402" text-rendering="inherit" font-size="12" dy=".8em" y="1949.5" x="337.5">而Sentinel则使用sentinel.c/REDIS_SENTINEL_PORT常量的只作为服务器端口, 即26379.</text><text id="kity_text_1403" text-rendering="inherit" font-size="12" dy=".8em" y="1967.5" x="337.5"></text><text id="kity_text_1404" text-rendering="inherit" font-size="12" dy=".8em" y="1985.5" x="337.5">又比如, 普通Redis服务器使用redis.c/redisCommandTable作为服务器的命令表。</text><text id="kity_text_1405" text-rendering="inherit" font-size="12" dy=".8em" y="2003.5" x="337.5">而Sentinel则使用sentinel.c/seninelcmds作为服务器的命令表, 并且其中的INFO命令会使用Sentinel模式下的专用实现函数。</text></g></g><g id="minder_node288"><g id="node_expander285" style="cursor: pointer;"><path id="kity_path_2949" fill="white" stroke="gray" d="M1386.5,2250.5A6,6,0,1,1,1374.5,2250.5A6,6,0,1,1,1386.5,2250.5"></path><path id="kity_path_2950" fill="none" stroke="gray" d="M1376,2250.5L1385,2250.5"></path></g><path id="node_outline286" fill="none" stroke="none" d="M1254.5,2239.5h115a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-115a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text286" fill="black"><text id="kity_text_1432" text-rendering="inherit" font-size="12" dy=".8em" y="2244.5" x="1259.5">初始化Sentinel状态</text></g></g><g id="minder_node289"><g id="node_expander284" display="none" style="cursor: pointer;"><path id="kity_path_2946" fill="white" stroke="gray" d="M1221.5,2250.5A6,6,0,1,1,1209.5,2250.5A6,6,0,1,1,1221.5,2250.5"></path><path id="kity_path_2947" fill="none" stroke="gray"></path></g><path id="node_outline285" fill="none" stroke="none" d="M745.5,2050.5h459a5,5,0,0,1,5,5v390a5,5,0,0,1,-5,5h-459a5,5,0,0,1,-5,-5v-390a5,5,0,0,1,5,-5z"></path><g id="node_text285" fill="black"><text id="kity_text_1409" text-rendering="inherit" font-size="12" dy=".8em" y="2055.5" x="750.5">在应用了Sentinel的专用代码后, 服务器会初始化一个sentinel.c/sentinelState结构。</text><text id="kity_text_1410" text-rendering="inherit" font-size="12" dy=".8em" y="2073.5" x="750.5">这个结构保存了服务器中所有和Sentinel功能有关的状态。</text><text id="kity_text_1411" text-rendering="inherit" font-size="12" dy=".8em" y="2091.5" x="750.5">(服务器的一般状态仍然有redis.h/redisServer结构保存)</text><text id="kity_text_1412" text-rendering="inherit" font-size="12" dy=".8em" y="2109.5" x="750.5"></text><text id="kity_text_1413" text-rendering="inherit" font-size="12" dy=".8em" y="2127.5" x="750.5">struct sentinelState {</text><text id="kity_text_1414" text-rendering="inherit" font-size="12" dy=".8em" y="2145.5" x="750.5">.&#xa0; &#xa0; // 当前纪元, 用于实现故障转义</text><text id="kity_text_1415" text-rendering="inherit" font-size="12" dy=".8em" y="2163.5" x="750.5">.&#xa0; &#xa0; uint64_t current_epoch;</text><text id="kity_text_1416" text-rendering="inherit" font-size="12" dy=".8em" y="2181.5" x="750.5">.&#xa0; &#xa0; // 保存了所有被这个sentinel监视的主服务器</text><text id="kity_text_1417" text-rendering="inherit" font-size="12" dy=".8em" y="2199.5" x="750.5">.&#xa0; &#xa0; // 字典的键是主服务器的名字</text><text id="kity_text_1418" text-rendering="inherit" font-size="12" dy=".8em" y="2217.5" x="750.5">.&#xa0; &#xa0; // 字典的值则是一个指向sentinelRedisInstance结构的指针</text><text id="kity_text_1419" text-rendering="inherit" font-size="12" dy=".8em" y="2235.5" x="750.5">.&#xa0; &#xa0; dict *masters;</text><text id="kity_text_1420" text-rendering="inherit" font-size="12" dy=".8em" y="2253.5" x="750.5">.&#xa0; &#xa0; // 是否进入了TILT模式</text><text id="kity_text_1421" text-rendering="inherit" font-size="12" dy=".8em" y="2271.5" x="750.5">.&#xa0; &#xa0; int tilt;</text><text id="kity_text_1422" text-rendering="inherit" font-size="12" dy=".8em" y="2289.5" x="750.5">.&#xa0; &#xa0; //目前正在执行的脚本数量</text><text id="kity_text_1423" text-rendering="inherit" font-size="12" dy=".8em" y="2307.5" x="750.5">.&#xa0; &#xa0; int running_scripts;</text><text id="kity_text_1424" text-rendering="inherit" font-size="12" dy=".8em" y="2325.5" x="750.5">.&#xa0; &#xa0; // 进入TILT模式的时间</text><text id="kity_text_1425" text-rendering="inherit" font-size="12" dy=".8em" y="2343.5" x="750.5">.&#xa0; &#xa0; mstime_t tilt_start_time;</text><text id="kity_text_1426" text-rendering="inherit" font-size="12" dy=".8em" y="2361.5" x="750.5">.&#xa0; &#xa0; // 最后一次执行时间处理器的时间</text><text id="kity_text_1427" text-rendering="inherit" font-size="12" dy=".8em" y="2379.5" x="750.5">.&#xa0; &#xa0; mstime_t previous_time;</text><text id="kity_text_1428" text-rendering="inherit" font-size="12" dy=".8em" y="2397.5" x="750.5">.&#xa0; &#xa0; // 一个FIFO队列, 包含了所有需要执行的用户脚本</text><text id="kity_text_1429" text-rendering="inherit" font-size="12" dy=".8em" y="2415.5" x="750.5">.&#xa0; &#xa0; list *scripts_queue;</text><text id="kity_text_1430" text-rendering="inherit" font-size="12" dy=".8em" y="2433.5" x="750.5">} sentinel;</text></g></g><g id="minder_node290"><g id="node_expander288" style="cursor: pointer;"><path id="kity_path_2958" fill="white" stroke="gray" d="M1386.5,2887.5A6,6,0,1,1,1374.5,2887.5A6,6,0,1,1,1386.5,2887.5"></path><path id="kity_path_2959" fill="none" stroke="gray" d="M1376,2887.5L1385,2887.5"></path></g><path id="node_outline289" fill="none" stroke="none" d="M1052.5,2876.5h317a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-317a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text289" fill="black"><text id="kity_text_1488" text-rendering="inherit" font-size="12" dy=".8em" y="2881.5" x="1057.5">根据给定的配置文件, 初始化Sentinel的监视主服务器列表.</text></g></g><g id="minder_node291"><g id="node_expander287" style="cursor: pointer;"><path id="kity_path_2955" fill="white" stroke="gray" d="M1019.5,2887.5A6,6,0,1,1,1007.5,2887.5A6,6,0,1,1,1019.5,2887.5"></path><path id="kity_path_2956" fill="none" stroke="gray" d="M1009,2887.5L1018,2887.5"></path></g><path id="node_outline288" fill="none" stroke="none" d="M521.5,2480.5h481a5,5,0,0,1,5,5v804a5,5,0,0,1,-5,5h-481a5,5,0,0,1,-5,-5v-804a5,5,0,0,1,5,-5z"></path><g id="node_text288" fill="black"><text id="kity_text_1442" text-rendering="inherit" font-size="12" dy=".8em" y="2485.5" x="526.5">Sentinel状态中的masters字典记录了所有被Sentinel监视的主服务器的相关信息.</text><text id="kity_text_1443" text-rendering="inherit" font-size="12" dy=".8em" y="2503.5" x="526.5">字典的键是被监视主服务器的名字.</text><text id="kity_text_1444" text-rendering="inherit" font-size="12" dy=".8em" y="2521.5" x="526.5">而字典的值则是被监视主服务器对应的sentinel.c/sentinelRedisInstance结构.</text><text id="kity_text_1445" text-rendering="inherit" font-size="12" dy=".8em" y="2539.5" x="526.5"></text><text id="kity_text_1446" text-rendering="inherit" font-size="12" dy=".8em" y="2557.5" x="526.5">每个sentinelRedisInstance结构代表一个被Sentinel监视的Redis服务器实例。</text><text id="kity_text_1447" text-rendering="inherit" font-size="12" dy=".8em" y="2575.5" x="526.5">这个实例可以是主服务器、从服务器, 或者是另外一个Sentinel.</text><text id="kity_text_1448" text-rendering="inherit" font-size="12" dy=".8em" y="2593.5" x="526.5"></text><text id="kity_text_1449" text-rendering="inherit" font-size="12" dy=".8em" y="2611.5" x="526.5">详细结构如下:</text><text id="kity_text_1450" text-rendering="inherit" font-size="12" dy=".8em" y="2629.5" x="526.5">typedef struct sentinelRedisInstance {</text><text id="kity_text_1451" text-rendering="inherit" font-size="12" dy=".8em" y="2647.5" x="526.5">.&#xa0; &#xa0; // 标示值, 记录了实例的类型, 以及实例的当前状态</text><text id="kity_text_1452" text-rendering="inherit" font-size="12" dy=".8em" y="2665.5" x="526.5">.&#xa0; &#xa0; int flags;</text><text id="kity_text_1453" text-rendering="inherit" font-size="12" dy=".8em" y="2683.5" x="526.5"></text><text id="kity_text_1454" text-rendering="inherit" font-size="12" dy=".8em" y="2701.5" x="526.5">.&#xa0; &#xa0; // 实例的名字</text><text id="kity_text_1455" text-rendering="inherit" font-size="12" dy=".8em" y="2719.5" x="526.5">.&#xa0; &#xa0; // 主服务器的名字由用户在配置文件中设置</text><text id="kity_text_1456" text-rendering="inherit" font-size="12" dy=".8em" y="2737.5" x="526.5">.&#xa0; &#xa0; // 从服务器以及Sentinel的名字由Sentinel自动设置</text><text id="kity_text_1457" text-rendering="inherit" font-size="12" dy=".8em" y="2755.5" x="526.5">.&#xa0; &#xa0; //格式为ip:port, 例如"127.0.0.1:26379"</text><text id="kity_text_1458" text-rendering="inherit" font-size="12" dy=".8em" y="2773.5" x="526.5">.&#xa0; &#xa0; char *name;</text><text id="kity_text_1459" text-rendering="inherit" font-size="12" dy=".8em" y="2791.5" x="526.5"></text><text id="kity_text_1460" text-rendering="inherit" font-size="12" dy=".8em" y="2809.5" x="526.5">.&#xa0; &#xa0; // 实例的运行ID</text><text id="kity_text_1461" text-rendering="inherit" font-size="12" dy=".8em" y="2827.5" x="526.5">.&#xa0; &#xa0; char *runid;</text><text id="kity_text_1462" text-rendering="inherit" font-size="12" dy=".8em" y="2845.5" x="526.5"></text><text id="kity_text_1463" text-rendering="inherit" font-size="12" dy=".8em" y="2863.5" x="526.5">.&#xa0; &#xa0; // 配置纪元, 用于实现故障转移</text><text id="kity_text_1464" text-rendering="inherit" font-size="12" dy=".8em" y="2881.5" x="526.5">.&#xa0; &#xa0; uint64_t config_epoch;</text><text id="kity_text_1465" text-rendering="inherit" font-size="12" dy=".8em" y="2899.5" x="526.5"></text><text id="kity_text_1466" text-rendering="inherit" font-size="12" dy=".8em" y="2917.5" x="526.5">.&#xa0; &#xa0; // 实例的地址</text><text id="kity_text_1467" text-rendering="inherit" font-size="12" dy=".8em" y="2935.5" x="526.5">.&#xa0; &#xa0; sentinelAddr *addr;</text><text id="kity_text_1468" text-rendering="inherit" font-size="12" dy=".8em" y="2953.5" x="526.5"></text><text id="kity_text_1469" text-rendering="inherit" font-size="12" dy=".8em" y="2971.5" x="526.5">.&#xa0; &#xa0; // SENTINEL down-after-milliseconds选项设定的值</text><text id="kity_text_1470" text-rendering="inherit" font-size="12" dy=".8em" y="2989.5" x="526.5">.&#xa0; &#xa0; // 实例无响应多少毫秒值后才会被判断为主观下线(subjectively down)</text><text id="kity_text_1471" text-rendering="inherit" font-size="12" dy=".8em" y="3007.5" x="526.5">.&#xa0; &#xa0; mstime_t down_after_period;</text><text id="kity_text_1472" text-rendering="inherit" font-size="12" dy=".8em" y="3025.5" x="526.5"></text><text id="kity_text_1473" text-rendering="inherit" font-size="12" dy=".8em" y="3043.5" x="526.5">.&#xa0; &#xa0; // SENTINEL monitor &lt;master-name&gt; &lt;IP&gt; &lt;port&gt; &lt;quorum&gt;选项中的quorum参数</text><text id="kity_text_1474" text-rendering="inherit" font-size="12" dy=".8em" y="3061.5" x="526.5">.&#xa0; &#xa0; // 判断这个实例为客观下线(objectively down)所需的支持投票数量</text><text id="kity_text_1475" text-rendering="inherit" font-size="12" dy=".8em" y="3079.5" x="526.5">.&#xa0; &#xa0; int quorum;</text><text id="kity_text_1476" text-rendering="inherit" font-size="12" dy=".8em" y="3097.5" x="526.5"></text><text id="kity_text_1477" text-rendering="inherit" font-size="12" dy=".8em" y="3115.5" x="526.5">.&#xa0; &#xa0; // SENTINEL parallel-syncs &lt;master-name&gt; &lt;number&gt; 选项的值</text><text id="kity_text_1478" text-rendering="inherit" font-size="12" dy=".8em" y="3133.5" x="526.5">.&#xa0; &#xa0; // 在执行故障转移操作时, 可以同时对新的主服务器进行同步的从服务器数量</text><text id="kity_text_1479" text-rendering="inherit" font-size="12" dy=".8em" y="3151.5" x="526.5">.&#xa0; &#xa0; int parallel_syncs;</text><text id="kity_text_1480" text-rendering="inherit" font-size="12" dy=".8em" y="3169.5" x="526.5"></text><text id="kity_text_1481" text-rendering="inherit" font-size="12" dy=".8em" y="3187.5" x="526.5">.&#xa0; &#xa0; // SENTINEL failover-timeout &lt;master-name&gt; &lt;ms&gt;选项的值</text><text id="kity_text_1482" text-rendering="inherit" font-size="12" dy=".8em" y="3205.5" x="526.5">.&#xa0; &#xa0; // 刷新故障迁移状态的最大时限</text><text id="kity_text_1483" text-rendering="inherit" font-size="12" dy=".8em" y="3223.5" x="526.5">.&#xa0; &#xa0; mstime_t failover_timeout;</text><text id="kity_text_1484" text-rendering="inherit" font-size="12" dy=".8em" y="3241.5" x="526.5"></text><text id="kity_text_1485" text-rendering="inherit" font-size="12" dy=".8em" y="3259.5" x="526.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1486" text-rendering="inherit" font-size="12" dy=".8em" y="3277.5" x="526.5">} sentinelRedisInstance;</text></g></g><g id="minder_node292"><g id="node_expander286" display="none" style="cursor: pointer;"><path id="kity_path_2952" fill="white" stroke="gray" d="M488.5,2887.5A6,6,0,1,1,476.5,2887.5A6,6,0,1,1,488.5,2887.5"></path><path id="kity_path_2953" fill="none" stroke="gray"></path></g><path id="node_outline287" fill="none" stroke="none" d="M25.5,2822.5h446a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-446a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text287" fill="black"><text id="kity_text_1434" text-rendering="inherit" font-size="12" dy=".8em" y="2827.5" x="30.5">sentinelRedisInstrance.addr属性是一个指向sentinel.c/sentinelAddr结构的指针</text><text id="kity_text_1435" text-rendering="inherit" font-size="12" dy=".8em" y="2845.5" x="30.5"></text><text id="kity_text_1436" text-rendering="inherit" font-size="12" dy=".8em" y="2863.5" x="30.5">结构如下:</text><text id="kity_text_1437" text-rendering="inherit" font-size="12" dy=".8em" y="2881.5" x="30.5">typedef struct sentinelAddr {</text><text id="kity_text_1438" text-rendering="inherit" font-size="12" dy=".8em" y="2899.5" x="30.5">.&#xa0; &#xa0; char *ip;</text><text id="kity_text_1439" text-rendering="inherit" font-size="12" dy=".8em" y="2917.5" x="30.5">.&#xa0; &#xa0; int port;</text><text id="kity_text_1440" text-rendering="inherit" font-size="12" dy=".8em" y="2935.5" x="30.5">} sentinelAddr;</text></g></g><g id="minder_node293"><g id="node_expander291" style="cursor: pointer;"><path id="kity_path_2967" fill="white" stroke="gray" d="M1386.5,3361.5A6,6,0,1,1,1374.5,3361.5A6,6,0,1,1,1386.5,3361.5"></path><path id="kity_path_2968" fill="none" stroke="gray" d="M1376,3361.5L1385,3361.5"></path></g><path id="node_outline292" fill="none" stroke="none" d="M1160.5,3350.5h209a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-209a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text292" fill="black"><text id="kity_text_1494" text-rendering="inherit" font-size="12" dy=".8em" y="3355.5" x="1165.5">创建连向主服务器的2个异步网络连接</text></g></g><g id="minder_node294"><g id="node_expander289" display="none" style="cursor: pointer;"><path id="kity_path_2961" fill="white" stroke="gray" d="M1127.5,3335.5A6,6,0,1,1,1115.5,3335.5A6,6,0,1,1,1127.5,3335.5"></path><path id="kity_path_2962" fill="none" stroke="gray"></path></g><path id="node_outline290" fill="none" stroke="none" d="M763.5,3324.5h347a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-347a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text290" fill="black"><text id="kity_text_1490" text-rendering="inherit" font-size="12" dy=".8em" y="3329.5" x="768.5">一个是命令连接, 专用用于向主服务器发送命令, 并接受命令回复</text></g></g><g id="minder_node295"><g id="node_expander290" display="none" style="cursor: pointer;"><path id="kity_path_2964" fill="white" stroke="gray" d="M1127.5,3387.5A6,6,0,1,1,1115.5,3387.5A6,6,0,1,1,1127.5,3387.5"></path><path id="kity_path_2965" fill="none" stroke="gray"></path></g><path id="node_outline291" fill="none" stroke="none" d="M695.5,3376.5h415a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-415a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text291" fill="black"><text id="kity_text_1492" text-rendering="inherit" font-size="12" dy=".8em" y="3381.5" x="700.5">另一个是订阅连接, 这个链接专门用于订阅主服务器的__sentinel__:hello频道</text></g></g><g id="minder_node296"><g id="node_expander294" style="cursor: pointer;"><path id="kity_path_2976" fill="white" stroke="gray" d="M1542.5,3438.5A6,6,0,1,1,1530.5,3438.5A6,6,0,1,1,1542.5,3438.5"></path><path id="kity_path_2977" fill="none" stroke="gray" d="M1532,3438.5L1541,3438.5"></path></g><path id="node_outline295" fill="none" stroke="none" d="M1419.5,3427.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text295" fill="black"><text id="kity_text_1500" text-rendering="inherit" font-size="12" dy=".8em" y="3432.5" x="1424.5">获取主服务器信息</text></g></g><g id="minder_node297"><g id="node_expander293" display="none" style="cursor: pointer;"><path id="kity_path_2973" fill="white" stroke="gray" d="M1386.5,3438.5A6,6,0,1,1,1374.5,3438.5A6,6,0,1,1,1386.5,3438.5"></path><path id="kity_path_2974" fill="none" stroke="gray"></path></g><path id="node_outline294" fill="none" stroke="none" d="M908.5,3427.5h461a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-461a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text294" fill="black"><text id="kity_text_1498" text-rendering="inherit" font-size="12" dy=".8em" y="3432.5" x="913.5">Sentinel默认会以每十秒一次的频率, 通过命令连接向被监视的主服务器发送INFO命令</text></g></g><g id="minder_node298"><g id="node_expander297" style="cursor: pointer;"><path id="kity_path_2985" fill="white" stroke="gray" d="M1542.5,3516.5A6,6,0,1,1,1530.5,3516.5A6,6,0,1,1,1542.5,3516.5"></path><path id="kity_path_2986" fill="none" stroke="gray" d="M1532,3516.5L1541,3516.5"></path></g><path id="node_outline298" fill="none" stroke="none" d="M1419.5,3505.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text298" fill="black"><text id="kity_text_1506" text-rendering="inherit" font-size="12" dy=".8em" y="3510.5" x="1424.5">获取从服务器信息</text></g></g><g id="minder_node299"><g id="node_expander295" display="none" style="cursor: pointer;"><path id="kity_path_2979" fill="white" stroke="gray" d="M1386.5,3490.5A6,6,0,1,1,1374.5,3490.5A6,6,0,1,1,1386.5,3490.5"></path><path id="kity_path_2980" fill="none" stroke="gray"></path></g><path id="node_outline296" fill="none" stroke="none" d="M536.5,3479.5h833a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-833a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text296" fill="black"><text id="kity_text_1502" text-rendering="inherit" font-size="12" dy=".8em" y="3484.5" x="541.5">当Sentinel发现主服务器有新的从服务器出现时, Sentinel除了会为这个新的从服务器创建相应的实力结构之外, 还会创建到从服务器的命令连接和订阅连接。</text></g></g><g id="minder_node300"><g id="node_expander296" display="none" style="cursor: pointer;"><path id="kity_path_2982" fill="white" stroke="gray" d="M1386.5,3542.5A6,6,0,1,1,1374.5,3542.5A6,6,0,1,1,1386.5,3542.5"></path><path id="kity_path_2983" fill="none" stroke="gray"></path></g><path id="node_outline297" fill="none" stroke="none" d="M793.5,3531.5h576a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-576a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text297" fill="black"><text id="kity_text_1504" text-rendering="inherit" font-size="12" dy=".8em" y="3536.5" x="798.5">在创建命令连接之后, Sentinel在默认情况下, 会以每十秒一次的频率通过命令连接向从服务器发送INFO命令</text></g></g><g id="minder_node301"><g id="node_expander299" style="cursor: pointer;"><path id="kity_path_2991" fill="white" stroke="gray" d="M1542.5,3603.5A6,6,0,1,1,1530.5,3603.5A6,6,0,1,1,1542.5,3603.5"></path><path id="kity_path_2992" fill="none" stroke="gray" d="M1532,3603.5L1541,3603.5"></path></g><path id="node_outline300" fill="none" stroke="none" d="M1383.5,3592.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text300" fill="black"><text id="kity_text_1511" text-rendering="inherit" font-size="12" dy=".8em" y="3597.5" x="1388.5">向主、从服务器发送信息</text></g></g><g id="minder_node302"><g id="node_expander298" display="none" style="cursor: pointer;"><path id="kity_path_2988" fill="white" stroke="gray" d="M1350.5,3603.5A6,6,0,1,1,1338.5,3603.5A6,6,0,1,1,1350.5,3603.5"></path><path id="kity_path_2989" fill="none" stroke="gray"></path></g><path id="node_outline299" fill="none" stroke="none" d="M348.5,3583.5h985a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-985a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text299" fill="black"><text id="kity_text_1508" text-rendering="inherit" font-size="12" dy=".8em" y="3588.5" x="353.5">在默认情况下, Sentinel会以每两秒一次的频率, 通过命令连接向所有被监视的主服务器和从服务器发送一下格式的命令:</text><text id="kity_text_1509" text-rendering="inherit" font-size="12" dy=".8em" y="3606.5" x="353.5">PuBLISH __sentinel__:hello "&lt;哨兵ip&gt;,&lt;哨兵port&gt;,&lt;哨兵runid&gt;,&lt;哨兵epoch即当前的配置纪元&gt;,&lt;主服务器名字&gt;,&lt;主服务器ip&gt;,&lt;主服务器port&gt;,&lt;主服务器epoch即当前的配置纪元&gt;"</text></g></g><g id="minder_node303"><g id="node_expander305" style="cursor: pointer;"><path id="kity_path_3009" fill="white" stroke="gray" d="M1542.5,3814.5A6,6,0,1,1,1530.5,3814.5A6,6,0,1,1,1542.5,3814.5"></path><path id="kity_path_3010" fill="none" stroke="gray" d="M1532,3814.5L1541,3814.5"></path></g><path id="node_outline306" fill="none" stroke="none" d="M1335.5,3803.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text306" fill="black"><text id="kity_text_1531" text-rendering="inherit" font-size="12" dy=".8em" y="3808.5" x="1340.5">接收来自主、从服务器的频道信息</text></g></g><g id="minder_node304"><g id="node_expander300" display="none" style="cursor: pointer;"><path id="kity_path_2994" fill="white" stroke="gray" d="M1302.5,3673.5A6,6,0,1,1,1290.5,3673.5A6,6,0,1,1,1302.5,3673.5"></path><path id="kity_path_2995" fill="none" stroke="gray"></path></g><path id="node_outline301" fill="none" stroke="none" d="M677.5,3653.5h608a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-608a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text301" fill="black"><text id="kity_text_1513" text-rendering="inherit" font-size="12" dy=".8em" y="3658.5" x="682.5">当Sentinel与一个主服务器或者从服务器建立起订阅连接之后, Sentinel就会通过订阅连接, 向服务器发送一下命令:</text><text id="kity_text_1514" text-rendering="inherit" font-size="12" dy=".8em" y="3676.5" x="682.5">SUBSCRIBE __sentinel__:hello</text></g></g><g id="minder_node305"><g id="node_expander301" display="none" style="cursor: pointer;"><path id="kity_path_2997" fill="white" stroke="gray" d="M1302.5,3761.5A6,6,0,1,1,1290.5,3761.5A6,6,0,1,1,1302.5,3761.5"></path><path id="kity_path_2998" fill="none" stroke="gray"></path></g><path id="node_outline302" fill="none" stroke="none" d="M325.5,3723.5h960a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-960a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z"></path><g id="node_text302" fill="black"><text id="kity_text_1516" text-rendering="inherit" font-size="12" dy=".8em" y="3728.5" x="330.5">当一个Sentinel从__sentinel__:hello频道收到一条信息时, Sentinel会对这条信息进行分析, 提取出信息中的Sentinel IP地址、Sentinel端口、Sentinel运行ID等八个参数, 并进行检查:&#xa0;</text><text id="kity_text_1517" text-rendering="inherit" font-size="12" dy=".8em" y="3746.5" x="330.5"></text><text id="kity_text_1518" text-rendering="inherit" font-size="12" dy=".8em" y="3764.5" x="330.5">* 如果信息中记录的Sentinel运行ID和接受信息的Sentinel运行ID相同, 那么说明这条信息是自己发送的, Sentinel将丢弃这条信息。</text><text id="kity_text_1519" text-rendering="inherit" font-size="12" dy=".8em" y="3782.5" x="330.5">* 相反, 如果判断是其他Sentinel发来的信息, 那么对Sentinel内部相应的主服务器的实例数据结构进行更新。</text></g></g><g id="minder_node306"><g id="node_expander303" style="cursor: pointer;"><path id="kity_path_3003" fill="white" stroke="gray" d="M1302.5,3858.5A6,6,0,1,1,1290.5,3858.5A6,6,0,1,1,1302.5,3858.5"></path><path id="kity_path_3004" fill="none" stroke="gray" d="M1292,3858.5L1301,3858.5"></path></g><path id="node_outline304" fill="none" stroke="none" d="M1100.5,3847.5h185a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-185a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text304" fill="black"><text id="kity_text_1525" text-rendering="inherit" font-size="12" dy=".8em" y="3852.5" x="1105.5">接受频道消息, 更新sentinels字典</text></g></g><g id="minder_node307"><g id="node_expander302" display="none" style="cursor: pointer;"><path id="kity_path_3000" fill="white" stroke="gray" d="M1067.5,3858.5A6,6,0,1,1,1055.5,3858.5A6,6,0,1,1,1067.5,3858.5"></path><path id="kity_path_3001" fill="none" stroke="gray"></path></g><path id="node_outline303" fill="none" stroke="none" d="M698.5,3829.5h352a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-352a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text303" fill="black"><text id="kity_text_1521" text-rendering="inherit" font-size="12" dy=".8em" y="3834.5" x="703.5">字典里保存了所有监视这个主服务器的Sentinel信息(包括自己)。</text><text id="kity_text_1522" text-rendering="inherit" font-size="12" dy=".8em" y="3852.5" x="703.5">key格式为&lt;ip:port&gt;</text><text id="kity_text_1523" text-rendering="inherit" font-size="12" dy=".8em" y="3870.5" x="703.5">value是Sentinel的实例结构</text></g></g><g id="minder_node308"><g id="node_expander304" display="none" style="cursor: pointer;"><path id="kity_path_3006" fill="white" stroke="gray" d="M1302.5,3946.5A6,6,0,1,1,1290.5,3946.5A6,6,0,1,1,1302.5,3946.5"></path><path id="kity_path_3007" fill="none" stroke="gray"></path></g><path id="node_outline305" fill="none" stroke="none" d="M291.5,3917.5h994a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-994a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text305" fill="black"><text id="kity_text_1527" text-rendering="inherit" font-size="12" dy=".8em" y="3922.5" x="296.5">Sentinel通过频道信息发现一个新的Sentinel时, 还会创建一个连向新Sentinel的命令连接。而新Sentinel同样会创建连向这个Sentinel的命令连接。</text><text id="kity_text_1528" text-rendering="inherit" font-size="12" dy=".8em" y="3940.5" x="296.5"></text><text id="kity_text_1529" text-rendering="inherit" font-size="12" dy=".8em" y="3958.5" x="296.5">Sentinel之间不会创建订阅连接。因为Sentinel需要通过接受主服务器或从服务器发来的频道信息来发现未知的新Sentinel。而相互已知的Sentinel只要使用命令连接来进行通信就足够了。</text></g></g><g id="minder_node309"><g id="node_expander309" style="cursor: pointer;"><path id="kity_path_3021" fill="white" stroke="gray" d="M1542.5,4086.5A6,6,0,1,1,1530.5,4086.5A6,6,0,1,1,1542.5,4086.5"></path><path id="kity_path_3022" fill="none" stroke="gray" d="M1532,4086.5L1541,4086.5"></path></g><path id="node_outline310" fill="none" stroke="none" d="M1419.5,4075.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text310" fill="black"><text id="kity_text_1541" text-rendering="inherit" font-size="12" dy=".8em" y="4080.5" x="1424.5">检测主观下线状态</text></g></g><g id="minder_node310"><g id="node_expander306" display="none" style="cursor: pointer;"><path id="kity_path_3012" fill="white" stroke="gray" d="M1386.5,4016.5A6,6,0,1,1,1374.5,4016.5A6,6,0,1,1,1386.5,4016.5"></path><path id="kity_path_3013" fill="none" stroke="gray"></path></g><path id="node_outline307" fill="none" stroke="none" d="M576.5,4005.5h793a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-793a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text307" fill="black"><text id="kity_text_1533" text-rendering="inherit" font-size="12" dy=".8em" y="4010.5" x="581.5">在默认情况下, Sentinel会以每秒一次的频率向所有与它建立命令连接的实例(主服务器、从服务器、其他Sentinel)发送PING命令来判断实例是否在线</text></g></g><g id="minder_node311"><g id="node_expander307" display="none" style="cursor: pointer;"><path id="kity_path_3015" fill="white" stroke="gray" d="M1386.5,4068.5A6,6,0,1,1,1374.5,4068.5A6,6,0,1,1,1386.5,4068.5"></path><path id="kity_path_3016" fill="none" stroke="gray"></path></g><path id="node_outline308" fill="none" stroke="none" d="M1053.5,4057.5h316a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-316a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text308" fill="black"><text id="kity_text_1535" text-rendering="inherit" font-size="12" dy=".8em" y="4062.5" x="1058.5">PING有效回复: +PONG、 -LOADING、 -MASTERDOWN</text></g></g><g id="minder_node312"><g id="node_expander308" display="none" style="cursor: pointer;"><path id="kity_path_3018" fill="white" stroke="gray" d="M1386.5,4138.5A6,6,0,1,1,1374.5,4138.5A6,6,0,1,1,1386.5,4138.5"></path><path id="kity_path_3019" fill="none" stroke="gray"></path></g><path id="node_outline309" fill="none" stroke="none" d="M213.5,4109.5h1156a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-1156a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text309" fill="black"><text id="kity_text_1537" text-rendering="inherit" font-size="12" dy=".8em" y="4114.5" x="218.5">Sentinel配置文件有down-after-milliseconds选项。以此来判定主服务器、从服务器、其他Sentinel的主观下线状态。</text><text id="kity_text_1538" text-rendering="inherit" font-size="12" dy=".8em" y="4132.5" x="218.5"></text><text id="kity_text_1539" text-rendering="inherit" font-size="12" dy=".8em" y="4150.5" x="218.5">如果一个实例在down-after-milliseconds毫秒内, 连续向Sentinel返回无效回复, 那么Sentinel会修改这个实例对应的实例结构, 在结构的flags属性中打开SRI_S_DOWN表示, 以此来表示这个实例已经进入主观下线状态。</text></g></g><g id="minder_node313"><g id="node_expander312" style="cursor: pointer;"><path id="kity_path_3030" fill="white" stroke="gray" d="M1542.5,4243.5A6,6,0,1,1,1530.5,4243.5A6,6,0,1,1,1542.5,4243.5"></path><path id="kity_path_3031" fill="none" stroke="gray" d="M1532,4243.5L1541,4243.5"></path></g><path id="node_outline313" fill="none" stroke="none" d="M1419.5,4232.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text313" fill="black"><text id="kity_text_1548" text-rendering="inherit" font-size="12" dy=".8em" y="4237.5" x="1424.5">检测客观下线状态</text></g></g><g id="minder_node314"><g id="node_expander310" display="none" style="cursor: pointer;"><path id="kity_path_3024" fill="white" stroke="gray" d="M1386.5,4217.5A6,6,0,1,1,1374.5,4217.5A6,6,0,1,1,1386.5,4217.5"></path><path id="kity_path_3025" fill="none" stroke="gray"></path></g><path id="node_outline311" fill="none" stroke="none" d="M620.5,4197.5h749a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-749a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text311" fill="black"><text id="kity_text_1543" text-rendering="inherit" font-size="12" dy=".8em" y="4202.5" x="625.5">当Sentinel讲一个主服务器判断为主观下线后, 为了确认这个主服务器是否真的下线了, 会向同样监视这一主服务器的其他Sentinel进行询问。</text><text id="kity_text_1544" text-rendering="inherit" font-size="12" dy=".8em" y="4220.5" x="625.5">发送SENTINEL is-master-down-by-addr &lt;ip&gt; &lt;port&gt; &lt;current_epoch&gt; &lt;哨兵的runid, 如果这里表示主服务器, 那么这里是*&gt;</text></g></g><g id="minder_node315"><g id="node_expander311" display="none" style="cursor: pointer;"><path id="kity_path_3027" fill="white" stroke="gray" d="M1386.5,4278.5A6,6,0,1,1,1374.5,4278.5A6,6,0,1,1,1386.5,4278.5"></path><path id="kity_path_3028" fill="none" stroke="gray"></path></g><path id="node_outline312" fill="none" stroke="none" d="M568.5,4267.5h801a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-801a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text312" fill="black"><text id="kity_text_1546" text-rendering="inherit" font-size="12" dy=".8em" y="4272.5" x="573.5">根据is-master-down-by-addr命令的回复, 当一定数量的Sentinel同意主服务器下线时, Sentinel会将实例数据结构里的flags属性标记为SRI_O_DOWN</text></g></g><g id="minder_node316"><g id="node_expander315" style="cursor: pointer;"><path id="kity_path_3039" fill="white" stroke="gray" d="M1542.5,4356.5A6,6,0,1,1,1530.5,4356.5A6,6,0,1,1,1542.5,4356.5"></path><path id="kity_path_3040" fill="none" stroke="gray" d="M1532,4356.5L1541,4356.5"></path></g><path id="node_outline316" fill="none" stroke="none" d="M1443.5,4345.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text316" fill="black"><text id="kity_text_1554" text-rendering="inherit" font-size="12" dy=".8em" y="4350.5" x="1448.5">选举领头哨兵</text></g></g><g id="minder_node317"><g id="node_expander313" display="none" style="cursor: pointer;"><path id="kity_path_3033" fill="white" stroke="gray" d="M1410.5,4330.5A6,6,0,1,1,1398.5,4330.5A6,6,0,1,1,1410.5,4330.5"></path><path id="kity_path_3034" fill="none" stroke="gray"></path></g><path id="node_outline314" fill="none" stroke="none" d="M509.5,4319.5h884a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-884a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text314" fill="black"><text id="kity_text_1550" text-rendering="inherit" font-size="12" dy=".8em" y="4324.5" x="514.5">当一个主服务器被判断为客观下线时, 见识这个下线主服务的各个Sentinel会进行协商, 选举出一个零头Sentinel, 并由领头Sentinel对下线主服务器执行故障转移操作。</text></g></g><g id="minder_node318"><g id="node_expander314" display="none" style="cursor: pointer;"><path id="kity_path_3036" fill="white" stroke="gray" d="M1410.5,4382.5A6,6,0,1,1,1398.5,4382.5A6,6,0,1,1,1410.5,4382.5"></path><path id="kity_path_3037" fill="none" stroke="gray"></path></g><path id="node_outline315" fill="none" stroke="none" d="M1220.5,4371.5h173a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-173a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text315" fill="black"><text id="kity_text_1552" text-rendering="inherit" font-size="12" dy=".8em" y="4376.5" x="1225.5">Redis选举领头Sentinel的规则:</text></g></g><g id="minder_node319"><g id="node_expander323" style="cursor: pointer;"><path id="kity_path_3063" fill="white" stroke="gray" d="M1542.5,4525.5A6,6,0,1,1,1530.5,4525.5A6,6,0,1,1,1542.5,4525.5"></path><path id="kity_path_3064" fill="none" stroke="gray" d="M1532,4525.5L1541,4525.5"></path></g><path id="node_outline324" fill="none" stroke="none" d="M1467.5,4514.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text324" fill="black"><text id="kity_text_1570" text-rendering="inherit" font-size="12" dy=".8em" y="4519.5" x="1472.5">故障转移</text></g></g><g id="minder_node320"><g id="node_expander318" style="cursor: pointer;"><path id="kity_path_3048" fill="white" stroke="gray" d="M1434.5,4460.5A6,6,0,1,1,1422.5,4460.5A6,6,0,1,1,1434.5,4460.5"></path><path id="kity_path_3049" fill="none" stroke="gray" d="M1424,4460.5L1433,4460.5"></path></g><path id="node_outline319" fill="none" stroke="none" d="M1203.5,4449.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text319" fill="black"><text id="kity_text_1560" text-rendering="inherit" font-size="12" dy=".8em" y="4454.5" x="1208.5">从服务器中挑选出一个转换为主服务器</text></g></g><g id="minder_node321"><g id="node_expander316" display="none" style="cursor: pointer;"><path id="kity_path_3042" fill="white" stroke="gray" d="M1170.5,4434.5A6,6,0,1,1,1158.5,4434.5A6,6,0,1,1,1170.5,4434.5"></path><path id="kity_path_3043" fill="none" stroke="gray"></path></g><path id="node_outline317" fill="none" stroke="none" d="M714.5,4423.5h439a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-439a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text317" fill="black"><text id="kity_text_1556" text-rendering="inherit" font-size="12" dy=".8em" y="4428.5" x="719.5">领头Sentinel向新主服务器发送SLAVEOF no one命令将从服务器转换为主服务器</text></g></g><g id="minder_node322"><g id="node_expander317" display="none" style="cursor: pointer;"><path id="kity_path_3045" fill="white" stroke="gray" d="M1170.5,4486.5A6,6,0,1,1,1158.5,4486.5A6,6,0,1,1,1170.5,4486.5"></path><path id="kity_path_3046" fill="none" stroke="gray"></path></g><path id="node_outline318" fill="none" stroke="none" d="M616.5,4475.5h537a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-537a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text318" fill="black"><text id="kity_text_1558" text-rendering="inherit" font-size="12" dy=".8em" y="4480.5" x="621.5">领头Sentinel每秒一次向新主服务器发送INFO命令, 观察角色(role)信息是否从slave变为了master。</text></g></g><g id="minder_node323"><g id="node_expander320" style="cursor: pointer;"><path id="kity_path_3054" fill="white" stroke="gray" d="M1434.5,4538.5A6,6,0,1,1,1422.5,4538.5A6,6,0,1,1,1434.5,4538.5"></path><path id="kity_path_3055" fill="none" stroke="gray" d="M1424,4538.5L1433,4538.5"></path></g><path id="node_outline321" fill="none" stroke="none" d="M1203.5,4527.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text321" fill="black"><text id="kity_text_1564" text-rendering="inherit" font-size="12" dy=".8em" y="4532.5" x="1208.5">让所有从服务器改为复制新的主服务器</text></g></g><g id="minder_node324"><g id="node_expander319" display="none" style="cursor: pointer;"><path id="kity_path_3051" fill="white" stroke="gray" d="M1170.5,4538.5A6,6,0,1,1,1158.5,4538.5A6,6,0,1,1,1170.5,4538.5"></path><path id="kity_path_3052" fill="none" stroke="gray"></path></g><path id="node_outline320" fill="none" stroke="none" d="M866.5,4527.5h287a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-287a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text320" fill="black"><text id="kity_text_1562" text-rendering="inherit" font-size="12" dy=".8em" y="4532.5" x="871.5">领头Sentinel向其他所有从服务器发送SLAVEOF命令</text></g></g><g id="minder_node325"><g id="node_expander322" style="cursor: pointer;"><path id="kity_path_3060" fill="white" stroke="gray" d="M1434.5,4590.5A6,6,0,1,1,1422.5,4590.5A6,6,0,1,1,1434.5,4590.5"></path><path id="kity_path_3061" fill="none" stroke="gray" d="M1424,4590.5L1433,4590.5"></path></g><path id="node_outline323" fill="none" stroke="none" d="M1263.5,4579.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text323" fill="black"><text id="kity_text_1568" text-rendering="inherit" font-size="12" dy=".8em" y="4584.5" x="1268.5">旧主服务器设置为从服务器</text></g></g><g id="minder_node326"><g id="node_expander321" display="none" style="cursor: pointer;"><path id="kity_path_3057" fill="white" stroke="gray" d="M1230.5,4590.5A6,6,0,1,1,1218.5,4590.5A6,6,0,1,1,1230.5,4590.5"></path><path id="kity_path_3058" fill="none" stroke="gray"></path></g><path id="node_outline322" fill="none" stroke="none" d="M818.5,4579.5h395a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-395a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text322" fill="black"><text id="kity_text_1566" text-rendering="inherit" font-size="12" dy=".8em" y="4584.5" x="823.5">旧服务器上线时, 领头Sentinel会发送SLAVEOF命令, 让他成为从服务器。</text></g></g><g id="minder_node327"><g id="node_expander346" style="cursor: pointer;"><path id="kity_path_3132" fill="white" stroke="gray" d="M1626.5,6433.5A6,6,0,1,1,1614.5,6433.5A6,6,0,1,1,1626.5,6433.5"></path><path id="kity_path_3133" fill="none" stroke="gray" d="M1616,6433.5L1625,6433.5"></path></g><path id="node_outline347" fill="none" stroke="none" d="M1575.5,6422.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text347" fill="black"><text id="kity_text_1722" text-rendering="inherit" font-family="宋体,SimSun" font-size="12" dy=".8em" y="6427.5" x="1580.5">集群</text></g></g><g id="minder_node328"><g id="node_expander331" style="cursor: pointer;"><path id="kity_path_3087" fill="white" stroke="gray" d="M1542.5,5484.5A6,6,0,1,1,1530.5,5484.5A6,6,0,1,1,1542.5,5484.5"></path><path id="kity_path_3088" fill="none" stroke="gray" d="M1532,5484.5L1541,5484.5"></path></g><path id="node_outline332" fill="none" stroke="none" d="M1491.5,5473.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text332" fill="black"><text id="kity_text_1665" text-rendering="inherit" font-size="12" dy=".8em" y="5478.5" x="1496.5">节点</text></g></g><g id="minder_node329"><g id="node_expander325" display="none" style="cursor: pointer;"><path id="kity_path_3069" fill="white" stroke="gray" d="M1458.5,4643.5A6,6,0,1,1,1446.5,4643.5A6,6,0,1,1,1458.5,4643.5"></path><path id="kity_path_3070" fill="none" stroke="gray"></path></g><path id="node_outline326" fill="none" stroke="none" d="M1135.5,4632.5h306a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-306a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text326" fill="black"><text id="kity_text_1574" text-rendering="inherit" font-size="12" dy=".8em" y="4637.5" x="1140.5">可以使用CLUSTER MEET &lt;ip&gt; &lt;port&gt; 命令连接各个节点</text></g></g><g id="minder_node330"><g id="node_expander326" display="none" style="cursor: pointer;"><path id="kity_path_3072" fill="white" stroke="gray" d="M1458.5,4884.5A6,6,0,1,1,1446.5,4884.5A6,6,0,1,1,1458.5,4884.5"></path><path id="kity_path_3073" fill="none" stroke="gray"></path></g><path id="node_outline327" fill="none" stroke="none" d="M1061.5,4684.5h380a5,5,0,0,1,5,5v390a5,5,0,0,1,-5,5h-380a5,5,0,0,1,-5,-5v-390a5,5,0,0,1,5,-5z"></path><g id="node_text327" fill="black"><text id="kity_text_1576" text-rendering="inherit" font-size="12" dy=".8em" y="4689.5" x="1066.5">每个节点都保存着一个clusterState结构, </text><text id="kity_text_1577" text-rendering="inherit" font-size="12" dy=".8em" y="4707.5" x="1066.5">这个结构记录了在当前节点的视角下, 集群目前所处的状态:</text><text id="kity_text_1578" text-rendering="inherit" font-size="12" dy=".8em" y="4725.5" x="1066.5"></text><text id="kity_text_1579" text-rendering="inherit" font-size="12" dy=".8em" y="4743.5" x="1066.5">typedef struct clusterState {</text><text id="kity_text_1580" text-rendering="inherit" font-size="12" dy=".8em" y="4761.5" x="1066.5">.&#xa0; &#xa0; // 指向当前节点的指针</text><text id="kity_text_1581" text-rendering="inherit" font-size="12" dy=".8em" y="4779.5" x="1066.5">.&#xa0; &#xa0; clusterNode *myself;</text><text id="kity_text_1582" text-rendering="inherit" font-size="12" dy=".8em" y="4797.5" x="1066.5"></text><text id="kity_text_1583" text-rendering="inherit" font-size="12" dy=".8em" y="4815.5" x="1066.5">.&#xa0; &#xa0; // 集群当前的配置纪元, 用于实现故障转移</text><text id="kity_text_1584" text-rendering="inherit" font-size="12" dy=".8em" y="4833.5" x="1066.5">.&#xa0; &#xa0; uint64_t currentEpoch;</text><text id="kity_text_1585" text-rendering="inherit" font-size="12" dy=".8em" y="4851.5" x="1066.5"></text><text id="kity_text_1586" text-rendering="inherit" font-size="12" dy=".8em" y="4869.5" x="1066.5">.&#xa0; &#xa0; // 集群当前的状态: 是在线还是下线</text><text id="kity_text_1587" text-rendering="inherit" font-size="12" dy=".8em" y="4887.5" x="1066.5">.&#xa0; &#xa0; int state;</text><text id="kity_text_1588" text-rendering="inherit" font-size="12" dy=".8em" y="4905.5" x="1066.5"></text><text id="kity_text_1589" text-rendering="inherit" font-size="12" dy=".8em" y="4923.5" x="1066.5">.&#xa0; &#xa0; // 集群中至少处理着一个槽的节点的数量</text><text id="kity_text_1590" text-rendering="inherit" font-size="12" dy=".8em" y="4941.5" x="1066.5">.&#xa0; &#xa0; int size;</text><text id="kity_text_1591" text-rendering="inherit" font-size="12" dy=".8em" y="4959.5" x="1066.5"></text><text id="kity_text_1592" text-rendering="inherit" font-size="12" dy=".8em" y="4977.5" x="1066.5">.&#xa0; &#xa0; // 集群节点名单(包括myself节点)</text><text id="kity_text_1593" text-rendering="inherit" font-size="12" dy=".8em" y="4995.5" x="1066.5">.&#xa0; &#xa0; // 字典的键为节点的名字, 字典的值为节点对应的clusterNode结构</text><text id="kity_text_1594" text-rendering="inherit" font-size="12" dy=".8em" y="5013.5" x="1066.5">.&#xa0; &#xa0; dict *nodes;</text><text id="kity_text_1595" text-rendering="inherit" font-size="12" dy=".8em" y="5031.5" x="1066.5"></text><text id="kity_text_1596" text-rendering="inherit" font-size="12" dy=".8em" y="5049.5" x="1066.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1597" text-rendering="inherit" font-size="12" dy=".8em" y="5067.5" x="1066.5">} clusterState;</text></g></g><g id="minder_node331"><g id="node_expander327" display="none" style="cursor: pointer;"><path id="kity_path_3075" fill="white" stroke="gray" d="M1458.5,5368.5A6,6,0,1,1,1446.5,5368.5A6,6,0,1,1,1458.5,5368.5"></path><path id="kity_path_3076" fill="none" stroke="gray"></path></g><path id="node_outline328" fill="none" stroke="none" d="M1069.5,5114.5h372a5,5,0,0,1,5,5v498a5,5,0,0,1,-5,5h-372a5,5,0,0,1,-5,-5v-498a5,5,0,0,1,5,-5z"></path><g id="node_text328" fill="black"><text id="kity_text_1599" text-rendering="inherit" font-size="12" dy=".8em" y="5119.5" x="1074.5">集群节点数据结构</text><text id="kity_text_1600" text-rendering="inherit" font-size="12" dy=".8em" y="5137.5" x="1074.5"></text><text id="kity_text_1601" text-rendering="inherit" font-size="12" dy=".8em" y="5155.5" x="1074.5">struct clusterNode {</text><text id="kity_text_1602" text-rendering="inherit" font-size="12" dy=".8em" y="5173.5" x="1074.5">.&#xa0; &#xa0; // 创建节点的时间</text><text id="kity_text_1603" text-rendering="inherit" font-size="12" dy=".8em" y="5191.5" x="1074.5">.&#xa0; &#xa0; mstime_t ctime;</text><text id="kity_text_1604" text-rendering="inherit" font-size="12" dy=".8em" y="5209.5" x="1074.5"></text><text id="kity_text_1605" text-rendering="inherit" font-size="12" dy=".8em" y="5227.5" x="1074.5">.&#xa0; &#xa0; // 节点的名字, 由40个十六进制字符组成</text><text id="kity_text_1606" text-rendering="inherit" font-size="12" dy=".8em" y="5245.5" x="1074.5">.&#xa0; &#xa0; char name[REDIS_CLUSTER_NSMELEN]</text><text id="kity_text_1607" text-rendering="inherit" font-size="12" dy=".8em" y="5263.5" x="1074.5"></text><text id="kity_text_1608" text-rendering="inherit" font-size="12" dy=".8em" y="5281.5" x="1074.5">.&#xa0; &#xa0; // 节点标识</text><text id="kity_text_1609" text-rendering="inherit" font-size="12" dy=".8em" y="5299.5" x="1074.5">.&#xa0; &#xa0; // 使用各种不同的标示值记录节点的角色(比如主节点或者从节点)</text><text id="kity_text_1610" text-rendering="inherit" font-size="12" dy=".8em" y="5317.5" x="1074.5">.&#xa0; &#xa0; // 以及节点目前所处的状态(比如在线或者下线)</text><text id="kity_text_1611" text-rendering="inherit" font-size="12" dy=".8em" y="5335.5" x="1074.5">.&#xa0; &#xa0; int flags;</text><text id="kity_text_1612" text-rendering="inherit" font-size="12" dy=".8em" y="5353.5" x="1074.5"></text><text id="kity_text_1613" text-rendering="inherit" font-size="12" dy=".8em" y="5371.5" x="1074.5">.&#xa0; &#xa0; // 节点当前的配置纪元, 用于实现故障转移</text><text id="kity_text_1614" text-rendering="inherit" font-size="12" dy=".8em" y="5389.5" x="1074.5">.&#xa0; &#xa0; uint64_t configEpoch;</text><text id="kity_text_1615" text-rendering="inherit" font-size="12" dy=".8em" y="5407.5" x="1074.5"></text><text id="kity_text_1616" text-rendering="inherit" font-size="12" dy=".8em" y="5425.5" x="1074.5">.&#xa0; &#xa0; // 节点的IP地址</text><text id="kity_text_1617" text-rendering="inherit" font-size="12" dy=".8em" y="5443.5" x="1074.5">.&#xa0; &#xa0; char ip[REDIS_IP_STR_LEN]</text><text id="kity_text_1618" text-rendering="inherit" font-size="12" dy=".8em" y="5461.5" x="1074.5"></text><text id="kity_text_1619" text-rendering="inherit" font-size="12" dy=".8em" y="5479.5" x="1074.5">.&#xa0; &#xa0; // 节点的端口地址</text><text id="kity_text_1620" text-rendering="inherit" font-size="12" dy=".8em" y="5497.5" x="1074.5">.&#xa0; &#xa0; int port;</text><text id="kity_text_1621" text-rendering="inherit" font-size="12" dy=".8em" y="5515.5" x="1074.5"></text><text id="kity_text_1622" text-rendering="inherit" font-size="12" dy=".8em" y="5533.5" x="1074.5">.&#xa0; &#xa0; // 保存连接节点所需的有关信息</text><text id="kity_text_1623" text-rendering="inherit" font-size="12" dy=".8em" y="5551.5" x="1074.5">.&#xa0; &#xa0; clusterLink *link;</text><text id="kity_text_1624" text-rendering="inherit" font-size="12" dy=".8em" y="5569.5" x="1074.5"></text><text id="kity_text_1625" text-rendering="inherit" font-size="12" dy=".8em" y="5587.5" x="1074.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1626" text-rendering="inherit" font-size="12" dy=".8em" y="5605.5" x="1074.5">};</text></g></g><g id="minder_node332"><g id="node_expander328" display="none" style="cursor: pointer;"><path id="kity_path_3078" fill="white" stroke="gray" d="M1458.5,5870.5A6,6,0,1,1,1446.5,5870.5A6,6,0,1,1,1458.5,5870.5"></path><path id="kity_path_3079" fill="none" stroke="gray"></path></g><path id="node_outline329" fill="none" stroke="none" d="M1068.5,5652.5h373a5,5,0,0,1,5,5v426a5,5,0,0,1,-5,5h-373a5,5,0,0,1,-5,-5v-426a5,5,0,0,1,5,-5z"></path><g id="node_text329" fill="black"><text id="kity_text_1628" text-rendering="inherit" font-size="12" dy=".8em" y="5657.5" x="1073.5">clusterNode结构体重的clusterLink结构如下所示, </text><text id="kity_text_1629" text-rendering="inherit" font-size="12" dy=".8em" y="5675.5" x="1073.5">保存了连接节点所需的有关信息:</text><text id="kity_text_1630" text-rendering="inherit" font-size="12" dy=".8em" y="5693.5" x="1073.5"></text><text id="kity_text_1631" text-rendering="inherit" font-size="12" dy=".8em" y="5711.5" x="1073.5">typedef struct clusterLink {</text><text id="kity_text_1632" text-rendering="inherit" font-size="12" dy=".8em" y="5729.5" x="1073.5">.&#xa0; &#xa0; // 连接的创建时间</text><text id="kity_text_1633" text-rendering="inherit" font-size="12" dy=".8em" y="5747.5" x="1073.5">.&#xa0; &#xa0; &#xa0;mstime_t ctime;</text><text id="kity_text_1634" text-rendering="inherit" font-size="12" dy=".8em" y="5765.5" x="1073.5"></text><text id="kity_text_1635" text-rendering="inherit" font-size="12" dy=".8em" y="5783.5" x="1073.5">.&#xa0; &#xa0; // TCP套接字描述符</text><text id="kity_text_1636" text-rendering="inherit" font-size="12" dy=".8em" y="5801.5" x="1073.5">.&#xa0; &#xa0; int fd;</text><text id="kity_text_1637" text-rendering="inherit" font-size="12" dy=".8em" y="5819.5" x="1073.5"></text><text id="kity_text_1638" text-rendering="inherit" font-size="12" dy=".8em" y="5837.5" x="1073.5">.&#xa0; &#xa0; // 输出缓冲区, 保存着等待发送给其他节点的消息(message)</text><text id="kity_text_1639" text-rendering="inherit" font-size="12" dy=".8em" y="5855.5" x="1073.5">.&#xa0; &#xa0; sds sndbuf;</text><text id="kity_text_1640" text-rendering="inherit" font-size="12" dy=".8em" y="5873.5" x="1073.5"></text><text id="kity_text_1641" text-rendering="inherit" font-size="12" dy=".8em" y="5891.5" x="1073.5">.&#xa0; &#xa0; // 输入缓冲区, 保存着从其他节点接收到的消息</text><text id="kity_text_1642" text-rendering="inherit" font-size="12" dy=".8em" y="5909.5" x="1073.5">.&#xa0; &#xa0; sds rcvbuf;</text><text id="kity_text_1643" text-rendering="inherit" font-size="12" dy=".8em" y="5927.5" x="1073.5"></text><text id="kity_text_1644" text-rendering="inherit" font-size="12" dy=".8em" y="5945.5" x="1073.5">.&#xa0; &#xa0; // 与这个节点相关联的节点, 如果没有的话就为NULL</text><text id="kity_text_1645" text-rendering="inherit" font-size="12" dy=".8em" y="5963.5" x="1073.5">.&#xa0; &#xa0; strucct clusterNode *node;</text><text id="kity_text_1646" text-rendering="inherit" font-size="12" dy=".8em" y="5981.5" x="1073.5"></text><text id="kity_text_1647" text-rendering="inherit" font-size="12" dy=".8em" y="5999.5" x="1073.5">} clusterLink;</text><text id="kity_text_1648" text-rendering="inherit" font-size="12" dy=".8em" y="6017.5" x="1073.5"></text><text id="kity_text_1649" text-rendering="inherit" font-size="12" dy=".8em" y="6035.5" x="1073.5">clusterLInk和redisClient都有维护套接字描述符和输入、输出缓冲区, </text><text id="kity_text_1650" text-rendering="inherit" font-size="12" dy=".8em" y="6053.5" x="1073.5">区别在于: redisClient结构中的套接字和缓冲区是用于连接客户端的, </text><text id="kity_text_1651" text-rendering="inherit" font-size="12" dy=".8em" y="6071.5" x="1073.5">而clusterLink结构中的套接字和缓冲区是用于连接节点的。</text></g></g><g id="minder_node333"><g id="node_expander329" display="none" style="cursor: pointer;"><path id="kity_path_3081" fill="white" stroke="gray" d="M1458.5,6192.5A6,6,0,1,1,1446.5,6192.5A6,6,0,1,1,1458.5,6192.5"></path><path id="kity_path_3082" fill="none" stroke="gray"></path></g><path id="node_outline330" fill="none" stroke="none" d="M768.5,6118.5h673a5,5,0,0,1,5,5v138a5,5,0,0,1,-5,5h-673a5,5,0,0,1,-5,-5v-138a5,5,0,0,1,5,-5z"></path><g id="node_text330" fill="black"><text id="kity_text_1653" text-rendering="inherit" font-size="12" dy=".8em" y="6123.5" x="773.5">CLUSTER MEET命令的实现。</text><text id="kity_text_1654" text-rendering="inherit" font-size="12" dy=".8em" y="6141.5" x="773.5">客户端向A发送CLUSTER MEET命令, 让A将B节点添加到A所在的集群里:</text><text id="kity_text_1655" text-rendering="inherit" font-size="12" dy=".8em" y="6159.5" x="773.5">1. 节点A会为节点B创建一个clusterNode结构</text><text id="kity_text_1656" text-rendering="inherit" font-size="12" dy=".8em" y="6177.5" x="773.5">2. A节点根据CLUSTER MEET命令给定的IP地址和端口, 向节点B发送一条MEET消息</text><text id="kity_text_1657" text-rendering="inherit" font-size="12" dy=".8em" y="6195.5" x="773.5">3. 节点B收到MEET消息后, 节点B会为节点A创建一个clusterNode结构, 并将该结构添加到自己的clusterState.nodes字典里面</text><text id="kity_text_1658" text-rendering="inherit" font-size="12" dy=".8em" y="6213.5" x="773.5">4. 之后节点B向节点A发送一条PONG消息</text><text id="kity_text_1659" text-rendering="inherit" font-size="12" dy=".8em" y="6231.5" x="773.5">5. 节点A向 节点B发送一条PING消息</text><text id="kity_text_1660" text-rendering="inherit" font-size="12" dy=".8em" y="6249.5" x="773.5">6. 节点B将接收到PING消息, 通过这条PING消息, 节点B可以知道节点A已经成功接收到了自己返回的PONG消息, 握手完成</text></g></g><g id="minder_node334"><g id="node_expander330" display="none" style="cursor: pointer;"><path id="kity_path_3084" fill="white" stroke="gray" d="M1458.5,6316.5A6,6,0,1,1,1446.5,6316.5A6,6,0,1,1,1458.5,6316.5"></path><path id="kity_path_3085" fill="none" stroke="gray"></path></g><path id="node_outline331" fill="none" stroke="none" d="M841.5,6296.5h600a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-600a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text331" fill="black"><text id="kity_text_1662" text-rendering="inherit" font-size="12" dy=".8em" y="6301.5" x="846.5">握手成功后, 节点A会将节点B的信息通过Gossip协议传播给集群中的其他节点, 让其他节点也与节点B进行握手。</text><text id="kity_text_1663" text-rendering="inherit" font-size="12" dy=".8em" y="6319.5" x="846.5">最终经过一段时间后, 节点B会被集群中的所有节点认识。</text></g></g><g id="minder_node335"><g id="node_expander339" style="cursor: pointer;"><path id="kity_path_3111" fill="white" stroke="gray" d="M1542.5,6679.5A6,6,0,1,1,1530.5,6679.5A6,6,0,1,1,1542.5,6679.5"></path><path id="kity_path_3112" fill="none" stroke="gray" d="M1532,6679.5L1541,6679.5"></path></g><path id="node_outline340" fill="none" stroke="none" d="M1479.5,6668.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text340" fill="black"><text id="kity_text_1703" text-rendering="inherit" font-size="12" dy=".8em" y="6673.5" x="1484.5">槽指派</text></g></g><g id="minder_node336"><g id="node_expander332" display="none" style="cursor: pointer;"><path id="kity_path_3090" fill="white" stroke="gray" d="M1446.5,6404.5A6,6,0,1,1,1434.5,6404.5A6,6,0,1,1,1446.5,6404.5"></path><path id="kity_path_3091" fill="none" stroke="gray"></path></g><path id="node_outline333" fill="none" stroke="none" d="M1065.5,6366.5h364a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-364a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z"></path><g id="node_text333" fill="black"><text id="kity_text_1667" text-rendering="inherit" font-size="12" dy=".8em" y="6371.5" x="1070.5">集群的整个数据库被分为16384个槽(slot)。</text><text id="kity_text_1668" text-rendering="inherit" font-size="12" dy=".8em" y="6389.5" x="1070.5"></text><text id="kity_text_1669" text-rendering="inherit" font-size="12" dy=".8em" y="6407.5" x="1070.5">当数据库中的16384个槽都有节点在处理时, 集群处于上线状态; </text><text id="kity_text_1670" text-rendering="inherit" font-size="12" dy=".8em" y="6425.5" x="1070.5">如果数据库中有任何一个槽没有得到处理, 那么集群处于下线状态。</text></g></g><g id="minder_node337"><g id="node_expander333" display="none" style="cursor: pointer;"><path id="kity_path_3093" fill="white" stroke="gray" d="M1446.5,6582.5A6,6,0,1,1,1434.5,6582.5A6,6,0,1,1,1446.5,6582.5"></path><path id="kity_path_3094" fill="none" stroke="gray"></path></g><path id="node_outline334" fill="none" stroke="none" d="M987.5,6472.5h442a5,5,0,0,1,5,5v210a5,5,0,0,1,-5,5h-442a5,5,0,0,1,-5,-5v-210a5,5,0,0,1,5,-5z"></path><g id="node_text334" fill="black"><text id="kity_text_1672" text-rendering="inherit" font-size="12" dy=".8em" y="6477.5" x="992.5">struct clusterNode {</text><text id="kity_text_1673" text-rendering="inherit" font-size="12" dy=".8em" y="6495.5" x="992.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1674" text-rendering="inherit" font-size="12" dy=".8em" y="6513.5" x="992.5">.&#xa0; &#xa0; unsigned char slots[16384/8];</text><text id="kity_text_1675" text-rendering="inherit" font-size="12" dy=".8em" y="6531.5" x="992.5"></text><text id="kity_text_1676" text-rendering="inherit" font-size="12" dy=".8em" y="6549.5" x="992.5">.&#xa0; &#xa0; // 处理槽的数量(即slots数组中有多少个1)</text><text id="kity_text_1677" text-rendering="inherit" font-size="12" dy=".8em" y="6567.5" x="992.5">.&#xa0; &#xa0; int numslots;</text><text id="kity_text_1678" text-rendering="inherit" font-size="12" dy=".8em" y="6585.5" x="992.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1679" text-rendering="inherit" font-size="12" dy=".8em" y="6603.5" x="992.5">};</text><text id="kity_text_1680" text-rendering="inherit" font-size="12" dy=".8em" y="6621.5" x="992.5"></text><text id="kity_text_1681" text-rendering="inherit" font-size="12" dy=".8em" y="6639.5" x="992.5">slots属性是个二进制位数组, 这个数组的长度为2048个字节, 共16384个二进制位。</text><text id="kity_text_1682" text-rendering="inherit" font-size="12" dy=".8em" y="6657.5" x="992.5"></text><text id="kity_text_1683" text-rendering="inherit" font-size="12" dy=".8em" y="6675.5" x="992.5">如果slots数组中的值为1, 表示节点负责处理对应的槽。</text></g></g><g id="minder_node338"><g id="node_expander334" display="none" style="cursor: pointer;"><path id="kity_path_3096" fill="white" stroke="gray" d="M1446.5,6805.5A6,6,0,1,1,1434.5,6805.5A6,6,0,1,1,1446.5,6805.5"></path><path id="kity_path_3097" fill="none" stroke="gray"></path></g><path id="node_outline335" fill="none" stroke="none" d="M1022.5,6722.5h407a5,5,0,0,1,5,5v156a5,5,0,0,1,-5,5h-407a5,5,0,0,1,-5,-5v-156a5,5,0,0,1,5,-5z"></path><g id="node_text335" fill="black"><text id="kity_text_1685" text-rendering="inherit" font-size="12" dy=".8em" y="6727.5" x="1027.5">一个节点除了会将自己负责处理的槽记录在clusterNode结构的slots数组里, </text><text id="kity_text_1686" text-rendering="inherit" font-size="12" dy=".8em" y="6745.5" x="1027.5">还会降自己的slots数组通过消息发送给集群中的其他节点。</text><text id="kity_text_1687" text-rendering="inherit" font-size="12" dy=".8em" y="6763.5" x="1027.5"></text><text id="kity_text_1688" text-rendering="inherit" font-size="12" dy=".8em" y="6781.5" x="1027.5">clusterSate结构中的slots数组记录了集群中所有16384个槽的指派信息.</text><text id="kity_text_1689" text-rendering="inherit" font-size="12" dy=".8em" y="6799.5" x="1027.5">typedef struct clusterState {</text><text id="kity_text_1690" text-rendering="inherit" font-size="12" dy=".8em" y="6817.5" x="1027.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1691" text-rendering="inherit" font-size="12" dy=".8em" y="6835.5" x="1027.5">.&#xa0; &#xa0; clusterNode *slots[16384];</text><text id="kity_text_1692" text-rendering="inherit" font-size="12" dy=".8em" y="6853.5" x="1027.5">.&#xa0; &#xa0; // ...</text><text id="kity_text_1693" text-rendering="inherit" font-size="12" dy=".8em" y="6871.5" x="1027.5">} clusterState;</text></g></g><g id="minder_node339"><g id="node_expander338" style="cursor: pointer;"><path id="kity_path_3108" fill="white" stroke="gray" d="M1446.5,6981.5A6,6,0,1,1,1434.5,6981.5A6,6,0,1,1,1446.5,6981.5"></path><path id="kity_path_3109" fill="none" stroke="gray" d="M1436,6981.5L1445,6981.5"></path></g><path id="node_outline339" fill="none" stroke="none" d="M1060.5,6970.5h369a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-369a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text339" fill="black"><text id="kity_text_1701" text-rendering="inherit" font-size="12" dy=".8em" y="6975.5" x="1065.5">CLUSTER ADDSLOTES &lt;slot&gt; [slot&#xa0; ...] 命令负责将槽指派给当前节点</text></g></g><g id="minder_node340"><g id="node_expander335" display="none" style="cursor: pointer;"><path id="kity_path_3099" fill="white" stroke="gray" d="M1027.5,6929.5A6,6,0,1,1,1015.5,6929.5A6,6,0,1,1,1027.5,6929.5"></path><path id="kity_path_3100" fill="none" stroke="gray"></path></g><path id="node_outline336" fill="none" stroke="none" d="M687.5,6918.5h323a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-323a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text336" fill="black"><text id="kity_text_1695" text-rendering="inherit" font-size="12" dy=".8em" y="6923.5" x="692.5">遍历所有的输入槽, 如果已经被分配, 那么向客户端返回错误</text></g></g><g id="minder_node341"><g id="node_expander336" display="none" style="cursor: pointer;"><path id="kity_path_3102" fill="white" stroke="gray" d="M1027.5,6981.5A6,6,0,1,1,1015.5,6981.5A6,6,0,1,1,1027.5,6981.5"></path><path id="kity_path_3103" fill="none" stroke="gray"></path></g><path id="node_outline337" fill="none" stroke="none" d="M771.5,6970.5h239a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-239a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text337" fill="black"><text id="kity_text_1697" text-rendering="inherit" font-size="12" dy=".8em" y="6975.5" x="776.5">clusterState.slots[i] = clusterState.myself&#xa0;</text></g></g><g id="minder_node342"><g id="node_expander337" display="none" style="cursor: pointer;"><path id="kity_path_3105" fill="white" stroke="gray" d="M1027.5,7033.5A6,6,0,1,1,1015.5,7033.5A6,6,0,1,1,1027.5,7033.5"></path><path id="kity_path_3106" fill="none" stroke="gray"></path></g><path id="node_outline338" fill="none" stroke="none" d="M798.5,7022.5h212a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-212a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text338" fill="black"><text id="kity_text_1699" text-rendering="inherit" font-size="12" dy=".8em" y="7027.5" x="803.5">setSlotBit(clusterState.myself.slots, i)</text></g></g><g id="minder_node343"><g id="node_expander341" style="cursor: pointer;"><path id="kity_path_3117" fill="white" stroke="gray" d="M1542.5,7130.5A6,6,0,1,1,1530.5,7130.5A6,6,0,1,1,1542.5,7130.5"></path><path id="kity_path_3118" fill="none" stroke="gray" d="M1532,7130.5L1541,7130.5"></path></g><path id="node_outline342" fill="none" stroke="none" d="M1419.5,7119.5h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text342" fill="black"><text id="kity_text_1712" text-rendering="inherit" font-size="12" dy=".8em" y="7124.5" x="1424.5">在集群中执行命令</text></g></g><g id="minder_node344"><g id="node_expander340" display="none" style="cursor: pointer;"><path id="kity_path_3114" fill="white" stroke="gray" d="M1386.5,7130.5A6,6,0,1,1,1374.5,7130.5A6,6,0,1,1,1386.5,7130.5"></path><path id="kity_path_3115" fill="none" stroke="gray"></path></g><path id="node_outline341" fill="none" stroke="none" d="M812.5,7074.5h557a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-557a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z"></path><g id="node_text341" fill="black"><text id="kity_text_1705" text-rendering="inherit" font-size="12" dy=".8em" y="7079.5" x="817.5">数据库中的16384个槽都进行了指派后, 集群就会进入上线状态。(集群模式的节点只能使用第0号数据库)</text><text id="kity_text_1706" text-rendering="inherit" font-size="12" dy=".8em" y="7097.5" x="817.5"></text><text id="kity_text_1707" text-rendering="inherit" font-size="12" dy=".8em" y="7115.5" x="817.5">当客户端向节点发送命令时, 接受命令的节点会判断键属于哪个槽, </text><text id="kity_text_1708" text-rendering="inherit" font-size="12" dy=".8em" y="7133.5" x="817.5">如果槽不属于自己, 那么会发送MOVED指令引导客户端redirect到正确的节点</text><text id="kity_text_1709" text-rendering="inherit" font-size="12" dy=".8em" y="7151.5" x="817.5"></text><text id="kity_text_1710" text-rendering="inherit" font-size="12" dy=".8em" y="7169.5" x="817.5">节点通过该公式来计算key属于哪个槽: CRC(key) &amp; 16383</text></g></g><g id="minder_node345"><g id="node_expander342" display="none" style="cursor: pointer;"><path id="kity_path_3120" fill="white" stroke="gray" d="M1542.5,7227.5A6,6,0,1,1,1530.5,7227.5A6,6,0,1,1,1542.5,7227.5"></path><path id="kity_path_3121" fill="none" stroke="gray"></path></g><path id="node_outline343" fill="none" stroke="none" d="M1467.5,7216.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text343" fill="black"><text id="kity_text_1714" text-rendering="inherit" font-size="12" dy=".8em" y="7221.5" x="1472.5">重新分片</text></g></g><g id="minder_node346"><g id="node_expander343" display="none" style="cursor: pointer;"><path id="kity_path_3123" fill="white" stroke="gray" d="M1542.5,7279.5A6,6,0,1,1,1530.5,7279.5A6,6,0,1,1,1542.5,7279.5"></path><path id="kity_path_3124" fill="none" stroke="gray"></path></g><path id="node_outline344" fill="none" stroke="none" d="M1469.5,7268.5h56a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-56a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text344" fill="black"><text id="kity_text_1716" text-rendering="inherit" font-size="12" dy=".8em" y="7273.5" x="1474.5">ASK错误</text></g></g><g id="minder_node347"><g id="node_expander344" display="none" style="cursor: pointer;"><path id="kity_path_3126" fill="white" stroke="gray" d="M1542.5,7331.5A6,6,0,1,1,1530.5,7331.5A6,6,0,1,1,1542.5,7331.5"></path><path id="kity_path_3127" fill="none" stroke="gray"></path></g><path id="node_outline345" fill="none" stroke="none" d="M1431.5,7320.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text345" fill="black"><text id="kity_text_1718" text-rendering="inherit" font-size="12" dy=".8em" y="7325.5" x="1436.5">复制与故障转移</text></g></g><g id="minder_node348"><g id="node_expander345" display="none" style="cursor: pointer;"><path id="kity_path_3129" fill="white" stroke="gray" d="M1542.5,7383.5A6,6,0,1,1,1530.5,7383.5A6,6,0,1,1,1542.5,7383.5"></path><path id="kity_path_3130" fill="none" stroke="gray"></path></g><path id="node_outline346" fill="none" stroke="none" d="M1491.5,7372.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text346" fill="black"><text id="kity_text_1720" text-rendering="inherit" font-size="12" dy=".8em" y="7377.5" x="1496.5">消息</text></g></g><g id="minder_node349"><g id="node_expander355" style="cursor: pointer;"><path id="kity_path_3159" fill="white" stroke="gray" d="M1777.5,7601.5A6,6,0,1,1,1765.5,7601.5A6,6,0,1,1,1777.5,7601.5"></path><path id="kity_path_3160" fill="none" stroke="gray" d="M1767,7601.5L1776,7601.5"></path></g><path id="node_outline356" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1643.5,7588.5h118a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-118a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text356" fill="black"><text id="kity_text_1740" text-rendering="inherit" font-family="宋体,SimSun" font-size="14" dy=".8em" y="7594.5" x="1660.5">其他独立功能</text></g></g><g id="minder_node350"><g id="node_expander348" display="none" style="cursor: pointer;"><path id="kity_path_3138" fill="white" stroke="gray" d="M1612.5,7445.5A6,6,0,1,1,1600.5,7445.5A6,6,0,1,1,1612.5,7445.5"></path><path id="kity_path_3139" fill="none" stroke="gray"></path></g><path id="node_outline349" fill="none" stroke="none" d="M1525.5,7434.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text349" fill="black"><text id="kity_text_1726" text-rendering="inherit" font-size="12" dy=".8em" y="7439.5" x="1530.5">发布与订阅</text></g></g><g id="minder_node351"><g id="node_expander349" display="none" style="cursor: pointer;"><path id="kity_path_3141" fill="white" stroke="gray" d="M1612.5,7497.5A6,6,0,1,1,1600.5,7497.5A6,6,0,1,1,1612.5,7497.5"></path><path id="kity_path_3142" fill="none" stroke="gray"></path></g><path id="node_outline350" fill="none" stroke="none" d="M1561.5,7486.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text350" fill="black"><text id="kity_text_1728" text-rendering="inherit" font-size="12" dy=".8em" y="7491.5" x="1566.5">事务</text></g></g><g id="minder_node352"><g id="node_expander350" display="none" style="cursor: pointer;"><path id="kity_path_3144" fill="white" stroke="gray" d="M1612.5,7549.5A6,6,0,1,1,1600.5,7549.5A6,6,0,1,1,1612.5,7549.5"></path><path id="kity_path_3145" fill="none" stroke="gray"></path></g><path id="node_outline351" fill="none" stroke="none" d="M1539.5,7538.5h56a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-56a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text351" fill="black"><text id="kity_text_1730" text-rendering="inherit" font-size="12" dy=".8em" y="7543.5" x="1544.5">LUA脚本</text></g></g><g id="minder_node353"><g id="node_expander351" display="none" style="cursor: pointer;"><path id="kity_path_3147" fill="white" stroke="gray" d="M1612.5,7601.5A6,6,0,1,1,1600.5,7601.5A6,6,0,1,1,1612.5,7601.5"></path><path id="kity_path_3148" fill="none" stroke="gray"></path></g><path id="node_outline352" fill="none" stroke="none" d="M1561.5,7590.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text352" fill="black"><text id="kity_text_1732" text-rendering="inherit" font-size="12" dy=".8em" y="7595.5" x="1566.5">排序</text></g></g><g id="minder_node354"><g id="node_expander352" display="none" style="cursor: pointer;"><path id="kity_path_3150" fill="white" stroke="gray" d="M1612.5,7653.5A6,6,0,1,1,1600.5,7653.5A6,6,0,1,1,1612.5,7653.5"></path><path id="kity_path_3151" fill="none" stroke="gray"></path></g><path id="node_outline353" fill="none" stroke="none" d="M1513.5,7642.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text353" fill="black"><text id="kity_text_1734" text-rendering="inherit" font-size="12" dy=".8em" y="7647.5" x="1518.5">二进制位数组</text></g></g><g id="minder_node355"><g id="node_expander353" display="none" style="cursor: pointer;"><path id="kity_path_3153" fill="white" stroke="gray" d="M1612.5,7705.5A6,6,0,1,1,1600.5,7705.5A6,6,0,1,1,1612.5,7705.5"></path><path id="kity_path_3154" fill="none" stroke="gray"></path></g><path id="node_outline354" fill="none" stroke="none" d="M1525.5,7694.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text354" fill="black"><text id="kity_text_1736" text-rendering="inherit" font-size="12" dy=".8em" y="7699.5" x="1530.5">慢查询日志</text></g></g><g id="minder_node356"><g id="node_expander354" display="none" style="cursor: pointer;"><path id="kity_path_3156" fill="white" stroke="gray" d="M1612.5,7757.5A6,6,0,1,1,1600.5,7757.5A6,6,0,1,1,1612.5,7757.5"></path><path id="kity_path_3157" fill="none" stroke="gray"></path></g><path id="node_outline355" fill="none" stroke="none" d="M1549.5,7746.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text355" fill="black"><text id="kity_text_1738" text-rendering="inherit" font-size="12" dy=".8em" y="7751.5" x="1554.5">监视器</text></g></g></g></g></svg>